{
  "dataset_reader": {
      "class_name": "basic_classification_reader",
      "format": "json",
      "orient": "records",
      "lines": true,
      "data_path": "data/ai4eu-faq",
      "train": "train.json",
      "x": "Question",
      "y": "Answer"
    },
    "dataset_iterator": {
    "class_name": "basic_classification_iterator"
  },
  "chainer": {
    "in": "x",
    "in_y": "y",
    "pipe": [
      {
        "class_name": "torch_transformers_preprocessor",
        "vocab_file": "{TRANSFORMER}",
        "do_lower_case": true,
        "max_seq_length": 512,
        "in": "x",
        "out": "bert_features"
      },
      {
        "in": ["bert_features"],
        "out": ["q_vect"],
        "fit_on": ["bert_features"],
        "id": "tfidf_vec",
        "class_name": "sklearn_component",
        "save_path": "{MODEL_PATH}/tfidf.pkl",
        "load_path": "{MODEL_PATH}/tfidf.pkl",
        "model_class": "sklearn.feature_extraction.text:TfidfVectorizer",
        "infer_method": "transform"
      },
      {
        "id": "answers_vocab",
        "class_name": "simple_vocab",
        "fit_on": ["y"],
        "save_path": "{MODEL_PATH}/answers.dict",
        "load_path": "{MODEL_PATH}/answers.dict",
        "in": "y",
        "out": "y_ids"
      },
      {
        "in": "q_vect",
        "fit_on": [
          "q_vect",
          "y_ids"
        ],
        "out": ["y_pred_probas"],
        "class_name": "sklearn_component",
        "main": true,
        "save_path": "{MODEL_PATH}/logreg.pkl",
        "load_path": "{MODEL_PATH}/logreg.pkl",
        "model_class": "sklearn.linear_model:LogisticRegression",
        "infer_method": "predict_proba",
        "C": 1000,
        "penalty": "l2"
      },
      {
        "in": "y_pred_probas",
        "out": "y_pred_ids",
        "class_name": "proba2labels",
        "max_proba": true
      },
      {
        "in": "y_pred_ids",
        "out": "y_pred_answers",
        "ref": "answers_vocab"
      }
    ],
    "out": [
      "y_pred_answers"
    ]
  },
  "train": {
    "epochs": 100,
    "batch_size": 10,
    "metrics": [
      "f1_macro",
      "accuracy",
      {
        "name": "roc_auc",
        "inputs": [
          "y_onehot",
          "y_pred_probas"
        ]
      }
    ],
    "validation_patience": 20,
    "val_every_n_epochs": 1,
    "show_examples": false,
    "evaluation_targets": [
      "train",
      "valid",
      "test"
      ],
    "class_name": "torch_trainer"
  },
  "metadata": {
    "variables": {
      "TRANSFORMER": "sentence-transformers/paraphrase-xlm-r-multilingual-v1",
      "ROOT_PATH": "~/.deeppavlov",
      "DOWNLOADS_PATH": "{ROOT_PATH}/downloads",
      "MODELS_PATH": "{ROOT_PATH}/models",
      "MODEL_PATH": "{MODELS_PATH}/ai4eu/faq/torch/sentence-transformers/"
    },
    "requirements": [
      "{DEEPPAVLOV_PATH}/requirements/pytorch.txt",
      "{DEEPPAVLOV_PATH}/requirements/transformers.txt"
    ]
  }
}
