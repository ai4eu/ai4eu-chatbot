{
  "response": {
    "search_status": 200,
    "items": [
      {
        "_source": {
          "title": "ECO: Efficient Convolution Operators for Tracking | Papers With Code\n\n",
          "lemma_title": "ECO efficient Convolution Operators track Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\nmartin-danelljan/ECO\n\n536\n\n\\-\n\nfengyang95/pyCFTrackers\n\n309\n\n\\-\n\n       Mark the official implementation from paper authors\n\n√ó\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- Visual Object Tracking\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \nVisual Object Tracking  TrackingNet  ECO  Precision  48.86    5  \\-  \nVisual Object Tracking  TrackingNet  ECO  Normalized Precision  62.14    5  \\-  \nVisual Object Tracking  TrackingNet  ECO  Accuracy  56.13    5  \\-  \nVisual Object Tracking  VOT2017/18  ECO  Expected Average Overlap (EAO)  0.280\n  11  \\-  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * VISUAL OBJECT TRACKING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * VISUAL OBJECT TRACKING \\- \n\n      Add a method\n\n√ó\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  ü¶° Badges\n\n* * *\n\nInclude the markdown at the top of your GitHub `README.md` file to showcase\nthe performance of the model.\n\nBadges are live and will be dynamically updated with the latest ranking of\nthis paper.\n\nBadge  Markdown  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/eco-\nefficient-convolution-operators-for/visual-object-tracking-on-\ntrackingnet)](https://paperswithcode.com/sota/visual-object-tracking-on-\ntrackingnet?p=eco-efficient-convolution-operators-for)`  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/eco-\nefficient-convolution-operators-for/visual-object-tracking-on-\nvot201718)](https://paperswithcode.com/sota/visual-object-tracking-on-\nvot201718?p=eco-efficient-convolution-operators-for)`  \n  \n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nOTB OTB-2015 VOT2016\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  ECO: Efficient Convolution Operators for Tracking\n\nCVPR 2017 ‚Ä¢  Martin Danelljan ‚Ä¢  Goutam Bhat ‚Ä¢  Fahad Shahbaz Khan ‚Ä¢  Michael\nFelsberg\n\nIn recent years, Discriminative Correlation Filter (DCF) based methods have\nsignificantly advanced the state-of-the-art in tracking. However, in the\npursuit of ever increasing tracking performance, their characteristic speed\nand real-time capability have gradually faded... Further, the increasingly\ncomplex models, with massive number of trainable parameters, have introduced\nthe risk of severe over-fitting. In this work, we tackle the key causes behind\nthe problems of computational complexity and over-fitting, with the aim of\nsimultaneously improving both speed and performance. We revisit the core DCF\nformulation and introduce: (i) a factorized convolution operator, which\ndrastically reduces the number of parameters in the model; (ii) a compact\ngenerative model of the training sample distribution, that significantly\nreduces memory and time complexity, while providing better diversity of\nsamples; (iii) a conservative model update strategy with improved robustness\nand reduced complexity. We perform comprehensive experiments on four\nbenchmarks: VOT2016, UAV123, OTB-2015, and TempleColor. When using expensive\ndeep features, our tracker provides a 20-fold speedup and achieves a 13.0%\nrelative gain in Expected Average Overlap compared to the top ranked method in\nthe VOT2016 challenge. Moreover, our fast variant, using hand-crafted\nfeatures, operates at 60 Hz on a single CPU, while obtaining 65.0% AUC on\nOTB-2015. (read more)\n\n__PDF Abstract  __CVPR 2017 PDF CVPR 2017 Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * VISUAL OBJECT TRACKING\n\n  Datasets\n\n__Edit\n\n* * *\n\nOTB  OTB-2015  VOT2016\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\nRanked  5 on  Visual Object Tracking on TrackingNet\n\n     __Get a GitHub badge\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK RESULT BENCHMARK  \nVisual Object Tracking  VOT2017/18  ECO  Expected Average Overlap (EAO)  0.280\n  11\n\nCompare  \n  \n  Results from Other Papers\n\n* * *\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK SOURCE PAPER COMPARE  \nVisual Object Tracking  TrackingNet  ECO  Precision  48.86    5\n\nSee all  \n  \nNormalized Precision  62.14    5\n\nSee all  \n  \nAccuracy  56.13    5\n\nSee all  \n  \n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \nü§ñ No Methods Found Help the community by adding them if they're not listed;\ne.g. Deep Residual Learning for Image Recognition uses ResNet  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper martin-danelljan ECO 536 fengyang95 pycftracker 309 mark official implementation paper author martin-danelljan ECO 536 pycftracker 309 official implementation multiple official implementation submit add new evaluation result task visual object tracking list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove visual object tracking TrackingNet ECO Precision 48.86 5 visual object tracking TrackingNet ECO Normalized Precision 62.14 5 visual object tracking TrackingNet ECO accuracy 56.13 5 visual object tracking VOT2017/18 ECO expect Average Overlap EAO 0.280 11 add task √ó attach task visual object tracking add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task visual object track add method add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method ü¶° badge include markdown top GitHub README.md file showcase performance model badge live will update late ranking paper Badge Markdown pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge eco- efficient-convolution-operators-for visual-object-tracking-on- trackingnet https://paperswithcode.com sota visual-object-tracking-on- trackingnet?p eco-efficient-convolution-operators-for pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge eco- efficient-convolution-operators-for visual-object-tracking-on- vot201718 https://paperswithcode.com sota visual-object-tracking-on- vot201718?p eco-efficient-convolution-operators-for Edit Datasets add remove dataset introduce paper add remove other dataset use paper OTB OTB-2015 vot2016 paper introduce new dataset _ _ add new dataset save eco efficient Convolution Operators track CVPR 2017 ‚Ä¢ Martin Danelljan ‚Ä¢ Goutam Bhat ‚Ä¢ Fahad Shahbaz Khan ‚Ä¢ Michael Felsberg recent year Discriminative Correlation Filter DCF base method advance state-of-the-art tracking pursuit increase tracking performance characteristic speed real-time capability fade complex model massive number trainable parameter introduce risk severe over-fitting work tackle key cause problem computational complexity over-fitting aim improve speed performance revisit core DCF formulation introduce i factorized convolution operator reduce number parameter model compact generative model training sample distribution reduce memory time complexity provide well diversity sample conservative model update strategy improve robustness reduced complexity perform comprehensive experiment four benchmark VOT2016 uav123 OTB-2015 TempleColor use expensive deep feature tracker provide 20-fold speedup achieve 13.0 relative gain expect Average Overlap compare top rank method vot2016 challenge fast variant use hand-crafted feature operate 60 hz single cpu obtain 65.0 AUC OTB-2015 read _ _ PDF Abstract _ _ CVPR 2017 PDF CVPR 2017 Abstract code _ _ edit add remove Mark official martin-danelljan ECO 536 pycftracker 309 martin-danelljan ECO 536 pycftracker 309 task _ _ edit add remove visual object tracking dataset _ _ edit OTB otb-2015 vot2016 result Paper _ _ edit rank 5 visual object track TrackingNet _ _ GitHub badge task DATASET model metric name metric value global RANK result benchmark visual object tracking VOT2017/18 ECO expect Average Overlap EAO 0.280 11 compare result other Papers task DATASET model metric name metric value global rank source paper compare visual object tracking TrackingNet ECO Precision 48.86 5 see Normalized Precision 62.14 5 see accuracy 56.13 5 see method use Paper _ _ edit add remove method type ü§ñ Methods find Help community add list Deep Residual Learning Image Recognition use ResNet contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "√ó  ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "√ó  ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "README.md",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Badges",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "efficient-convolution-operators-for",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "efficient-convolution-operators-for",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "OTB OTB-2015 VOT2016",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Martin Danelljan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Bhat",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Fahad Shahbaz Khan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Michael Felsberg",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "recent years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Discriminative Correlation Filter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "VOT2016",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "UAV123",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "OTB-2015",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "60 Hz",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "OTB-2015",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Normalized Precision",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Accuracy",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "visual",
              "property": "object",
              "value": "tracking",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "significantly advance",
              "value": "state-of-the-art",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "increasingly complex model",
              "property": "introduce",
              "value": "risk",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "tackle",
              "value": "key cause",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "revisit",
              "value": "core DCF formulation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "perform",
              "value": "comprehensive experiment",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "tracker",
              "property": "provide",
              "value": "20-fold speedup",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Overlap",
              "property": "compare to",
              "value": "method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "fast variant",
              "property": "operate at",
              "value": "60 hz",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "object",
              "property": "track on",
              "value": "TrackingNet",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "         method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Deep Residual Learning",
              "property": "use",
              "value": "ResNet",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "EAO",
              "property": "",
              "value": "expect Average Overlap",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "DCF",
              "property": "",
              "value": "Discriminative Correlation Filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "EAO",
              "property": "",
              "value": "expect Average Overlap",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2791069569066167,
                0.2380798738449812,
                0.21438411343842745,
                0.06667243223637342,
                0.06697441171854734,
                0.08193171676248312,
                0.037399765104055405,
                0.015450757928192616
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2523683328181505,
                0.2846635989844799,
                0.12179230060428381,
                0.09586088359355927,
                0.1281764218583703,
                0.060712493024766445,
                0.041333386674523354,
                0.015092547982931137
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.21985260490328074,
                0.2824602145701647,
                0.21462023258209229,
                0.11517398059368134,
                0.06788383983075619,
                0.05048944894224405,
                0.017753349617123604,
                0.031766414642333984
              ]
            },
            {
              "labels": [
                "deep learning",
                "computer vision",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.33835532423108816,
                0.19003452733159065,
                0.19808251224458218,
                0.128807770088315,
                0.06215498223900795,
                0.05181572400033474,
                0.010790429078042507,
                0.01995875360444188
              ]
            },
            {
              "labels": [
                "natural language processing",
                "robotic",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.28153412602841854,
                0.2572300210595131,
                0.15746625512838364,
                0.13448332250118256,
                0.08929645270109177,
                0.039959156420081854,
                0.014740699902176857,
                0.02529002260416746
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.36785490065813065,
                0.19174085790291429,
                0.1355793382972479,
                0.07626556698232889,
                0.06321312673389912,
                0.12107548303902149,
                0.013006316497921944,
                0.03126446809619665
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "computer vision",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.3319245455786586,
                0.21531949657946825,
                0.1623413059860468,
                0.12677808478474617,
                0.043055337853729725,
                0.060490308329463005,
                0.043613823130726814,
                0.016477230936288834
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "computer vision",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.22618352808058262,
                0.10080304834991693,
                0.1197053100913763,
                0.22902759723365307,
                0.15175600722432137,
                0.10831497609615326,
                0.04415582865476608,
                0.020053740590810776
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.1995834531262517,
                0.2840989585965872,
                0.2257087053731084,
                0.10864214785397053,
                0.056504388339817524,
                0.028541622683405876,
                0.05452119931578636,
                0.042399522848427296
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3557768166065216,
                0.2561328951269388,
                0.12476826272904873,
                0.1068305829539895,
                0.05976171512156725,
                0.04412034805864096,
                0.04085823521018028,
                0.011751093901693821
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.30113834887742996,
                0.29823717242106795,
                0.17409673240035772,
                0.05522982496768236,
                0.08584135212004185,
                0.033514185808598995,
                0.013878360390663147,
                0.038063996471464634
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3775497693568468,
                0.20246324967592955,
                0.1189485713839531,
                0.13767898082733154,
                0.05816175043582916,
                0.0568819884210825,
                0.01334685180336237,
                0.03496874962002039
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.34147914592176676,
                0.2227809727191925,
                0.2138592624105513,
                0.10876133851706982,
                0.04212559666484594,
                0.012343489564955235,
                0.032650177367031574,
                0.02600007364526391
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "natural language processing",
                "neuromorphic computing",
                "robotic",
                "internet of things"
              ],
              "scores": [
                0.44945337576791644,
                0.29428473685402423,
                0.21866371482610703,
                0.02541247953195125,
                0.006791370891733095,
                0.0012976747239008546,
                0.001964241499081254,
                0.002132447174517438
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.998069167137146,
              "spans": [
                {
                  "approx_length": 72,
                  "score": 0.998069167137146,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8387852036035978,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.7519263029098511,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 305,
                  "score": 0.9979187846183777,
                  "spanid": 2
                },
                {
                  "approx_length": 231,
                  "score": 0.9990814924240112,
                  "spanid": 3
                },
                {
                  "approx_length": 148,
                  "score": 0.9918054938316345,
                  "spanid": 4
                },
                {
                  "approx_length": 347,
                  "score": 0.9888420701026917,
                  "spanid": 5
                },
                {
                  "approx_length": 202,
                  "score": 0.9986692667007446,
                  "spanid": 6
                },
                {
                  "approx_length": 292,
                  "score": 0.9796426296234131,
                  "spanid": 7
                },
                {
                  "approx_length": 158,
                  "score": 0.997466504573822,
                  "spanid": 8
                },
                {
                  "approx_length": 213,
                  "score": 0.9987664222717285,
                  "spanid": 9
                },
                {
                  "approx_length": 207,
                  "score": 0.9968888163566589,
                  "spanid": 10
                },
                {
                  "approx_length": 223,
                  "score": 0.9981539845466614,
                  "spanid": 11
                },
                {
                  "approx_length": 379,
                  "score": 0.8867576122283936,
                  "spanid": 13
                },
                {
                  "approx_length": 310,
                  "score": 0.9170502424240112,
                  "spanid": 15
                },
                {
                  "approx_length": 326,
                  "score": 0.9984300136566162,
                  "spanid": 16
                },
                {
                  "approx_length": 340,
                  "score": 0.8379002809524536,
                  "spanid": 17
                },
                {
                  "approx_length": 328,
                  "score": 0.5473277568817139,
                  "spanid": 18
                },
                {
                  "approx_length": 252,
                  "score": 0.9830255508422852,
                  "spanid": 20
                },
                {
                  "approx_length": 253,
                  "score": 0.9960092306137085,
                  "spanid": 21
                },
                {
                  "approx_length": 210,
                  "score": 0.9754774570465088,
                  "spanid": 22
                },
                {
                  "approx_length": 333,
                  "score": 0.9853234887123108,
                  "spanid": 23
                },
                {
                  "approx_length": 235,
                  "score": 0.9981154799461365,
                  "spanid": 24
                },
                {
                  "approx_length": 215,
                  "score": 0.9865387678146362,
                  "spanid": 25
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.09152295726996201,
              "spans": [
                {
                  "approx_length": 277,
                  "score": 0.7118383049964905,
                  "spanid": 12
                },
                {
                  "approx_length": 261,
                  "score": 0.6783273220062256,
                  "spanid": 14
                },
                {
                  "approx_length": 330,
                  "score": 0.9894312620162964,
                  "spanid": 19
                }
              ]
            }
          ],
          "summary": [
            " ECO :  Efficient Convolution Operators for Tracking for Tracking . ECO : E",
            " Official code from paper authors Submit Remove a code repository from this paper . Add a new code entry for this paper to GitHub or BitBucket . Mark the official implementation of the paper authors . There is no official",
            " Data evaluated on Submit Add a new evaluation result row to the list . Add a task to add a task . Use a new task to test your knowledge base's ability to perform visual object tracking . Add tasks to",
            " New method name  (e . g .  ReLU ) New method full name (e. g . Rectified Linear Unit) New Method full name  :  Paper where method was first introduced  :",
            " Badges are live and will be dynamically updated with the latest ranking of this paper . Include the markdown at the top of your GitHub GitHub .",
            " In recent years,  Discriminative Correlation Filter (DCF ) based methods have significantly advanced the state - of - the - art in tracking . However, in the pursuit of ever increasing tracking performance",
            " Our tracker provides a 20 - fold speedup and achieves a 13 . 0% relative gain in Expected Average Overlap compared to the top ranked method in the VOT2016 challenge . We perform comprehensive experiments on",
            " TASK DATASET MODEL METRIC METRIC NAME METRIC VALUE GLOBAL RANK RESULT BENCHMARK Visual Object Tracking VOT2017 / 18 ECO Expected Average Over"
          ],
          "text_suggester": [
            {
              "input": "eco",
              "weight": 27
            },
            {
              "input": "efficient convolution operators",
              "weight": 0
            },
            {
              "input": "60 hz",
              "weight": 13
            },
            {
              "input": "a change",
              "weight": 0
            },
            {
              "input": "a code repository",
              "weight": 0
            },
            {
              "input": "a compact generative model",
              "weight": 0
            },
            {
              "input": "a conservative model update strategy",
              "weight": 0
            },
            {
              "input": "a factorized convolution operator",
              "weight": 0
            },
            {
              "input": "a free resource",
              "weight": 0
            },
            {
              "input": "a github badge",
              "weight": 0
            },
            {
              "input": "a method",
              "weight": 9
            },
            {
              "input": "a new account",
              "weight": 0
            },
            {
              "input": "a new category",
              "weight": 0
            },
            {
              "input": "a new code entry",
              "weight": 0
            },
            {
              "input": "a new dataset",
              "weight": 9
            },
            {
              "input": "a new method",
              "weight": 0
            },
            {
              "input": "a new task",
              "weight": 0
            },
            {
              "input": "a single cpu",
              "weight": 0
            },
            {
              "input": "a task",
              "weight": 19
            },
            {
              "input": "abstract",
              "weight": 0
            },
            {
              "input": "abstract code",
              "weight": 0
            },
            {
              "input": "add a new category",
              "weight": 17
            },
            {
              "input": "add remove mark official",
              "weight": 28
            },
            {
              "input": "all methods",
              "weight": 0
            },
            {
              "input": "all normalized precision",
              "weight": 0
            },
            {
              "input": "all data",
              "weight": 0
            },
            {
              "input": "attached tasks",
              "weight": 0
            },
            {
              "input": "average",
              "weight": 6
            },
            {
              "input": "badge",
              "weight": 9
            },
            {
              "input": "badge markdown",
              "weight": 0
            },
            {
              "input": "badges",
              "weight": 0
            },
            {
              "input": "better diversity",
              "weight": 0
            },
            {
              "input": "bitbucket url",
              "weight": 0
            },
            {
              "input": "both speed",
              "weight": 0
            },
            {
              "input": "code",
              "weight": 9
            },
            {
              "input": "compare",
              "weight": 11
            },
            {
              "input": "complexity",
              "weight": 7
            },
            {
              "input": "comprehensive experiments",
              "weight": 0
            },
            {
              "input": "computational complexity",
              "weight": 0
            },
            {
              "input": "create",
              "weight": 5
            },
            {
              "input": "create a new account",
              "weight": 23
            },
            {
              "input": "cvpr",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 12
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 9
            },
            {
              "input": "deep residual learning",
              "weight": 0
            },
            {
              "input": "deep residual learning for image recognition",
              "weight": 4
            },
            {
              "input": "discriminative correlation filter",
              "weight": 4
            },
            {
              "input": "edit",
              "weight": 45
            },
            {
              "input": "edit datasets",
              "weight": 0
            },
            {
              "input": "expect",
              "weight": 6
            },
            {
              "input": "expect average overlap compare",
              "weight": 31
            },
            {
              "input": "expected average overlap",
              "weight": 0
            },
            {
              "input": "expensive deep features",
              "weight": 0
            },
            {
              "input": "extra training data",
              "weight": 0
            },
            {
              "input": "fahad shahbaz khan",
              "weight": 0
            },
            {
              "input": "first",
              "weight": 4
            },
            {
              "input": "four",
              "weight": 4
            },
            {
              "input": "four benchmarks",
              "weight": 0
            },
            {
              "input": "full name",
              "weight": 0
            },
            {
              "input": "github",
              "weight": 0
            },
            {
              "input": "gitlab",
              "weight": 0
            },
            {
              "input": "global",
              "weight": 12
            },
            {
              "input": "global rank source paper",
              "weight": 0
            },
            {
              "input": "goutam bhat",
              "weight": 0
            },
            {
              "input": "iii",
              "weight": 4
            },
            {
              "input": "image recognition",
              "weight": 0
            },
            {
              "input": "implementation",
              "weight": 7
            },
            {
              "input": "improved robustness",
              "weight": 0
            },
            {
              "input": "introduce",
              "weight": 5
            },
            {
              "input": "late trending ml paper",
              "weight": 54
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "list",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 0
            },
            {
              "input": "martin danelljan",
              "weight": 0
            },
            {
              "input": "massive number",
              "weight": 0
            },
            {
              "input": "memory and time complexity",
              "weight": 0
            },
            {
              "input": "method",
              "weight": 9
            },
            {
              "input": "methods",
              "weight": 0
            },
            {
              "input": "methods rc2020 trends",
              "weight": 0
            },
            {
              "input": "metric",
              "weight": 9
            },
            {
              "input": "metric name",
              "weight": 0
            },
            {
              "input": "metric name metric value",
              "weight": 0
            },
            {
              "input": "metric name metric value global rank result benchmark",
              "weight": 0
            },
            {
              "input": "metric value",
              "weight": 0
            },
            {
              "input": "michael felsberg",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 7
            },
            {
              "input": "name",
              "weight": 7
            },
            {
              "input": "name metric value",
              "weight": 0
            },
            {
              "input": "new",
              "weight": 6
            },
            {
              "input": "new method",
              "weight": 0
            },
            {
              "input": "new method full name",
              "weight": 33
            },
            {
              "input": "new method name",
              "weight": 0
            },
            {
              "input": "new task name",
              "weight": 0
            },
            {
              "input": "no match",
              "weight": 0
            },
            {
              "input": "no methods",
              "weight": 0
            },
            {
              "input": "no official implementation",
              "weight": 0
            },
            {
              "input": "normalized precision",
              "weight": 0
            },
            {
              "input": "object",
              "weight": 8
            },
            {
              "input": "official",
              "weight": 7
            },
            {
              "input": "official code",
              "weight": 0
            },
            {
              "input": "other datasets",
              "weight": 0
            },
            {
              "input": "other papers",
              "weight": 0
            },
            {
              "input": "our fast variant",
              "weight": 0
            },
            {
              "input": "our tracker",
              "weight": 0
            },
            {
              "input": "overlap",
              "weight": 6
            },
            {
              "input": "paper",
              "weight": 18
            },
            {
              "input": "paper authors",
              "weight": 0
            },
            {
              "input": "paper with code",
              "weight": 4
            },
            {
              "input": "papers",
              "weight": 0
            },
            {
              "input": "parameters",
              "weight": 0
            },
            {
              "input": "parent task",
              "weight": 0
            },
            {
              "input": "pdf",
              "weight": 0
            },
            {
              "input": "pdf cvpr",
              "weight": 0
            },
            {
              "input": "performance",
              "weight": 9
            },
            {
              "input": "playing games reasoning robots",
              "weight": 0
            },
            {
              "input": "portals",
              "weight": 0
            },
            {
              "input": "precision",
              "weight": 0
            },
            {
              "input": "previous issues",
              "weight": 0
            },
            {
              "input": "pycftracker",
              "weight": 14
            },
            {
              "input": "rank",
              "weight": 6
            },
            {
              "input": "recent year",
              "weight": 4
            },
            {
              "input": "recent years",
              "weight": 0
            },
            {
              "input": "reduced complexity",
              "weight": 0
            },
            {
              "input": "remove",
              "weight": 6
            },
            {
              "input": "remove mark official",
              "weight": 0
            },
            {
              "input": "research developments",
              "weight": 0
            },
            {
              "input": "resnet",
              "weight": 0
            },
            {
              "input": "result",
              "weight": 9
            },
            {
              "input": "results",
              "weight": 0
            },
            {
              "input": "samples",
              "weight": 0
            },
            {
              "input": "see",
              "weight": 18
            },
            {
              "input": "something",
              "weight": 9
            },
            {
              "input": "speech time series",
              "weight": 0
            },
            {
              "input": "submit",
              "weight": 4
            },
            {
              "input": "task",
              "weight": 9
            },
            {
              "input": "task dataset model",
              "weight": 0
            },
            {
              "input": "templecolor",
              "weight": 0
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 0
            },
            {
              "input": "the aim",
              "weight": 0
            },
            {
              "input": "the community",
              "weight": 9
            },
            {
              "input": "the core dcf formulation",
              "weight": 0
            },
            {
              "input": "the increasingly complex models",
              "weight": 0
            },
            {
              "input": "the key causes",
              "weight": 0
            },
            {
              "input": "the latest ranking",
              "weight": 0
            },
            {
              "input": "the latest trending ml papers",
              "weight": 0
            },
            {
              "input": "the list",
              "weight": 19
            },
            {
              "input": "the markdown",
              "weight": 0
            },
            {
              "input": "the metric",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 9
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the official implementation",
              "weight": 0
            },
            {
              "input": "the paper",
              "weight": 0
            },
            {
              "input": "the performance",
              "weight": 0
            },
            {
              "input": "the problems",
              "weight": 0
            },
            {
              "input": "the pursuit",
              "weight": 0
            },
            {
              "input": "the pwc newsletter",
              "weight": 0
            },
            {
              "input": "the risk",
              "weight": 0
            },
            {
              "input": "the top",
              "weight": 0
            },
            {
              "input": "the top ranked method",
              "weight": 0
            },
            {
              "input": "the training sample distribution",
              "weight": 0
            },
            {
              "input": "the vot2016 challenge",
              "weight": 0
            },
            {
              "input": "their characteristic speed",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "this paper",
              "weight": 37
            },
            {
              "input": "this work",
              "weight": 0
            },
            {
              "input": "track",
              "weight": 5
            },
            {
              "input": "tracking",
              "weight": 9
            },
            {
              "input": "tracking performance",
              "weight": 0
            },
            {
              "input": "trackingnet",
              "weight": 72
            },
            {
              "input": "trainable parameters",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 6
            },
            {
              "input": "value",
              "weight": 10
            },
            {
              "input": "visual",
              "weight": 8
            },
            {
              "input": "visual object tracking",
              "weight": 37
            },
            {
              "input": "visual object tracking trackingnet",
              "weight": 100
            },
            {
              "input": "vot2016",
              "weight": 18
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "ü¶° badges",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/eco-efficient-convolution-operators-for",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.010853785351644746,
        "_index": "cache_index",
        "_id": "cacheid_e9ab0f1f5aed27e07689d931947df44d",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "p=eco-efficient-convolution-operators-for)`  \n  \n      Edit <b>Datasets</b>\n\n√ó\n\nAdd or remove <b>datasets</b>  introduced",
            "a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.010570563431168689,
        "see_also": [
          {
            "doc_id": "cacheid_7f6644f27571fff23f88c52e040eadae",
            "source_doc_id": "entity:user/1027:en",
            "title": "peter gentsch"
          },
          {
            "doc_id": "cacheid_2ffe2562b0a3877f716b4ac9cff557e0",
            "source_doc_id": "entity:user/1278:en",
            "title": "sungduk choi"
          },
          {
            "doc_id": "cacheid_5d47f68e2906d358aaaa1a28314c6556",
            "source_doc_id": "https://en.wikipedia.org/wiki/Talk:Sorting_algorithm",
            "title": "Talk:Sorting algorithm - Wikipedia\n\n"
          },
          {
            "doc_id": "cacheid_ac6149ba3339974303dd816e348b8b83",
            "source_doc_id": "entity:user/2050:en",
            "title": "daniele diodati"
          },
          {
            "doc_id": "cacheid_66083482f6df4584b78b9ba34e50195c",
            "source_doc_id": "entity:user/799:en",
            "title": "albert villanova del moral"
          }
        ],
        "semantic_content": " . efficient - convolution - operators - for / visual - object - tracking - on -  vot201718 )  ]  ( https :  /  / paperswithcode . com / sota / visual - object - tracking - on -  vot201718 ? p = eco - efficient - convolution - operators - for )  `  Edit Datasets √ó . Deep Residual Learning for Image Recognition uses ResNet Contact us on :  hello @ paperswithcode . com .  Papers With Code is a free resource with all data licensed under CC - BY - SA .  Terms Privacy Cookies policy",
        "short_answer": [
          {
            "score": 0.09745527058839798,
            "start": 299,
            "end": 312,
            "answer": "Edit Datasets"
          }
        ]
      },
      {
        "_source": {
          "title": "Company News - Appen\n\n",
          "lemma_title": "Company News - Appen",
          "content": "[NEW]\n\nView our 2020 Annual Report\n\n  * Investors\n\n__\n\n  * Client Login\n\n__\n\n  * Language\n\n__\n\n    * Chinese\n\n__\n\n    * Japanese\n\n__\n\n  * Solutions\n    * What We Deliver\n      * Training Data\n      * Data Collection & Datasets\n    * How We Deliver\n      * Platform Overview\n      * Crowd Management\n      * Expertise\n    * View All Solutions\n  * Platform\n    *       * Platform Overview\n      * Annotation Capabilities\n      * Enterprise Capabilities\n      * Smart Labeling\n      * Workflows\n  * Industries\n    *       * Technology\n      * Automotive\n      * Financial Services\n      * Healthcare\n      * Government\n      * Retail\n      * View All Industries\n  * Company\n    *       * About Us\n      * Leadership\n      * Investors\n      * Environmental, Social, and Governance\n      * Jobs\n      * Press Room\n      * Crowd Wellness\n  * Resources\n    * AI Resource Center\n      * Blog\n      * Case Studies\n      * eBooks\n      * Webinars\n      * Whitepapers\n      * Research Papers\n      * Tools\n        * AI Readiness Assessment\n        * Insights Explorer\n    *       * Datasets\n        * Off-the-Shelf Datasets\n        * Open Source Datasets\n      * Community\n        * Partners\n        * Developers\n        * Customers\n    * All Resources\n\n* * *\n\nJobs\n\nContact Sales\n\n* * *\n\nContact\n\n    Appen Recognized in Deloitte‚Äôs Technology Fast 50 & 500\n\nAppen Celebrates its Sixth Year of Representation in the Deloitte Technology\nFast 50 Australia Awards After an exciting year of growth, Appen has been\nrecognized for the sixth time in the Deloitte Technology Fast 50 Australia\nAwards. This year marks the second year that we have received recognition in\nthe leadership category. The Leadership category recognizes technology\ncompanies who have ‚Ä¶\n\nRead More\n\nAwardsCompany NewsDeloitte Technology Awards\n\n    Appen Recognized in the 2018 Deloitte Technology Fast 50 Australia Awards\nfor Leadership\n\nFollowing 102% growth in annual revenue from the previous year, Appen\ncelebrates our fifth year of recognition in the Deloitte Technology Fast 50\nAustralia Awards. In 2018, Appen was newly awarded in the Leadership category,\nwhich recognizes technology companies who have generated cumulative operating\nrevenues greater than $50M. ‚ÄúIt‚Äôs an honor to receive this award from\nDeloitte.‚Äù said Mark Brayan, ‚Ä¶\n\nRead More\n\nCompany News\n\n    Creating Structured Data for Machine Learning at Appen\n\nTammy Garves and Phil Hall are Appen‚Äôs Senior Vice Presidents, the\ncounterparts at the helm of the two main divisions of our company. Tammy leads\nour Content Relevance team. Phil heads up Language Resources. We caught up\nwith them recently to talk about the need for structured data for machine\nlearning. They also touch on industry trends, predictions, and why ‚Ä¶\n\nRead More\n\nCompany NewsExecutive LeadershipProject Management ExpertiseSpeech Recognition\n\n    Meet Us on the Road in November\n\nThis November, we‚Äôre making stops on both coasts to share our high-quality\ndata expertise. Planning to attend one of these events and interested in\nspeaking with our team? Contact us to set up a meeting, or stop by our booth\nto learn how Appen can help you solve your data challenges. Open Data Science\nConference ‚Äì November 3-4, Hyatt Regency ‚Ä¶\n\nRead More\n\nCompany Newsevents\n\n    Appen‚Äôs Growth Fueled by Tech Trends and Executive Leadership\n\nAppen's growth trajectory has kept pace with a flourishing tech industry,\nfueled by the latest tech trends and executive leadership. Read more.\n\nCompany NewsLeadership\n\n    Worldwide Business with kathy ireland¬Æ: See Appen Discuss its Role in\nEnhancing the eCommerce Shopping Experience\n\nMark Brayan discusses how Appen can help online retailers improve their on-\nsite search and chatbot capabilities through high quality data, leading to\ndeeper customer relationships.\n\nCompany NewsExecutive Leadership\n\nSearch\n\n     Recent Posts\n\n  * AI Model Maintenance: A Guide to Managing a Model Post-Production\n  * What is AI-Powered Search Relevance?\n  * What Is Image Annotation and How Is It Used To Build AI Models?\n  * Leveraging AI and Machine Learning for Content Moderation\n  * Launching AI in the Real World\n\n     Recent Comments\n\n  * Alcino on Appen to Acquire Leapforce\n  * Here4Freedom on Appen to Acquire Leapforce\n  * Firmo I Saka on Appen to Acquire Leapforce\n  * Julie Bailey on Appen to Acquire Leapforce\n  * Dennis Thompson on Appen to Acquire Leapforce\n\n     Archives\n\n  * February 2021\n  * January 2021\n  * December 2020\n  * November 2020\n  * October 2020\n  * September 2020\n  * August 2020\n  * July 2020\n  * June 2020\n  * May 2020\n  * April 2020\n  * March 2020\n  * February 2020\n  * January 2020\n  * December 2019\n  * November 2019\n  * October 2019\n  * September 2019\n  * August 2019\n  * July 2019\n  * June 2019\n  * May 2019\n  * April 2019\n  * March 2019\n  * February 2019\n  * January 2019\n  * December 2018\n  * November 2018\n  * October 2018\n  * September 2018\n  * August 2018\n  * July 2018\n  * June 2018\n  * May 2018\n  * April 2018\n  * March 2018\n  * February 2018\n  * January 2018\n  * December 2017\n  * November 2017\n  * October 2017\n  * September 2017\n  * August 2017\n  * July 2017\n  * June 2017\n  * May 2017\n  * April 2017\n  * March 2017\n  * February 2017\n  * January 2017\n  * November 2016\n  * October 2016\n  * August 2016\n  * July 2016\n  * February 2016\n  * December 2015\n  * November 2015\n  * June 2015\n  * January 2015\n  * December 2014\n  * September 2014\n\n     Categories\n\n  * AI & Machine Learning\n  * Automotive\n  * Blog\n  * Business\n  * Case Studies\n  * CONTENT TYPES\n  * eBooks\n  * Financial Services\n  * Government\n  * Healthcare\n  * INDUSTRIES\n  * Industry Insights\n  * Life at Appen\n  * Machine Learning\n  * Open Source Datasets\n  * Press Releases\n  * Research Papers\n  * Retail\n  * ROLES\n  * Technology\n  * Technology\n  * Webinars\n  * Whitepapers\n\n     Meta\n\n  * Log in\n  * Entries feed\n  * Comments feed\n  * WordPress.org\n\nFind out how reliable training data can give you the confidence to deploy AI\n\nGet Started Today\n\n* * *\n\n* * *\n\n* * *\n\n  * Solutions\n\n    * Training Data\n\n    * Data Collection & Datasets\n\n  * Delivery\n\n    * Platform Overview\n\n    * Crowd Management\n\n    * Expertise\n\n  * Industries\n\n    * Technology\n\n    * Automotive\n\n    * Financial Services\n\n    * Government\n\n    * Healthcare\n\n    * Retail\n\n  * Company\n\n    * About Us\n\n    * Leadership\n\n    * Investors\n\n    * Environment, Social, and Governance\n\n    * Jobs\n\n    * Press Room\n\n    * Crowd Wellness\n\n  * Resources\n\n    * Blog\n\n    * Case Studies\n\n    * eBooks\n\n    * Webinars\n\n    * Whitepapers\n\n    * Open Source Datasets\n\n    * Partners\n\n    * Developers\n\n    * Customer Success Center\n\n  * Corporate Headquarters\n\n    * Level 6/9 Help St Chatswood NSW 2067 Australia\n\n    * +61-2-9468-6300\n\n  * US Headquarters\n\n    * 12131 113th Ave NE Suite  100 Kirkland, WA 98034\n\n    * Int‚Äôl Collect +1-646-224-1146\n\n* * *\n\n* * *\n\n  * Solutions\n    * Training Data\n    * Data Collection & Datasets\n  * Delivery\n    * Platform Overview\n    * Crowd Management\n    * Expertise\n  * Industries\n    * Technology\n    * Automotive\n    * Financial Services\n    * Government\n    * Healthcare\n    * Retail\n  * Company\n    * About Us\n    * Leadership\n    * Investors\n    * Environment, Social, and Governance\n    * Jobs\n    * Press Room\n    * Crowd Wellness\n  * Resources\n    * Blog\n    * Case Studies\n    * eBooks\n    * Webinars\n    * Whitepapers\n    * Open Source Datasets\n    * Partners\n    * Developers\n    * Customer Success Center\n  * Corporate Headquarters\n    * Level 6/9 Help St Chatswood NSW 2067 Australia\n    * +61-2-9468-6300\n  * US Headquarters\n    * 12131 113th Ave NE Suite  100 Kirkland, WA 98034\n    * Int‚Äôl Collect +1-646-224-1146\n\n* * *\n\n* * *\n\n@ 2021 Appen Limited\n\nLegal Policies\n\nData Subject Access Request\n\n@ 2021 Appen Limited\n\nLegal Policies\n\nData Subject Access Request\n\n* * *\n\n* * *\n\n√ó\n\n  * Solutions\n\n    * What We Deliver\n\n      * Training Data\n\n      * Data Collection & Datasets\n\n    * How We Deliver\n\n      * Platform Overview\n\n      * Crowd Management\n\n      * Expertise\n\n    * View All Solutions\n\n  * Platform\n\n    * Platform Overview\n\n    * Annotation Capabilities\n\n    * Enterprise Capabilities\n\n    * Smart Labeling\n\n    * Workflows\n\n  * Industries\n\n    * Technology\n\n    * Automotive\n\n    * Financial Services\n\n    * Healthcare\n\n    * Government\n\n    * Retail\n\n    * View All Industries\n\n  * Company\n\n    * About Us\n\n    * Leadership\n\n    * Investors\n\n    * Environmental, Social, and Governance\n\n    * Jobs\n\n    * Press Room\n\n    * Crowd Wellness\n\n  * Resources\n\n    * AI Resource Center\n\n      * Blog\n\n      * Case Studies\n\n      * eBooks\n\n      * Webinars\n\n      * Whitepapers\n\n      * Research Papers\n\n      * Tools\n\n        * AI Readiness Assessment\n\n        * Insights Explorer\n\n    * Resources column\n\n      * Datasets\n\n        * Off-the-Shelf Datasets\n\n        * Open Source Datasets\n\n      * Community\n\n        * Partners\n\n        * Developers\n\n        * Customers\n\n    * All Resources\n\n  * * * *\n\nJobs\n\nContact Sales\n\n* * *\n\nLanguage\n\nChinese\n\nJapanese\n\n",
          "lemma_content": "NEW view 2020 Annual Report investor _ _ Client Login _ _ language _ _ chinese _ _ japanese _ _ solution deliver Training Data Data Collection Datasets deliver Platform Overview Crowd Management expertise view solution platform Platform Overview Annotation capability enterprise Capabilities Smart Labeling workflow industry technology automotive Financial Services Healthcare government retail view industry company Us leadership investor Environmental Social Governance job Press Room Crowd wellness resource AI Resource Center blog Case Studies ebook Webinars whitepaper Research Papers tool AI Readiness Assessment Insights Explorer dataset Off-the-Shelf dataset Open Source dataset community partner developer customer Resources job contact sale contact Appen recognize Deloitte Technology Fast 50 500 Appen celebrate Sixth Year Representation Deloitte Technology 50 Australia Awards exciting year growth Appen recognize sixth time Deloitte Technology 50 Australia Awards year mark second year receive recognition leadership category Leadership category recognize technology company read More AwardsCompany NewsDeloitte Technology Awards Appen recognize 2018 Deloitte Technology 50 Australia Awards leadership follow 102 growth annual revenue previous year Appen celebrate fifth year recognition Deloitte Technology 50 Australia Awards 2018 Appen award Leadership category recognize technology company generate cumulative operating revenue great 50m. ‚Äô honor receive award Deloitte say Mark Brayan read More Company News Creating Structured Data Machine Learning appen Tammy Garves Phil Hall Appen Senior Vice Presidents counterpart helm two main division company Tammy lead Content Relevance team Phil head Language Resources catch talk need structured datum machine learning touch industry trend prediction read More Company NewsExecutive LeadershipProject Management ExpertiseSpeech Recognition Meet Us Road November November be make stop coast share high-quality data expertise plan attend one event interested speak team contact set meeting stop booth learn Appen can help solve data challenge Open Data Science Conference November 3-4 Hyatt Regency read More Company Newsevents Appen growth fuel Tech Trends Executive Leadership Appen growth trajectory keep pace flourish tech industry fuel late tech trend executive leadership read more Company NewsLeadership Worldwide Business kathy ireland ¬Æ see Appen discuss Role enhance eCommerce Shopping experience Mark Brayan discuss Appen can help online retailer improve on- site search chatbot capability high quality datum lead deep customer relationship Company NewsExecutive Leadership Search recent post AI Model maintenance A Guide manage Model post-production ai-powere Search relevance image annotation used build ai model leverage ai Machine Learning Content moderation launch AI Real World recent comment Alcino Appen acquire Leapforce Here4Freedom Appen acquire Leapforce Firmo Saka Appen acquire Leapforce Julie Bailey Appen acquire Leapforce Dennis Thompson Appen acquire Leapforce archive February 2021 January 2021 December 2020 November 2020 October 2020 September 2020 August 2020 July 2020 June 2020 May 2020 April 2020 March 2020 February 2020 January 2020 December 2019 November 2019 October 2019 September 2019 August 2019 July 2019 June 2019 May 2019 April 2019 March 2019 February 2019 January 2019 December 2018 November 2018 October 2018 September 2018 August 2018 July 2018 June 2018 May 2018 April 2018 March 2018 February 2018 January 2018 December 2017 November 2017 October 2017 September 2017 August 2017 July 2017 June 2017 May 2017 April 2017 March 2017 February 2017 January 2017 November 2016 October 2016 August 2016 July 2016 February 2016 December 2015 November 2015 June 2015 January 2015 December 2014 September 2014 category AI Machine Learning automotive blog business case study content type ebook Financial Services government Healthcare industry industry insight life Appen Machine Learning open source dataset Press release Research Papers retail role technology technology webinar Whitepapers Meta log entry feed comment feed WordPress.org find reliable training datum can give confidence deploy AI start today solution Training Data Data Collection dataset delivery Platform Overview Crowd Management expertise industry technology automotive Financial Services government Healthcare retail company Us leadership investor Environment Social governance job Press Room Crowd Wellness resource blog case Studies ebook Webinars whitepaper Open source dataset partner developer Customer Success Center Corporate Headquarters level 6/9 Help St Chatswood NSW 2067 Australia +61-2-9468-6300 US Headquarters 12131 113th Ave NE Suite 100 Kirkland WA 98034 Int‚Äôl collect +1-646-224-1146 solution Training Data Data Collection dataset delivery Platform Overview Crowd Management expertise industry technology automotive Financial Services government Healthcare Retail company Us leadership investor Environment Social governance job Press Room Crowd wellness resource blog case study ebook webinar whitepaper open source dataset partner developer Customer Success Center Corporate Headquarters level 6/9 Help St Chatswood NSW 2067 Australia +61-2-9468-6300 US Headquarters 12131 113th Ave NE Suite 100 Kirkland WA 98034 Int‚Äôl collect +1-646-224-1146 2021 Appen Limited Legal Policies data Subject Access request 2021 Appen Limited Legal Policies data Subject Access request solution deliver Training data Data Collection Datasets deliver Platform Overview Crowd Management expertise view solution platform Platform Overview annotation capability enterprise capability Smart labeling workflow industry technology automotive Financial Services Healthcare government retail view industry company Us leadership investor Environmental Social governance job Press Room Crowd Wellness resource AI Resource Center blog case Studies ebook Webinars whitepaper Research Papers tool AI Readiness Assessment Insights Explorer resource column dataset Off-the-Shelf dataset open source dataset community partner developer customer resource job contact sale language chinese japanese",
          "kg_generic": [
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Login  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen Recognized",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen Celebrates",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Sixth Year of Representation",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "an exciting year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "This year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the second year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Leadership",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen Recognized",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deloitte Technology",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards for Leadership  ",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "annual",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the previous year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "our fifth year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deloitte Technology",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Leadership",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "50M.",
              "property": "rel:instanceof",
              "value": "money"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Mark Brayan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Company News",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen  Tammy Garves",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Phil Hall",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Tammy",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Phil",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Language Resources",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "November  ",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "November 3-4",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Hyatt Regency",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Company Newsevents",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Tech Trends",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Worldwide Business",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mark Brayan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Recent Comments",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Julie Bailey",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "February 2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "WordPress.org",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Today",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Crowd Management",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Financial Services",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "* Government",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Crowd Wellness",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Success Center",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "St Chatswood",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "12131 113th",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Ave NE Suite",
              "property": "rel:instanceof",
              "value": "facility"
            },
            {
              "subject": "Training Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Crowd Management",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "St Chatswood",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "12131 113th Ave NE Suite",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "View All Industries",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "* Environmental, Social, and Governance      ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Crowd Wellness",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Explorer",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "* Resources",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen",
              "property": "recognize for",
              "value": "sixth time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "year",
              "property": "mark",
              "value": "second year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Leadership category",
              "property": "recognize",
              "value": "technology company",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Australia Awards for leadership  ",
              "property": "follow",
              "value": "102 % growth",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "celebrate",
              "value": "fifth year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "celebrate",
              "value": "year of recognition",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "‚Äô",
              "value": "honor",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Tammy",
              "property": "lead",
              "value": "Content Relevance team",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Phil",
              "property": "head up",
              "value": "Language Resources",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "also touch",
              "value": "industry trend",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "be make",
              "value": "stop",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "solve",
              "value": "data challenge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "growth",
              "property": "fuel by",
              "value": "Tech Trends and Executive Leadership   Appen 's growth trajectory",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "discuss",
              "value": "Role",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "can help online",
              "value": "retailer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "retailer",
              "property": "improve",
              "value": "on- site search and chatbot capability",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "reliable training datum",
              "property": "can give",
              "value": "confidence",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Int‚Äôl",
              "property": "collect",
              "value": "+1-646-224-1146",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Int‚Äôl",
              "property": "collect",
              "value": "+1-646-224-1146",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.6322707394137979,
                0.1541122505441308,
                0.10775491571985185,
                0.0449309223331511,
                0.01712938374839723,
                0.023445097263902426,
                0.005778759252279997,
                0.014577971305698156
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.2706935256719589,
                0.20272020902484655,
                0.230814628303051,
                0.16376738622784615,
                0.04312770999968052,
                0.015605843625962734,
                0.042394462041556835,
                0.03087616991251707
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.7402010769583285,
                0.0941211930476129,
                0.07417782547418028,
                0.038441197481006384,
                0.03017705911770463,
                0.0035741091705858707,
                0.010471094399690628,
                0.008836471475660801
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.2631418015807867,
                0.20538689568638802,
                0.2229874012991786,
                0.1304739210754633,
                0.056066254153847694,
                0.01925649866461754,
                0.04954489879310131,
                0.053142134100198746
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25026170816272497,
                0.2720969710499048,
                0.16746900230646133,
                0.17575443908572197,
                0.0447545675560832,
                0.038930333219468594,
                0.03974983748048544,
                0.010983212850987911
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2732642302289605,
                0.23264246620237827,
                0.23634653724730015,
                0.11935297306627035,
                0.045887512154877186,
                0.05567917414009571,
                0.010202523320913315,
                0.026624645106494427
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.21181098744273186,
                0.23972897976636887,
                0.24838763568550348,
                0.1414004135876894,
                0.0470357071608305,
                0.05301461461931467,
                0.015340623445808887,
                0.04328102432191372
              ]
            },
            {
              "labels": [
                "machine learning",
                "internet of things",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.23711328953504562,
                0.08248927351087332,
                0.225813964381814,
                0.18184236669912934,
                0.08494088239967823,
                0.11261127609759569,
                0.05949979927390814,
                0.015689173713326454
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5739688696339726,
                0.164857582654804,
                0.08168929815292358,
                0.0678290268406272,
                0.04309662710875273,
                0.031721172388643026,
                0.027828523889183998,
                0.009008885361254215
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.31290547735989094,
                0.24776801653206348,
                0.14156148210167885,
                0.1336915036663413,
                0.0871708020567894,
                0.040620291605591774,
                0.026605165097862482,
                0.009677300229668617
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.525171797722578,
                0.18293715361505747,
                0.12400993751361966,
                0.05540332663804293,
                0.048117524944245815,
                0.03646701015532017,
                0.00962102971971035,
                0.018272214103490114
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8085572700947523,
                0.06665048818103969,
                0.05315626063384116,
                0.030007555382326245,
                0.013978268019855022,
                0.015504693379625678,
                0.003665546653792262,
                0.00848005129955709
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.7058768295682967,
                0.09829526487737894,
                0.0712162721902132,
                0.07401790539734066,
                0.028089999221265316,
                0.003906071651726961,
                0.009888084139674902,
                0.008709655608981848
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.7180420076474547,
                0.08272243896499276,
                0.07065891474485397,
                0.086379359010607,
                0.01325448788702488,
                0.014742819126695395,
                0.003969533834606409,
                0.010230274638161063
              ]
            },
            {
              "labels": [
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8145395752508193,
                0.061513681430369616,
                0.03723252099007368,
                0.05766753037460148,
                0.013382559060119092,
                0.009612313471734524,
                0.0018141010077670217,
                0.004237770335748792
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.30026327073574066,
                0.25419137347489595,
                0.19497993122786283,
                0.1364456471055746,
                0.03523268084973097,
                0.03341724583879113,
                0.03502078354358673,
                0.010449033230543137
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.41625662008300424,
                0.2777903010137379,
                0.09596305945888162,
                0.14957356825470924,
                0.02342611877247691,
                0.01615737844258547,
                0.015616060234606266,
                0.005216856021434069
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.33384886756539345,
                0.2382708042860031,
                0.11405178625136614,
                0.1873864522203803,
                0.04914246592670679,
                0.034327288158237934,
                0.031890371814370155,
                0.011081917211413383
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9550667405128479,
              "spans": [
                {
                  "approx_length": 22,
                  "score": 0.9550667405128479,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.12114743800724254,
              "spans": [
                {
                  "approx_length": 163,
                  "score": 0.8158276677131653,
                  "spanid": 0
                },
                {
                  "approx_length": 315,
                  "score": 0.95179682970047,
                  "spanid": 10
                },
                {
                  "approx_length": 304,
                  "score": 0.552465558052063,
                  "spanid": 13
                },
                {
                  "approx_length": 207,
                  "score": 0.9379409551620483,
                  "spanid": 28
                },
                {
                  "approx_length": 234,
                  "score": 0.8609818816184998,
                  "spanid": 32
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.801628358223859,
              "spans": [
                {
                  "approx_length": 255,
                  "score": 0.9978811144828796,
                  "spanid": 1
                },
                {
                  "approx_length": 215,
                  "score": 0.9969781041145325,
                  "spanid": 2
                },
                {
                  "approx_length": 224,
                  "score": 0.7060067653656006,
                  "spanid": 3
                },
                {
                  "approx_length": 213,
                  "score": 0.7015550136566162,
                  "spanid": 4
                },
                {
                  "approx_length": 333,
                  "score": 0.9991692900657654,
                  "spanid": 5
                },
                {
                  "approx_length": 406,
                  "score": 0.998431921005249,
                  "spanid": 6
                },
                {
                  "approx_length": 344,
                  "score": 0.9990876913070679,
                  "spanid": 7
                },
                {
                  "approx_length": 345,
                  "score": 0.9978368878364563,
                  "spanid": 8
                },
                {
                  "approx_length": 361,
                  "score": 0.9979931116104126,
                  "spanid": 9
                },
                {
                  "approx_length": 375,
                  "score": 0.99901282787323,
                  "spanid": 11
                },
                {
                  "approx_length": 317,
                  "score": 0.957538902759552,
                  "spanid": 12
                },
                {
                  "approx_length": 224,
                  "score": 0.9440591335296631,
                  "spanid": 14
                },
                {
                  "approx_length": 207,
                  "score": 0.9395784735679626,
                  "spanid": 15
                },
                {
                  "approx_length": 207,
                  "score": 0.9325098395347595,
                  "spanid": 16
                },
                {
                  "approx_length": 210,
                  "score": 0.933350682258606,
                  "spanid": 17
                },
                {
                  "approx_length": 220,
                  "score": 0.9528807401657104,
                  "spanid": 18
                },
                {
                  "approx_length": 231,
                  "score": 0.9648948311805725,
                  "spanid": 19
                },
                {
                  "approx_length": 241,
                  "score": 0.8616325855255127,
                  "spanid": 20
                },
                {
                  "approx_length": 180,
                  "score": 0.9933398962020874,
                  "spanid": 21
                },
                {
                  "approx_length": 243,
                  "score": 0.9906353950500488,
                  "spanid": 22
                },
                {
                  "approx_length": 221,
                  "score": 0.9677020311355591,
                  "spanid": 23
                },
                {
                  "approx_length": 226,
                  "score": 0.7012463212013245,
                  "spanid": 24
                },
                {
                  "approx_length": 208,
                  "score": 0.9865660071372986,
                  "spanid": 25
                },
                {
                  "approx_length": 216,
                  "score": 0.981844961643219,
                  "spanid": 26
                },
                {
                  "approx_length": 241,
                  "score": 0.9409693479537964,
                  "spanid": 27
                },
                {
                  "approx_length": 216,
                  "score": 0.9232661128044128,
                  "spanid": 29
                },
                {
                  "approx_length": 263,
                  "score": 0.9850675463676453,
                  "spanid": 30
                },
                {
                  "approx_length": 228,
                  "score": 0.9875341653823853,
                  "spanid": 31
                },
                {
                  "approx_length": 142,
                  "score": 0.91679447889328,
                  "spanid": 33
                }
              ]
            }
          ],
          "summary": [
            " Company News  - Appen Appen -  Appen. Company News . Company",
            "   View our 2020 Annual Report .  View the 2020 Global AI Resource Center . [ NEW ]  View  our 2020 annual Report . [  View All Solutions  *  View all Solutions    See our",
            " Appen has been recognized for the sixth time in the Deloitte Technology Fast 50 Australia Awards . Appen was newly awarded in the Leadership category . The Leadership category recognizes technology companies who have generated cumulative operating revenues greater than",
            " Appen‚Äôs Senior Vice Presidents talk about the need for structured data for machine learning . Tammy Garves and Phil Hall discuss industry trends and predictions . They also discuss how Appen can help online retailers improve their on",
            " Site search and chatbot capabilities through high quality data will lead to deeper customer relationships . Archives: February 2021    February 2020  *  January 2020   -  December 2020  ‚Äì  January 2021  *",
            " April 2019    March 2019  *  February 2019  -   January 2019  ‚Äì   December 2018   - January 2019 .   AI  & Machine Learning  &  Machine Learning . ",
            " Find out how reliable training data can give you the confidence to deploy AI . Use the weekly Newsquiz to test your knowledge of machine learning and other AI-related skills . Use this week's Daily Discussion to help you",
            " US Headquarters  *  12131 113th Ave NE Suite 100 Kirkland, WA 98034 .   US Headquarters is located in Kirkland , WA . Int‚Äôl Collect  + 61 - 2 - 94",
            " US Headquarters   12131 113th Ave NE Suite 100 Kirkland, WA 98034 . 2067 Australia   + 61 - 2 - 9468 - 6300  *  US Headquarters is located in Kirkland",
            " Press Room   Crowd Wellness    Resources  *  Resources for AI Resource Center . *  AI Readiness Assessment   Use the AI Resource Resource Center to help with reading comprehension and vocabulary . Use the"
          ],
          "text_suggester": [
            {
              "input": "company news",
              "weight": 0
            },
            {
              "input": "12131 113th",
              "weight": 1
            },
            {
              "input": "2018 deloitte technology fast 50",
              "weight": 38
            },
            {
              "input": "50 australia awards",
              "weight": 0
            },
            {
              "input": "a flourishing tech industry",
              "weight": 0
            },
            {
              "input": "a guide",
              "weight": 0
            },
            {
              "input": "a meeting",
              "weight": 0
            },
            {
              "input": "acquire",
              "weight": 2
            },
            {
              "input": "ai models",
              "weight": 0
            },
            {
              "input": "all industries",
              "weight": 0
            },
            {
              "input": "all resources",
              "weight": 0
            },
            {
              "input": "all solutions",
              "weight": 0
            },
            {
              "input": "an exciting year",
              "weight": 5
            },
            {
              "input": "an honor",
              "weight": 0
            },
            {
              "input": "annual revenue",
              "weight": 0
            },
            {
              "input": "appen",
              "weight": 89
            },
            {
              "input": "appen celebrate",
              "weight": 1
            },
            {
              "input": "appen limited",
              "weight": 0
            },
            {
              "input": "appen recognize",
              "weight": 5
            },
            {
              "input": "appen to acquire leapforce",
              "weight": 100
            },
            {
              "input": "appen‚Äôs senior vice presidents",
              "weight": 0
            },
            {
              "input": "april",
              "weight": 0
            },
            {
              "input": "april 2017",
              "weight": 1
            },
            {
              "input": "april 2018",
              "weight": 1
            },
            {
              "input": "april 2019",
              "weight": 1
            },
            {
              "input": "april 2020",
              "weight": 1
            },
            {
              "input": "august",
              "weight": 0
            },
            {
              "input": "august 2016",
              "weight": 1
            },
            {
              "input": "august 2017",
              "weight": 1
            },
            {
              "input": "august 2018",
              "weight": 1
            },
            {
              "input": "august 2019",
              "weight": 1
            },
            {
              "input": "august 2020",
              "weight": 1
            },
            {
              "input": "australia",
              "weight": 0
            },
            {
              "input": "australia awards",
              "weight": 9
            },
            {
              "input": "australia awards for leadership",
              "weight": 1
            },
            {
              "input": "automotive",
              "weight": 0
            },
            {
              "input": "ave ne suite",
              "weight": 0
            },
            {
              "input": "awards",
              "weight": 2
            },
            {
              "input": "awards appen",
              "weight": 0
            },
            {
              "input": "awardscompany newsdeloitte technology",
              "weight": 0
            },
            {
              "input": "blog",
              "weight": 1
            },
            {
              "input": "both coasts",
              "weight": 0
            },
            {
              "input": "capability",
              "weight": 1
            },
            {
              "input": "case",
              "weight": 1
            },
            {
              "input": "categories",
              "weight": 0
            },
            {
              "input": "category",
              "weight": 1
            },
            {
              "input": "center",
              "weight": 1
            },
            {
              "input": "client login",
              "weight": 0
            },
            {
              "input": "collection",
              "weight": 0
            },
            {
              "input": "company",
              "weight": 3
            },
            {
              "input": "company newsevents",
              "weight": 0
            },
            {
              "input": "company newsexecutive leadership",
              "weight": 0
            },
            {
              "input": "company newsexecutive leadershipproject management",
              "weight": 0
            },
            {
              "input": "confidence to deploy ai",
              "weight": 16
            },
            {
              "input": "contact",
              "weight": 2
            },
            {
              "input": "contact sales",
              "weight": 0
            },
            {
              "input": "content moderation",
              "weight": 0
            },
            {
              "input": "corporate headquarters",
              "weight": 0
            },
            {
              "input": "crowd",
              "weight": 0
            },
            {
              "input": "crowd management",
              "weight": 5
            },
            {
              "input": "crowd wellness",
              "weight": 5
            },
            {
              "input": "cumulative operating revenues",
              "weight": 0
            },
            {
              "input": "customer",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 2
            },
            {
              "input": "data science conference",
              "weight": 1
            },
            {
              "input": "data subject access",
              "weight": 0
            },
            {
              "input": "data subject access request",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 11
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 2
            },
            {
              "input": "december",
              "weight": 0
            },
            {
              "input": "december 2014",
              "weight": 1
            },
            {
              "input": "december 2015",
              "weight": 1
            },
            {
              "input": "december 2017",
              "weight": 1
            },
            {
              "input": "december 2018",
              "weight": 1
            },
            {
              "input": "december 2019",
              "weight": 1
            },
            {
              "input": "december 2020",
              "weight": 1
            },
            {
              "input": "deeper customer relationships",
              "weight": 0
            },
            {
              "input": "deliver",
              "weight": 0
            },
            {
              "input": "deloitte",
              "weight": 0
            },
            {
              "input": "deloitte technology",
              "weight": 5
            },
            {
              "input": "deloitte technology fast 50",
              "weight": 32
            },
            {
              "input": "deloitte‚Äôs technology",
              "weight": 0
            },
            {
              "input": "developer",
              "weight": 0
            },
            {
              "input": "ebook",
              "weight": 0
            },
            {
              "input": "ebooks",
              "weight": 0
            },
            {
              "input": "executive leadership",
              "weight": 0
            },
            {
              "input": "expertise",
              "weight": 1
            },
            {
              "input": "expertisespeech recognition",
              "weight": 0
            },
            {
              "input": "fast 50 australia awards",
              "weight": 0
            },
            {
              "input": "february",
              "weight": 0
            },
            {
              "input": "february 2016",
              "weight": 1
            },
            {
              "input": "february 2017",
              "weight": 1
            },
            {
              "input": "february 2018",
              "weight": 1
            },
            {
              "input": "february 2019",
              "weight": 1
            },
            {
              "input": "february 2020",
              "weight": 1
            },
            {
              "input": "february 2021",
              "weight": 1
            },
            {
              "input": "financial",
              "weight": 0
            },
            {
              "input": "financial services",
              "weight": 0
            },
            {
              "input": "firmo",
              "weight": 0
            },
            {
              "input": "governance",
              "weight": 11
            },
            {
              "input": "government",
              "weight": 1
            },
            {
              "input": "growth",
              "weight": 3
            },
            {
              "input": "headquarters",
              "weight": 0
            },
            {
              "input": "healthcare",
              "weight": 1
            },
            {
              "input": "high quality data",
              "weight": 0
            },
            {
              "input": "how reliable training data",
              "weight": 0
            },
            {
              "input": "hyatt regency",
              "weight": 0
            },
            {
              "input": "image annotation",
              "weight": 0
            },
            {
              "input": "industries",
              "weight": 0
            },
            {
              "input": "industry",
              "weight": 3
            },
            {
              "input": "industry insights",
              "weight": 0
            },
            {
              "input": "industry trends",
              "weight": 0
            },
            {
              "input": "insights explorer",
              "weight": 0
            },
            {
              "input": "investor",
              "weight": 0
            },
            {
              "input": "investors",
              "weight": 0
            },
            {
              "input": "its role",
              "weight": 0
            },
            {
              "input": "its sixth year",
              "weight": 0
            },
            {
              "input": "january",
              "weight": 0
            },
            {
              "input": "january 2015",
              "weight": 1
            },
            {
              "input": "january 2017",
              "weight": 1
            },
            {
              "input": "january 2018",
              "weight": 1
            },
            {
              "input": "january 2019",
              "weight": 1
            },
            {
              "input": "january 2020",
              "weight": 1
            },
            {
              "input": "january 2021",
              "weight": 1
            },
            {
              "input": "job",
              "weight": 3
            },
            {
              "input": "job contact sale",
              "weight": 9
            },
            {
              "input": "julie bailey",
              "weight": 1
            },
            {
              "input": "july",
              "weight": 0
            },
            {
              "input": "july 2016",
              "weight": 1
            },
            {
              "input": "july 2017",
              "weight": 1
            },
            {
              "input": "july 2018",
              "weight": 1
            },
            {
              "input": "july 2019",
              "weight": 1
            },
            {
              "input": "july 2020",
              "weight": 1
            },
            {
              "input": "june",
              "weight": 0
            },
            {
              "input": "june 2015",
              "weight": 1
            },
            {
              "input": "june 2017",
              "weight": 1
            },
            {
              "input": "june 2018",
              "weight": 1
            },
            {
              "input": "june 2019",
              "weight": 1
            },
            {
              "input": "june 2020",
              "weight": 1
            },
            {
              "input": "kathy ireland",
              "weight": 5
            },
            {
              "input": "kirkland",
              "weight": 0
            },
            {
              "input": "language resources",
              "weight": 0
            },
            {
              "input": "leadership",
              "weight": 7
            },
            {
              "input": "leapforce",
              "weight": 0
            },
            {
              "input": "leapforce archives",
              "weight": 0
            },
            {
              "input": "legal policies",
              "weight": 0
            },
            {
              "input": "machine learning",
              "weight": 11
            },
            {
              "input": "management",
              "weight": 1
            },
            {
              "input": "march",
              "weight": 0
            },
            {
              "input": "march 2017",
              "weight": 1
            },
            {
              "input": "march 2018",
              "weight": 1
            },
            {
              "input": "march 2019",
              "weight": 1
            },
            {
              "input": "march 2020",
              "weight": 1
            },
            {
              "input": "mark brayan",
              "weight": 0
            },
            {
              "input": "may",
              "weight": 0
            },
            {
              "input": "may 2017",
              "weight": 1
            },
            {
              "input": "may 2018",
              "weight": 1
            },
            {
              "input": "may 2019",
              "weight": 1
            },
            {
              "input": "may 2020",
              "weight": 1
            },
            {
              "input": "meet",
              "weight": 0
            },
            {
              "input": "meta",
              "weight": 0
            },
            {
              "input": "more",
              "weight": 1
            },
            {
              "input": "newsleadership",
              "weight": 0
            },
            {
              "input": "november",
              "weight": 0
            },
            {
              "input": "november 2015",
              "weight": 1
            },
            {
              "input": "november 2016",
              "weight": 1
            },
            {
              "input": "november 2017",
              "weight": 1
            },
            {
              "input": "november 2018",
              "weight": 1
            },
            {
              "input": "november 2019",
              "weight": 1
            },
            {
              "input": "november 2020",
              "weight": 1
            },
            {
              "input": "nsw",
              "weight": 0
            },
            {
              "input": "october",
              "weight": 0
            },
            {
              "input": "october 2016",
              "weight": 1
            },
            {
              "input": "october 2017",
              "weight": 1
            },
            {
              "input": "october 2018",
              "weight": 1
            },
            {
              "input": "october 2019",
              "weight": 1
            },
            {
              "input": "october 2020",
              "weight": 1
            },
            {
              "input": "one",
              "weight": 1
            },
            {
              "input": "online retailers",
              "weight": 0
            },
            {
              "input": "open",
              "weight": 0
            },
            {
              "input": "open data science conference",
              "weight": 0
            },
            {
              "input": "our 2020 annual report",
              "weight": 0
            },
            {
              "input": "our booth",
              "weight": 0
            },
            {
              "input": "our company",
              "weight": 0
            },
            {
              "input": "our content relevance team",
              "weight": 0
            },
            {
              "input": "our fifth year",
              "weight": 0
            },
            {
              "input": "our team",
              "weight": 0
            },
            {
              "input": "overview",
              "weight": 1
            },
            {
              "input": "papers",
              "weight": 0
            },
            {
              "input": "partner",
              "weight": 0
            },
            {
              "input": "phil",
              "weight": 0
            },
            {
              "input": "phil hall",
              "weight": 0
            },
            {
              "input": "platform",
              "weight": 1
            },
            {
              "input": "predictions",
              "weight": 0
            },
            {
              "input": "press",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "real world",
              "weight": 1
            },
            {
              "input": "recent comment",
              "weight": 1
            },
            {
              "input": "recent comments",
              "weight": 0
            },
            {
              "input": "recognize",
              "weight": 2
            },
            {
              "input": "representation",
              "weight": 0
            },
            {
              "input": "research",
              "weight": 0
            },
            {
              "input": "resource",
              "weight": 1
            },
            {
              "input": "retail",
              "weight": 3
            },
            {
              "input": "room",
              "weight": 0
            },
            {
              "input": "saka",
              "weight": 0
            },
            {
              "input": "search recent posts",
              "weight": 0
            },
            {
              "input": "september",
              "weight": 0
            },
            {
              "input": "september 2014",
              "weight": 1
            },
            {
              "input": "september 2017",
              "weight": 1
            },
            {
              "input": "september 2018",
              "weight": 1
            },
            {
              "input": "september 2019",
              "weight": 1
            },
            {
              "input": "september 2020",
              "weight": 1
            },
            {
              "input": "services",
              "weight": 0
            },
            {
              "input": "social",
              "weight": 0
            },
            {
              "input": "solution",
              "weight": 1
            },
            {
              "input": "solutions",
              "weight": 0
            },
            {
              "input": "source",
              "weight": 0
            },
            {
              "input": "st chatswood",
              "weight": 0
            },
            {
              "input": "stops",
              "weight": 0
            },
            {
              "input": "structured data",
              "weight": 0
            },
            {
              "input": "studies",
              "weight": 0
            },
            {
              "input": "success center",
              "weight": 1
            },
            {
              "input": "tammy",
              "weight": 0
            },
            {
              "input": "tammy garves",
              "weight": 0
            },
            {
              "input": "tech trends",
              "weight": 1
            },
            {
              "input": "technology",
              "weight": 4
            },
            {
              "input": "technology companies",
              "weight": 0
            },
            {
              "input": "the 2018 deloitte technology",
              "weight": 0
            },
            {
              "input": "the confidence",
              "weight": 0
            },
            {
              "input": "the counterparts",
              "weight": 0
            },
            {
              "input": "the deloitte technology",
              "weight": 0
            },
            {
              "input": "the ecommerce shopping experience",
              "weight": 0
            },
            {
              "input": "the helm",
              "weight": 0
            },
            {
              "input": "the latest tech trends",
              "weight": 0
            },
            {
              "input": "the leadership category",
              "weight": 0
            },
            {
              "input": "the need",
              "weight": 0
            },
            {
              "input": "the previous year",
              "weight": 5
            },
            {
              "input": "the real world",
              "weight": 0
            },
            {
              "input": "the road",
              "weight": 0
            },
            {
              "input": "the second year",
              "weight": 5
            },
            {
              "input": "the sixth time",
              "weight": 0
            },
            {
              "input": "the two main divisions",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these events",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "this award",
              "weight": 0
            },
            {
              "input": "this year",
              "weight": 1
            },
            {
              "input": "training",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 1
            },
            {
              "input": "two",
              "weight": 1
            },
            {
              "input": "view",
              "weight": 0
            },
            {
              "input": "view all industry",
              "weight": 1
            },
            {
              "input": "webinars",
              "weight": 0
            },
            {
              "input": "what",
              "weight": 11
            },
            {
              "input": "whitepaper",
              "weight": 0
            },
            {
              "input": "who",
              "weight": 4
            },
            {
              "input": "worldwide business",
              "weight": 0
            },
            {
              "input": "year",
              "weight": 2
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your data challenges",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://appen.com/tag/company-news/",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.008380896533005167,
        "_index": "cache_index",
        "_id": "cacheid_a30184d5176a54c4fff2a9a4447de3be",
        "_type": "_doc",
        "highlight": {
          "content": [
            "* Japanese\n\n__\n\n  * Solutions\n    * What We Deliver\n      * Training Data\n      * Data Collection & <b>Datasets</b>",
            "Research Papers\n      * Tools\n        * AI Readiness Assessment\n        * Insights Explorer\n    *       * <b>Datasets</b>",
            "* Off-the-Shelf <b>Datasets</b>\n        * Open Source <b>Datasets</b>\n      * Community\n        * Partners",
            "Get Started Today\n\n* * *\n\n* * *\n\n* * *\n\n  * Solutions\n\n    * Training Data\n\n    * Data Collection & <b>Datasets</b>",
            "* Off-the-Shelf <b>Datasets</b>\n\n        * Open Source <b>Datasets</b>\n\n      * Community\n\n        * Partners"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.007370081610501989,
        "see_also": [
          {
            "doc_id": "cacheid_6f2bd919cbf661464ad286fec857daae",
            "source_doc_id": "entity:user/1820:en",
            "title": "iztok kosem"
          },
          {
            "doc_id": "cacheid_a21f7aad1ea4a8eb3d6a3f5a72ef7fd6",
            "source_doc_id": "entity:user/415:en",
            "title": "orestis sarakatsanos"
          },
          {
            "doc_id": "cacheid_6c0b53c0d76c77d9b12ca974e366fee4",
            "source_doc_id": "entity:user/403:en",
            "title": "oleksii turuta"
          },
          {
            "doc_id": "cacheid_a5560664160ee66982d6b7cdb2a5940a",
            "source_doc_id": "entity:user/2031:en",
            "title": "c√©cile bothorel"
          },
          {
            "doc_id": "cacheid_cc1b280d3743b0f64f943996c1dd1de7",
            "source_doc_id": "entity:user/2037:en",
            "title": "pradeep eranti"
          }
        ],
        "semantic_content": " . data can give you the confidence to deploy AI Get Started Today  *   *   *   *   *   *   *   *   *   *  Solutions  *  Training Data  *  Data Collection  &  Datasets  *  Delivery  *",
        "short_answer": [
          {
            "score": 0.10050787031650543,
            "start": 172,
            "end": 180,
            "answer": "Delivery"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n¬∑\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020¬∑6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI‚Äôll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we‚Äôll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write ‚Äúimport matplotlib.pyplot as plt‚Äù\nyou can use this library in the future simply as ‚Äúplt‚Äù.\n\nNow let‚Äôs finally get our dataset in our working environment. We‚Äôll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(‚Äú <data path>‚Äù)_\n\n> Here ‚Äúread_csv‚Äù is to read .csv files, you can use ‚Äúread_excel‚Äù to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven‚Äôt really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run ‚Äúdf1.isnull().sum()‚Äù to get a quick\noverview of the missing records in your data_ ) the first thing you‚Äôll notice\nis that not all data attributes are complete. You‚Äôll notice ‚Äúnan‚Äù in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n‚Äú _df1.dropna()_ ‚Äù will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the ‚Äú _.fillna()_ ‚Äù function. ‚Äúfillna()‚Äù\nalso lets you fill the missing value with the _preceding or succeeding value_\nby ‚Äúbfill‚Äù and ‚Äúffill‚Äù parameters respectively.\n\nI mentioned that we‚Äôll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute ‚ÄúColour‚Äù\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15‚Äì20% of the data for testing purposes\n> and the rest for training.\n\nIt‚Äôs important to test your final model to get an idea of how good or bad your\nmodel is and it‚Äôs essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we‚Äôll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I‚Äôd like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don‚Äôt already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‚Äòon the rocks‚Äô ü•É\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020¬∑6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15‚Äì20 datum testing purpose rest training ‚Äô important test final model idea good bad model ‚Äô essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ‚Äôd like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock ü•É Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We‚Äôll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you‚Äôll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " ‚Äú  _ . dropna (  )   _    ‚Äù will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15‚Äì20%  of the data for testing purposes and the rest for training . It‚Äôs important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020¬∑6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "¬∑ editors",
              "weight": 0
            },
            {
              "input": "‚Äúbfill",
              "weight": 0
            },
            {
              "input": "‚Äúcolour",
              "weight": 0
            },
            {
              "input": "‚Äúffill‚Äù parameters",
              "weight": 0
            },
            {
              "input": "‚Äúfillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.0036125523854173003,
        "_index": "cache_index",
        "_id": "cacheid_183d7ea27ff58b571873adea323f779e",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let‚Äôs finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006964659550039976,
        "see_also": [
          {
            "doc_id": "cacheid_cc1b280d3743b0f64f943996c1dd1de7",
            "source_doc_id": "entity:user/2037:en",
            "title": "pradeep eranti"
          },
          {
            "doc_id": "cacheid_d4196314b80b3b3a4c414ef071925317",
            "source_doc_id": "entity:user/292:en",
            "title": "thorsten h√ºlsmann"
          },
          {
            "doc_id": "cacheid_31f1e83da77de22393a81518e7e271ea",
            "source_doc_id": "entity:user/238:en",
            "title": "michelle aubrun"
          },
          {
            "doc_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô ü•É Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app . Follow Your home for data science .  A Medium publication sharing concepts ,  ideas and codes .  Read more from Towards Data Science More From Medium 11 Python Built - in Functions You Should Know Christopher Tao in Towards Data Science Top 10 Python Libraries for Data Science in 2021 Terence Shin in Towards Data Science Building a sonar sensor array",
        "short_answer": [
          {
            "score": 0.026069732382893562,
            "start": 218,
            "end": 275,
            "answer": "A Medium publication sharing concepts  ,  ideas and codes"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n¬∑\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020¬∑6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI‚Äôll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we‚Äôll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write ‚Äúimport matplotlib.pyplot as plt‚Äù\nyou can use this library in the future simply as ‚Äúplt‚Äù.\n\nNow let‚Äôs finally get our dataset in our working environment. We‚Äôll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(‚Äú <data path>‚Äù)_\n\n> Here ‚Äúread_csv‚Äù is to read .csv files, you can use ‚Äúread_excel‚Äù to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven‚Äôt really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run ‚Äúdf1.isnull().sum()‚Äù to get a quick\noverview of the missing records in your data_ ) the first thing you‚Äôll notice\nis that not all data attributes are complete. You‚Äôll notice ‚Äúnan‚Äù in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n‚Äú _df1.dropna()_ ‚Äù will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the ‚Äú _.fillna()_ ‚Äù function. ‚Äúfillna()‚Äù\nalso lets you fill the missing value with the _preceding or succeeding value_\nby ‚Äúbfill‚Äù and ‚Äúffill‚Äù parameters respectively.\n\nI mentioned that we‚Äôll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute ‚ÄúColour‚Äù\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15‚Äì20% of the data for testing purposes\n> and the rest for training.\n\nIt‚Äôs important to test your final model to get an idea of how good or bad your\nmodel is and it‚Äôs essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we‚Äôll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I‚Äôd like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don‚Äôt already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‚Äòon the rocks‚Äô ü•É\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020¬∑6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15‚Äì20 datum testing purpose rest training ‚Äô important test final model idea good bad model ‚Äô essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ‚Äôd like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock ü•É Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We‚Äôll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you‚Äôll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " ‚Äú  _ . dropna (  )   _    ‚Äù will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15‚Äì20%  of the data for testing purposes and the rest for training . It‚Äôs important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020¬∑6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "¬∑ editors",
              "weight": 0
            },
            {
              "input": "‚Äúbfill",
              "weight": 0
            },
            {
              "input": "‚Äúcolour",
              "weight": 0
            },
            {
              "input": "‚Äúffill‚Äù parameters",
              "weight": 0
            },
            {
              "input": "‚Äúfillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.0036125523854173003,
        "_index": "cache_index",
        "_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let‚Äôs finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006964659550039976,
        "see_also": [
          {
            "doc_id": "cacheid_d4196314b80b3b3a4c414ef071925317",
            "source_doc_id": "entity:user/292:en",
            "title": "thorsten h√ºlsmann"
          },
          {
            "doc_id": "cacheid_31f1e83da77de22393a81518e7e271ea",
            "source_doc_id": "entity:user/238:en",
            "title": "michelle aubrun"
          },
          {
            "doc_id": "cacheid_183d7ea27ff58b571873adea323f779e",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_57d2d2d066dec3ad537762132cd99ff8",
            "source_doc_id": "entity:user/1042:en",
            "title": "ga√°l guszt√°v"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô ü•É Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app . Follow Your home for data science .  A Medium publication sharing concepts ,  ideas and codes .  Read more from Towards Data Science More From Medium 11 Python Built - in Functions You Should Know Christopher Tao in Towards Data Science Top 10 Python Libraries for Data Science in 2021 Terence Shin in Towards Data Science Building a sonar sensor array",
        "short_answer": [
          {
            "score": 0.026069732382893562,
            "start": 218,
            "end": 275,
            "answer": "A Medium publication sharing concepts  ,  ideas and codes"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n¬∑\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020¬∑6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI‚Äôll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we‚Äôll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write ‚Äúimport matplotlib.pyplot as plt‚Äù\nyou can use this library in the future simply as ‚Äúplt‚Äù.\n\nNow let‚Äôs finally get our dataset in our working environment. We‚Äôll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(‚Äú <data path>‚Äù)_\n\n> Here ‚Äúread_csv‚Äù is to read .csv files, you can use ‚Äúread_excel‚Äù to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven‚Äôt really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run ‚Äúdf1.isnull().sum()‚Äù to get a quick\noverview of the missing records in your data_ ) the first thing you‚Äôll notice\nis that not all data attributes are complete. You‚Äôll notice ‚Äúnan‚Äù in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n‚Äú _df1.dropna()_ ‚Äù will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the ‚Äú _.fillna()_ ‚Äù function. ‚Äúfillna()‚Äù\nalso lets you fill the missing value with the _preceding or succeeding value_\nby ‚Äúbfill‚Äù and ‚Äúffill‚Äù parameters respectively.\n\nI mentioned that we‚Äôll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute ‚ÄúColour‚Äù\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15‚Äì20% of the data for testing purposes\n> and the rest for training.\n\nIt‚Äôs important to test your final model to get an idea of how good or bad your\nmodel is and it‚Äôs essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we‚Äôll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I‚Äôd like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don‚Äôt already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‚Äòon the rocks‚Äô ü•É\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020¬∑6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15‚Äì20 datum testing purpose rest training ‚Äô important test final model idea good bad model ‚Äô essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ‚Äôd like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock ü•É Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We‚Äôll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you‚Äôll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " ‚Äú  _ . dropna (  )   _    ‚Äù will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15‚Äì20%  of the data for testing purposes and the rest for training . It‚Äôs important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020¬∑6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "¬∑ editors",
              "weight": 0
            },
            {
              "input": "‚Äúbfill",
              "weight": 0
            },
            {
              "input": "‚Äúcolour",
              "weight": 0
            },
            {
              "input": "‚Äúffill‚Äù parameters",
              "weight": 0
            },
            {
              "input": "‚Äúfillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.0036125523854173003,
        "_index": "cache_index",
        "_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I‚Äôll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let‚Äôs finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006964659550039976,
        "see_also": [
          {
            "doc_id": "cacheid_31f1e83da77de22393a81518e7e271ea",
            "source_doc_id": "entity:user/238:en",
            "title": "michelle aubrun"
          },
          {
            "doc_id": "cacheid_183d7ea27ff58b571873adea323f779e",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_57d2d2d066dec3ad537762132cd99ff8",
            "source_doc_id": "entity:user/1042:en",
            "title": "ga√°l guszt√°v"
          },
          {
            "doc_id": "cacheid_30d88572be0ecfb9c4af8a8917ccf993",
            "source_doc_id": "https://towardsdatascience.com/covid19-voice-assistant-63c37b1f02f9?source=user_profile---------3-----------------------&gi=710e880b6bd3",
            "title": "COVID19 Voice Assistant. Let‚Äôs hear the impact of this virus on‚Ä¶ | by K G\nPrajwal | Towards Data Science\n\n"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‚Äòon the rocks‚Äô ü•É Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app . Follow Your home for data science .  A Medium publication sharing concepts ,  ideas and codes .  Read more from Towards Data Science More From Medium 11 Python Built - in Functions You Should Know Christopher Tao in Towards Data Science Top 10 Python Libraries for Data Science in 2021 Terence Shin in Towards Data Science Building a sonar sensor array",
        "short_answer": [
          {
            "score": 0.026069732382893562,
            "start": 218,
            "end": 275,
            "answer": "A Medium publication sharing concepts  ,  ideas and codes"
          }
        ]
      },
      {
        "_source": {
          "title": "Large Margin Structured Convolution Operator for Thermal Infrared Object\nTracking | Papers With Code\n\n",
          "lemma_title": "large Margin Structured Convolution Operator Thermal Infrared object tracking Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\n       Mark the official implementation from paper authors\n\n√ó\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- Thermal Infrared Object Tracking Object Tracking\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * OBJECT TRACKING\n\n  * THERMAL INFRARED OBJECT TRACKING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * OBJECT TRACKING \\- \n\n  * THERMAL INFRARED OBJECT TRACKING \\- \n\n      Add a method\n\n√ó\n\nAttached methods:\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  * CONVOLUTION \\- \n\n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nOTB\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  Large Margin Structured Convolution Operator for Thermal Infrared Object\nTracking\n\n19 Apr 2018 ‚Ä¢  Peng Gao ‚Ä¢  Yipeng Ma ‚Ä¢  Ke Song ‚Ä¢  Chao Li ‚Ä¢  Fei Wang ‚Ä¢  Liyi\nXiao\n\nCompared with visible object tracking, thermal infrared (TIR) object tracking\ncan track an arbitrary target in total darkness since it cannot be influenced\nby illumination variations. However, there are many unwanted attributes that\nconstrain the potentials of TIR tracking, such as the absence of visual color\npatterns and low resolutions... Recently, structured output support vector\nmachine (SOSVM) and discriminative correlation filter (DCF) have been\nsuccessfully applied to visible object tracking, respectively. Motivated by\nthese, in this paper, we propose a large margin structured convolution\noperator (LMSCO) to achieve efficient TIR object tracking. To improve the\ntracking performance, we employ the spatial regularization and implicit\ninterpolation to obtain continuous deep feature maps, including deep\nappearance features and deep motion features, of the TIR targets. Finally, a\ncollaborative optimization strategy is exploited to significantly update the\noperators. Our approach not only inherits the advantage of the strong\ndiscriminative capability of SOSVM but also achieves accurate and robust\ntracking with higher-dimensional features and more dense samples. To the best\nof our knowledge, we are the first to incorporate the advantages of DCF and\nSOSVM for TIR object tracking. Comprehensive evaluations on two thermal\ninfrared tracking benchmarks, i.e. VOT-TIR2015 and VOT-TIR2016, clearly\ndemonstrate that our LMSCO tracker achieves impressive results and outperforms\nmost state-of-the-art trackers in terms of accuracy and robustness with\nsufficient frame rate. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * OBJECT TRACKING\n\n  * THERMAL INFRARED OBJECT TRACKING\n\n  Datasets\n\n__Edit\n\n* * *\n\nOTB\n\n  Results from the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task Thermal infrared object tracking object tracking list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task √ó attach task object tracking thermal infrared object tracking add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task object track thermal infrared object track add method √ó attach method CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method CONVOLUTION edit dataset add remove dataset introduce paper add remove other dataset use paper OTB paper introduce new dataset _ _ add new dataset save large Margin Structured Convolution Operator Thermal Infrared object track 19 Apr 2018 ‚Ä¢ Peng Gao ‚Ä¢ Yipeng Ma ‚Ä¢ Ke Song ‚Ä¢ Chao Li ‚Ä¢ Fei Wang ‚Ä¢ Liyi Xiao compare visible object tracking thermal infrared TIR object tracking can track arbitrary target total darkness can influence illumination variation many unwanted attribute constrain potential TIR tracking such absence visual color pattern low resolution structured output support vector machine SOSVM discriminative correlation filter DCF apply visible object tracking motivate paper propose large margin structured convolution operator LMSCO achieve efficient tir object tracking improve tracking performance employ spatial regularization implicit interpolation obtain continuous deep feature map include deep appearance feature deep motion feature TIR target collaborative optimization strategy exploit update operator approach inherit advantage strong discriminative capability SOSVM achieve accurate robust tracking higher-dimensional feature dense sample good knowledge first incorporate advantage DCF SOSVM TIR object tracking comprehensive evaluation two thermal infrared tracking benchmark vot-tir2015 demonstrate LMSCO tracker achieve impressive result outperform most state-of-the-art tracker term accuracy robustness sufficient frame rate read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove object tracking thermal infrared object tracking dataset _ _ edit OTB result Paper _ _ edit add remove _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "OTB",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "19 Apr 2018",
              "property": "rel:instanceof",
              "value": "time"
            },
            {
              "subject": "Yipeng Ma",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Chao Li",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "target",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LMSCO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "SOSVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "SOSVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LMSCO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "OTB",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "OTB   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "thermal infrared ( TIR ) object tracking",
              "property": "can track",
              "value": "arbitrary target",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "propose",
              "value": "large margin structured convolution operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "employ",
              "value": "spatial regularization",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "approach",
              "property": "only inherit",
              "value": "advantage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "LMSCO tracker",
              "property": "achieve",
              "value": "impressive result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "SOSVM",
              "property": "",
              "value": "structured output support vector machine",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "DCF",
              "property": "",
              "value": "discriminative correlation filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "LMSCO",
              "property": "",
              "value": "large margin structured convolution operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "natural language processing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing"
              ],
              "scores": [
                0.46620715921744704,
                0.26689736265689135,
                0.07743650116026402,
                0.09491055924445391,
                0.03204251895658672,
                0.025574536994099617,
                0.03158434713259339,
                0.005346990656107664
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2992564858868718,
                0.2734715398401022,
                0.17088750563561916,
                0.10217788256704807,
                0.0657714419066906,
                0.044797844253480434,
                0.030900694895535707,
                0.012736618518829346
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.21681328676640987,
                0.17593427514657378,
                0.29156131483614445,
                0.08003935497254133,
                0.0798218809068203,
                0.11271991208195686,
                0.016684461385011673,
                0.02642551902681589
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.34899511002004147,
                0.24460173211991787,
                0.1346044414676726,
                0.09161911252886057,
                0.04718174459412694,
                0.04921639338135719,
                0.06926068291068077,
                0.014520839788019657
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.29107854794710875,
                0.2798269158229232,
                0.12862608395516872,
                0.14010561536997557,
                0.0600071894004941,
                0.051788765005767345,
                0.014837314374744892,
                0.0337297385558486
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.42547685373574495,
                0.18877609260380268,
                0.21033914014697075,
                0.07824314571917057,
                0.04717948706820607,
                0.024138779379427433,
                0.009377461858093739,
                0.01646904065273702
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.33962524868547916,
                0.3413359420374036,
                0.10613560257479548,
                0.10202277451753616,
                0.051669031381607056,
                0.016176274046301842,
                0.024308661464601755,
                0.018726562149822712
              ]
            },
            {
              "labels": [
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.31671232357621193,
                0.1718666758388281,
                0.20990210678428411,
                0.132582179736346,
                0.06177494116127491,
                0.05985819362103939,
                0.015715988352894783,
                0.03158758766949177
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "deep learning",
                "natural language processing",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.26435764878988266,
                0.24477094877511263,
                0.20785103924572468,
                0.1301242783665657,
                0.05615650676190853,
                0.04774670861661434,
                0.015004276297986507,
                0.03398863971233368
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3275926997885108,
                0.19769076816737652,
                0.11441039852797985,
                0.17320844903588295,
                0.06521680764853954,
                0.05407215096056461,
                0.021942174062132835,
                0.045866611413657665
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9919988512992859,
              "spans": [
                {
                  "approx_length": 102,
                  "score": 0.9919988512992859,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.7814976453781128,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 163,
                  "score": 0.9961638450622559,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 222,
                  "score": 0.998384952545166,
                  "spanid": 5
                },
                {
                  "approx_length": 300,
                  "score": 0.984811007976532,
                  "spanid": 6
                },
                {
                  "approx_length": 209,
                  "score": 0.9992579817771912,
                  "spanid": 7
                },
                {
                  "approx_length": 194,
                  "score": 0.9873918890953064,
                  "spanid": 8
                },
                {
                  "approx_length": 207,
                  "score": 0.9968888163566589,
                  "spanid": 9
                },
                {
                  "approx_length": 262,
                  "score": 0.9988899827003479,
                  "spanid": 10
                },
                {
                  "approx_length": 307,
                  "score": 0.9757458567619324,
                  "spanid": 11
                },
                {
                  "approx_length": 356,
                  "score": 0.9982706904411316,
                  "spanid": 12
                },
                {
                  "approx_length": 208,
                  "score": 0.997342586517334,
                  "spanid": 17
                },
                {
                  "approx_length": 251,
                  "score": 0.9941085577011108,
                  "spanid": 18
                },
                {
                  "approx_length": 150,
                  "score": 0.956945538520813,
                  "spanid": 19
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.1975797235965729,
              "spans": [
                {
                  "approx_length": 338,
                  "score": 0.9628623127937317,
                  "spanid": 13
                },
                {
                  "approx_length": 403,
                  "score": 0.9990697503089905,
                  "spanid": 14
                },
                {
                  "approx_length": 329,
                  "score": 0.9979159235954285,
                  "spanid": 15
                },
                {
                  "approx_length": 281,
                  "score": 0.9917464852333069,
                  "spanid": 16
                }
              ]
            }
          ],
          "summary": [
            " Large Margin Structured Convolution Operator for Thermal Infrared Object Tracking . Thermal Inf",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Trends Report will be published on April 28, 2015",
            " Model name :  *  Metric name . Metric value :  Higher is better  ( for the metric )  Uses extra training data Data evaluated on Submit Add a new evaluation result row . Add a",
            " Not in the list ?  Create a new method . New method name  ( e . g .  Rectified Linear Unit) New method full name (e . g   ReLU)  New method",
            " Thermal infrared (TIR) object tracking can track an arbitrary target in total darkness since it cannot be influenced by illumination variations . However, there are many unwanted attributes that constrain the potentials of TIR tracking",
            " LMSCO tracker outperforms most state - of - the - art trackers in terms of accuracy and robustness with sufficient frame rate . Submit results from this paper to get GitHub badges and help the community compare"
          ],
          "text_suggester": [
            {
              "input": "large margin structured convolution operator",
              "weight": 100
            },
            {
              "input": "19 apr 2018",
              "weight": 9
            },
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a collaborative optimization strategy",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a large margin structured convolution operator",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 21
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 21
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 40
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "accurate and robust tracking",
              "weight": 1
            },
            {
              "input": "achieve",
              "weight": 17
            },
            {
              "input": "add a new category",
              "weight": 37
            },
            {
              "input": "add remove mark official",
              "weight": 59
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "an arbitrary target",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "chao li",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 19
            },
            {
              "input": "comprehensive evaluations",
              "weight": 1
            },
            {
              "input": "continuous deep feature maps",
              "weight": 1
            },
            {
              "input": "convolution",
              "weight": 28
            },
            {
              "input": "create",
              "weight": 11
            },
            {
              "input": "create a new account",
              "weight": 49
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 38
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 19
            },
            {
              "input": "deep",
              "weight": 13
            },
            {
              "input": "deep appearance features",
              "weight": 1
            },
            {
              "input": "deep motion features",
              "weight": 1
            },
            {
              "input": "discriminative correlation filter",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 96
            },
            {
              "input": "efficient tir object tracking",
              "weight": 1
            },
            {
              "input": "evaluation",
              "weight": 7
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feature",
              "weight": 12
            },
            {
              "input": "fei wang",
              "weight": 1
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "illumination variations",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 16
            },
            {
              "input": "implicit interpolation",
              "weight": 1
            },
            {
              "input": "impressive results",
              "weight": 1
            },
            {
              "input": "infrared",
              "weight": 16
            },
            {
              "input": "introduce",
              "weight": 16
            },
            {
              "input": "ke song",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "liyi xiao",
              "weight": 1
            },
            {
              "input": "lmsco",
              "weight": 1
            },
            {
              "input": "low resolutions",
              "weight": 1
            },
            {
              "input": "many unwanted attributes",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 38
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 16
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "more dense samples",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 13
            },
            {
              "input": "new",
              "weight": 13
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 86
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "object",
              "weight": 13
            },
            {
              "input": "official",
              "weight": 17
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "otb paper",
              "weight": 1
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "our approach",
              "weight": 1
            },
            {
              "input": "our knowledge",
              "weight": 1
            },
            {
              "input": "our lmsco tracker",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 19
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "paper with code",
              "weight": 9
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "peng gao",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 12
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 19
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 21
            },
            {
              "input": "sosvm",
              "weight": 1
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 7
            },
            {
              "input": "sufficient frame rate",
              "weight": 1
            },
            {
              "input": "task",
              "weight": 19
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the absence",
              "weight": 1
            },
            {
              "input": "the advantage",
              "weight": 1
            },
            {
              "input": "the advantages",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 21
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 40
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the operators",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the potentials",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the spatial regularization",
              "weight": 1
            },
            {
              "input": "the strong discriminative capability",
              "weight": 1
            },
            {
              "input": "the tir targets",
              "weight": 1
            },
            {
              "input": "the tracking performance",
              "weight": 1
            },
            {
              "input": "thermal",
              "weight": 14
            },
            {
              "input": "thermal infrared",
              "weight": 21
            },
            {
              "input": "this paper",
              "weight": 98
            },
            {
              "input": "tir",
              "weight": 10
            },
            {
              "input": "tir object tracking",
              "weight": 1
            },
            {
              "input": "tir tracking",
              "weight": 1
            },
            {
              "input": "total darkness",
              "weight": 1
            },
            {
              "input": "track",
              "weight": 10
            },
            {
              "input": "tracking",
              "weight": 38
            },
            {
              "input": "two",
              "weight": 9
            },
            {
              "input": "two thermal infrared tracking benchmarks",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 13
            },
            {
              "input": "visible object tracking",
              "weight": 21
            },
            {
              "input": "visual color patterns",
              "weight": 1
            },
            {
              "input": "yipeng ma",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/large-margin-structured-convolution-operator",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.011305748268558874,
        "_index": "cache_index",
        "_id": "cacheid_6986d07a786fea666df4bc7cdee327c8",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "√ó\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nOTB\n\nPaper introduces a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006679375214793071,
        "see_also": [
          {
            "doc_id": "cacheid_9621c1fefbb266892cc45fbf22f0b742",
            "source_doc_id": "entity:discussion/51:en",
            "title": "sme wanted dalai proposal for ict492020"
          },
          {
            "doc_id": "cacheid_6d6c81e5612fd1adad6350481b2090ee",
            "source_doc_id": "entity:user/918:en",
            "title": "david h√§stbacka"
          },
          {
            "doc_id": "cacheid_2d9fbc7bf0c18a21b9244de4d6c712b5",
            "source_doc_id": "entity:user/1302:en",
            "title": "cinthia coretti"
          },
          {
            "doc_id": "cacheid_7221479d16324bd051e5cddbf6660119",
            "source_doc_id": "https://towardsdatascience.com/does-the-data-scientist-have-a-theory-of-mind-87803e8dab9a?source=---------2-----------------------&gi=a1ef9d2630bf",
            "title": "Does the Data Scientist Have a Theory of Mind? | by Art Conroy, PhD | Jun,\n2020 | Towards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_d8f5790216183106175a00211378e0e3",
            "source_doc_id": "entity:user/321:en",
            "title": "urszula sobek"
          }
        ],
        "semantic_content": " . yet .  Submit your code now Tasks  _  _ Edit Add Remove  *   *   *   *  OBJECT TRACKING  *  THERMAL INFRARED OBJECT TRACKING Datasets  _  _ Edit  *   *   *  OTB Results from the Paper  _  _ Edit Add Remove  *",
        "short_answer": [
          {
            "score": 0.04013422876596451,
            "start": 186,
            "end": 218,
            "answer": "Paper  _   _  Edit Add Remove  *"
          }
        ]
      },
      {
        "_source": {
          "title": "DSConv: Efficient Convolution Operator | Papers With Code\n\n",
          "lemma_title": "Efficient Convolution Operator Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\n       Mark the official implementation from paper authors\n\n√ó\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- Quantization\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * QUANTIZATION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * QUANTIZATION \\- \n\n      Add a method\n\n√ó\n\nAttached methods:\n\n  * BATCH NORMALIZATION\n\n  * BOTTLENECK RESIDUAL BLOCK\n\n  * RESIDUAL CONNECTION\n\n  * RESIDUAL BLOCK\n\n  * AVERAGE POOLING\n\n  * LOCAL RESPONSE NORMALIZATION\n\n  * AUXILIARY CLASSIFIER\n\n  * INCEPTION MODULE\n\n  * CONCATENATED SKIP CONNECTION\n\n  * RESNET\n\n  * GLOBAL AVERAGE POOLING\n\n  * DENSE BLOCK\n\n  * GROUPED CONVOLUTION\n\n  * KAIMING INITIALIZATION\n\n  * 1X1 CONVOLUTION\n\n  * RELU\n\n  * DROPOUT\n\n  * DENSE CONNECTIONS\n\n  * MAX POOLING\n\n  * SOFTMAX\n\n  * ALEXNET\n\n  * GOOGLENET\n\n  * DENSENET\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  * BATCH NORMALIZATION \\- \n\n  * BOTTLENECK RESIDUAL BLOCK \\- \n\n  * RESIDUAL CONNECTION \\- \n\n  * RESIDUAL BLOCK \\- \n\n  * AVERAGE POOLING \\- \n\n  * LOCAL RESPONSE NORMALIZATION \\- \n\n  * AUXILIARY CLASSIFIER \\- \n\n  * INCEPTION MODULE \\- \n\n  * CONCATENATED SKIP CONNECTION \\- \n\n  * RESNET \\- \n\n  * GLOBAL AVERAGE POOLING \\- \n\n  * DENSE BLOCK \\- \n\n  * GROUPED CONVOLUTION \\- \n\n  * KAIMING INITIALIZATION \\- \n\n  * 1X1 CONVOLUTION \\- \n\n  * RELU \\- \n\n  * DROPOUT \\- \n\n  * DENSE CONNECTIONS \\- \n\n  * MAX POOLING \\- \n\n  * SOFTMAX \\- \n\n  * ALEXNET \\- \n\n  * GOOGLENET \\- \n\n  * DENSENET \\- \n\n  * CONVOLUTION \\- \n\n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nImageNet\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  DSConv: Efficient Convolution Operator\n\nICCV 2019 ‚Ä¢  Marcelo Gennari do Nascimento ‚Ä¢  Roger Fawcett ‚Ä¢  Victor Adrian\nPrisacariu\n\nQuantization is a popular way of increasing the speed and lowering the memory\nusage of Convolution Neural Networks (CNNs). When labelled training data is\navailable, network weights and activations have successfully been quantized\ndown to 1-bit... The same cannot be said about the scenario when labelled\ntraining data is not available, e.g. when quantizing a pre-trained model,\nwhere current approaches show, at best, no loss of accuracy at 8-bit\nquantizations. We introduce DSConv, a flexible quantized convolution operator\nthat replaces single-precision operations with their far less expensive\ninteger counterparts, while maintaining the probability distributions over\nboth the kernel weights and the outputs. We test our model as a plug-and-play\nreplacement for standard convolution on most popular neural network\narchitectures, ResNet, DenseNet, GoogLeNet, AlexNet and VGG-Net and\ndemonstrate state-of-the-art results, with less than 1% loss of accuracy,\nwithout retraining, using only 4-bit quantization. We also show how a\ndistillation-based adaptation stage with unlabelled data can improve results\neven further. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * QUANTIZATION\n\n  Datasets\n\n__Edit\n\n* * *\n\nImageNet\n\n  Results from the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nBatch Normalization\n\nNormalization  \n  \nBottleneck Residual Block\n\nSkip Connection Blocks  \n  \nResidual Connection\n\nSkip Connections  \n  \nResidual Block\n\nSkip Connection Blocks  \n  \nAverage Pooling\n\nPooling Operations  \n  \nLocal Response Normalization\n\nNormalization  \n  \nAuxiliary Classifier\n\nMiscellaneous Components  \n  \nInception Module\n\nImage Model Blocks  \n  \nConcatenated Skip Connection\n\nSkip Connections  \n  \nResNet\n\nConvolutional Neural Networks  \n  \nGlobal Average Pooling\n\nPooling Operations  \n  \nDense Block\n\nImage Model Blocks  \n  \nGrouped Convolution\n\nConvolutions  \n  \nKaiming Initialization\n\nInitialization  \n  \n1x1 Convolution\n\nConvolutions  \n  \nReLU\n\nActivation Functions  \n  \nDropout\n\nRegularization  \n  \nDense Connections\n\nFeedforward Networks  \n  \nMax Pooling\n\nPooling Operations  \n  \nSoftmax\n\nOutput Functions  \n  \nAlexNet\n\nConvolutional Neural Networks  \n  \nGoogLeNet\n\nConvolutional Neural Networks  \n  \nDenseNet\n\nConvolutional Neural Networks  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task quantization list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task √ó attach task quantization add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task quantization add method √ó attach method batch normalization BOTTLENECK residual block residual connection residual block average POOLING local response normalization auxiliary classifier INCEPTION module CONCATENATED SKIP connection RESNET global average POOLING dense block group CONVOLUTION kaiming INITIALIZATION 1x1 convolution RELU dropout dense connection max POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method batch NORMALIZATION BOTTLENECK RESIDUAL BLOCK residual connection residual BLOCK average POOLING local response NORMALIZATION auxiliary CLASSIFIER INCEPTION module CONCATENATED connection RESNET GLOBAL average POOLING dense BLOCK group CONVOLUTION KAIMING INITIALIZATION 1x1 convolution RELU dropout dense CONNECTIONS MAX POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION edit dataset add remove dataset introduce paper add remove other dataset use paper ImageNet paper introduce new dataset _ _ add new dataset save Efficient Convolution Operator ICCV 2019 ‚Ä¢ Marcelo Gennari Nascimento ‚Ä¢ Roger Fawcett Victor Adrian Prisacariu Quantization popular way increase speed lower memory usage Convolution Neural Networks CNNs label training datum available network weight activation quantize 1-bit same can say scenario label training datum available quantize pre-trained model current approach show good loss accuracy 8-bit quantization introduce DSConv flexible quantized convolution operator replace single-precision operation expensive integer counterpart maintain probability distribution kernel weight output test model plug-and-play replacement standard convolution popular neural network architecture ResNet DenseNet GoogLeNet AlexNet VGG-Net demonstrate state-of-the-art result less 1 loss accuracy retrain use 4-bit quantization show distillation-based adaptation stage unlabelled datum can improve result read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove quantization dataset _ _ edit imagenet result Paper _ _ edit add remove _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type batch normalization normalization bottleneck Residual Block skip Connection Blocks Residual connection Skip Connections Residual Block skip Connection Blocks Average Pooling Pooling Operations local Response Normalization normalization Auxiliary Classifier Miscellaneous Components Inception Module Image Model Blocks Concatenated Skip connection Skip Connections ResNet Convolutional Neural Networks Global Average Pooling Pooling Operations Dense Block Image Model Blocks Grouped Convolution convolutions kaime initialization initialization 1x1 Convolution Convolutions relu Activation Functions regularization Dense Connections Feedforward Networks Max Pooling Pooling Operations Softmax Output Functions AlexNet Convolutional Neural Networks GoogLeNet Convolutional Neural Networks DenseNet Convolutional Neural Networks convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Metric",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "MAX",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ALEXNET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DENSENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Linear",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ICCV",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Marcelo Gennari",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Nascimento",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Roger Fawcett",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adrian Prisacariu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "neural network",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GoogLeNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "AlexNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "VGG-Net",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Concatenated Skip Connection",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dense Block  ",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Grouped Convolution  Convolutions",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ReLU  Activation Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Softmax  Output Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "ImageNet   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the scenario",
              "property": "when label",
              "value": "training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "introduce",
              "value": "DSConv",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "test",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "distillation-based adaptation stage",
              "property": "can improve",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "machine learning",
                "internet of things",
                "deep learning",
                "natural language processing",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2668410362675786,
                0.09896954987198114,
                0.27236777544021606,
                0.18081902898848057,
                0.05852732993662357,
                0.06764410436153412,
                0.03876231610774994,
                0.016068918630480766
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.35212486423552036,
                0.2920630844309926,
                0.13506511878222227,
                0.065984639339149,
                0.07275313138961792,
                0.045883440878242254,
                0.011095483787357807,
                0.025030274409800768
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.24692200031131506,
                0.22839650698006153,
                0.261474234983325,
                0.1306574083864689,
                0.050379553809762,
                0.016356945037841797,
                0.03653158061206341,
                0.0292817372828722
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "computer vision",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.27719002589583397,
                0.20975345559418201,
                0.1852069767192006,
                0.07818364351987839,
                0.07954248413443565,
                0.08761176560074091,
                0.06524304114282131,
                0.017268581315875053
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3746554674580693,
                0.22429421450942755,
                0.17696329997852445,
                0.06887668650597334,
                0.08836345840245485,
                0.030804456677287817,
                0.012053466401994228,
                0.023988965433090925
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3492646589875221,
                0.2034083236940205,
                0.18095654621720314,
                0.12506238743662834,
                0.06583806918933988,
                0.04356989311054349,
                0.009340261109173298,
                0.022559878416359425
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.38211968820542097,
                0.20986603572964668,
                0.17163959611207247,
                0.06933960691094398,
                0.04749210411682725,
                0.07330490741878748,
                0.012814713642001152,
                0.033423435874283314
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.37926317006349564,
                0.19165954180061817,
                0.1497139548882842,
                0.11079111509025097,
                0.05537470243871212,
                0.06861344631761312,
                0.01738884672522545,
                0.027195206843316555
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "internet of things",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.6263732486404479,
                0.24705401132814586,
                0.038986049592494965,
                0.039754245430231094,
                0.018983399029821157,
                0.008033248595893383,
                0.011123870266601443,
                0.009691898245364428
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.42791916616261005,
                0.42567391647025943,
                0.05322565673850477,
                0.019092107191681862,
                0.02159051294438541,
                0.017775981919839978,
                0.025564270094037056,
                0.009158421074971557
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3569994284771383,
                0.36026700027287006,
                0.062254322692751884,
                0.0940168397501111,
                0.04426709283143282,
                0.050978414714336395,
                0.009667323902249336,
                0.02154967049136758
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.5407535042613745,
                0.2865408482030034,
                0.06718112714588642,
                0.01584777422249317,
                0.03486715257167816,
                0.028664967976510525,
                0.0168811974581331,
                0.009263449348509312
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.25077254325151443,
                0.24542272370308638,
                0.1786219570785761,
                0.11635238770395517,
                0.07334604673087597,
                0.06896488927304745,
                0.05063504260033369,
                0.015884358435869217
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9915897250175476,
              "spans": [
                {
                  "approx_length": 61,
                  "score": 0.9915897250175476,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8948657860358556,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 144,
                  "score": 0.9982118010520935,
                  "spanid": 3
                },
                {
                  "approx_length": 238,
                  "score": 0.9937748908996582,
                  "spanid": 4
                },
                {
                  "approx_length": 200,
                  "score": 0.9993357062339783,
                  "spanid": 5
                },
                {
                  "approx_length": 299,
                  "score": 0.998818576335907,
                  "spanid": 6
                },
                {
                  "approx_length": 282,
                  "score": 0.9924042820930481,
                  "spanid": 7
                },
                {
                  "approx_length": 241,
                  "score": 0.9939625263214111,
                  "spanid": 8
                },
                {
                  "approx_length": 169,
                  "score": 0.9993694424629211,
                  "spanid": 9
                },
                {
                  "approx_length": 215,
                  "score": 0.9972627758979797,
                  "spanid": 10
                },
                {
                  "approx_length": 201,
                  "score": 0.9990112781524658,
                  "spanid": 11
                },
                {
                  "approx_length": 234,
                  "score": 0.9945089221000671,
                  "spanid": 12
                },
                {
                  "approx_length": 205,
                  "score": 0.996544599533081,
                  "spanid": 13
                },
                {
                  "approx_length": 205,
                  "score": 0.9975277185440063,
                  "spanid": 14
                },
                {
                  "approx_length": 334,
                  "score": 0.8084074258804321,
                  "spanid": 15
                },
                {
                  "approx_length": 300,
                  "score": 0.9861253499984741,
                  "spanid": 16
                },
                {
                  "approx_length": 290,
                  "score": 0.9990061521530151,
                  "spanid": 18
                },
                {
                  "approx_length": 202,
                  "score": 0.9942792654037476,
                  "spanid": 20
                },
                {
                  "approx_length": 293,
                  "score": 0.9972748756408691,
                  "spanid": 21
                },
                {
                  "approx_length": 582,
                  "score": 0.998123824596405,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9841867685317993,
                  "spanid": 23
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.08079369366168976,
              "spans": [
                {
                  "approx_length": 367,
                  "score": 0.9876413345336914,
                  "spanid": 17
                },
                {
                  "approx_length": 261,
                  "score": 0.9514073133468628,
                  "spanid": 19
                }
              ]
            }
          ],
          "summary": [
            " DSConv :  Efficient Convolution Operator . Efficient convolution Operator is",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Handbook of Methods will be published in April 2015 .",
            " Metric value :  Uses extra training data Data evaluated on Submit Add a new evaluation result row . New task name :  Top - level area :  Adversarial Audio Computer Code Computer Vision Graphs Knowledge",
            " Markdown description description (optional ;   $ \\LaTeX $  enabled ) enabled . You can edit this . Add a new method name (e . g .  Rectified Linear Unit) or a",
            " ImageNet Paper introduces a new dataset? Add or remove datasets introduced in this paper . Save DSConv :  Efficient Convolution Operator .",
            " Quantization is a popular way of increasing the speed and memory usage of Convolution Neural Networks . DSConv is a flexible quantized convolution operator that replaces single precision operations with their far less expensive integer counterparts",
            " Submit results from this paper to get state - of - the - art GitHub badges and help the community compare results to other papers . Submit your code now .",
            " a free resource with all data licensed under CC - BY- BY-SA .  Terms Privacy Cookies policy .  Use of the site includes the content of this article ."
          ],
          "text_suggester": [
            {
              "input": "1x1",
              "weight": 28
            },
            {
              "input": "1x1 convolution convolutions",
              "weight": 1
            },
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a flexible quantized convolution operator",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 21
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 21
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a popular way",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 40
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "activations",
              "weight": 1
            },
            {
              "input": "add a new category",
              "weight": 37
            },
            {
              "input": "add remove mark official",
              "weight": 59
            },
            {
              "input": "adrian prisacariu",
              "weight": 9
            },
            {
              "input": "alexnet",
              "weight": 1
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "auxiliary classifier",
              "weight": 1
            },
            {
              "input": "average",
              "weight": 3
            },
            {
              "input": "average pooling",
              "weight": 1
            },
            {
              "input": "batch",
              "weight": 8
            },
            {
              "input": "batch normalization",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "block",
              "weight": 11
            },
            {
              "input": "blocks",
              "weight": 5
            },
            {
              "input": "blocks concatenated skip connection",
              "weight": 1
            },
            {
              "input": "both the kernel weights",
              "weight": 1
            },
            {
              "input": "bottleneck residual block",
              "weight": 1
            },
            {
              "input": "cnns",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 19
            },
            {
              "input": "concatenated skip connection",
              "weight": 9
            },
            {
              "input": "connection",
              "weight": 7
            },
            {
              "input": "connection blocks residual connection",
              "weight": 1
            },
            {
              "input": "connections",
              "weight": 17
            },
            {
              "input": "convolution",
              "weight": 14
            },
            {
              "input": "convolution convolutions",
              "weight": 1
            },
            {
              "input": "convolution neural networks",
              "weight": 1
            },
            {
              "input": "convolutional neural networks",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 11
            },
            {
              "input": "create a new account",
              "weight": 49
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 38
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 12
            },
            {
              "input": "dense",
              "weight": 3
            },
            {
              "input": "dense block",
              "weight": 1
            },
            {
              "input": "densenet",
              "weight": 1
            },
            {
              "input": "dsconv",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 96
            },
            {
              "input": "efficient convolution operator",
              "weight": 1
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feedforward networks",
              "weight": 1
            },
            {
              "input": "first",
              "weight": 9
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "functions",
              "weight": 14
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "global average pooling",
              "weight": 1
            },
            {
              "input": "global average pooling pooling operations",
              "weight": 1
            },
            {
              "input": "googlenet",
              "weight": 1
            },
            {
              "input": "iccv",
              "weight": 1
            },
            {
              "input": "image model",
              "weight": 1
            },
            {
              "input": "imagenet paper",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 16
            },
            {
              "input": "inception module",
              "weight": 1
            },
            {
              "input": "introduce",
              "weight": 12
            },
            {
              "input": "kaiming initialization",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "local",
              "weight": 5
            },
            {
              "input": "local response normalization",
              "weight": 1
            },
            {
              "input": "marcelo gennari",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "max pooling",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 38
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 19
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "miscellaneous components",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 18
            },
            {
              "input": "most popular neural network architectures",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 13
            },
            {
              "input": "nascimento",
              "weight": 1
            },
            {
              "input": "network weights",
              "weight": 1
            },
            {
              "input": "new",
              "weight": 13
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 86
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "normalization",
              "weight": 38
            },
            {
              "input": "official",
              "weight": 17
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "operations",
              "weight": 15
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "our model",
              "weight": 1
            },
            {
              "input": "output functions",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 19
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "pooling",
              "weight": 15
            },
            {
              "input": "pooling operations",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "quantization",
              "weight": 19
            },
            {
              "input": "regularization dense connections",
              "weight": 1
            },
            {
              "input": "relu activation functions",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 12
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "residual",
              "weight": 12
            },
            {
              "input": "residual block",
              "weight": 1
            },
            {
              "input": "resnet",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 38
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "roger fawcett",
              "weight": 1
            },
            {
              "input": "skip",
              "weight": 13
            },
            {
              "input": "skip connections",
              "weight": 1
            },
            {
              "input": "softmax",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 21
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "standard convolution",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 7
            },
            {
              "input": "task",
              "weight": 19
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 21
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 40
            },
            {
              "input": "the memory usage",
              "weight": 1
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the outputs",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the probability distributions",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the scenario",
              "weight": 1
            },
            {
              "input": "the speed",
              "weight": 1
            },
            {
              "input": "their far less expensive integer counterparts",
              "weight": 1
            },
            {
              "input": "this paper",
              "weight": 78
            },
            {
              "input": "training",
              "weight": 12
            },
            {
              "input": "training data",
              "weight": 1
            },
            {
              "input": "unlabelled data",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 10
            },
            {
              "input": "victor adrian prisacariu",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/dsconv-efficient-convolution-operator-1",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.009826552345225142,
        "_index": "cache_index",
        "_id": "cacheid_a5f195d3035778deae0cdc7d8ad2478b",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "√ó\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nImageNet\n\nPaper introduces a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006077675707163277,
        "see_also": [
          {
            "doc_id": "cacheid_5efa105a59af6cd6ea3435579cd1d790",
            "source_doc_id": "https://towardsdatascience.com/@benoitdescamps?source=post_page-----c6c602865619----------------------&gi=147dd7ff5dc7",
            "title": "Benoit Descamps ‚Äì Towards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_ed07cd30e50b3feb9feb7ace644360cc",
            "source_doc_id": "https://towardsdatascience.com/@benoitdescamps?source=post_page-----c6c602865619----------------------&gi=25941362b7bf",
            "title": "Benoit Descamps ‚Äì Towards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_28b2124009574a06241c14bb181a762b",
            "source_doc_id": "https://towardsdatascience.com/@benoitdescamps?source=post_page-----742438cb483e----------------------&gi=c311a3f8ed22",
            "title": "Benoit Descamps ‚Äì Towards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_76d4a806d85ff3045de95a38c148d8db",
            "source_doc_id": "entity:user/1548:en",
            "title": "erita skendaj"
          },
          {
            "doc_id": "cacheid_5855bfe46f4a2a483b0d8ebfc3fcf368",
            "source_doc_id": "https://stats.stackexchange.com/questions/5026/what-is-the-difference-between-data-mining-statistics-machine-learning-and-ai",
            "title": "What is the difference between data mining, statistics, machine learning and\nAI? - Cross Validated\n\n"
          }
        ],
        "semantic_content": " . code implementations yet .  Submit your code now Tasks  _  _ Edit Add Remove  *   *   *   *  QUANTIZATION Datasets  _  _ Edit  *   *   *  ImageNet Results from the Paper  _  _ Edit Add Remove  *   *   * . DROPOUT \\ -   *  DENSE CONNECTIONS \\ -   *  MAX POOLING \\ -   *  SOFTMAX \\ -   *  ALEXNET \\ -   *  GOOGLENET \\ -   *  DENSENET \\ -   *  CONVOLUTION \\ -  Edit Datasets √ó Add or remove datasets introduced in . Pooling Pooling Operations Softmax Output Functions AlexNet Convolutional Neural Networks GoogLeNet Convolutional Neural Networks DenseNet Convolutional Neural Networks Convolution Convolutions Contact us on :  hello @ paperswithcode . com .  Papers With Code is a free resource with all data licensed under CC - BY - SA .  Terms Privacy Cookies policy",
        "short_answer": [
          {
            "score": 2.730775304371491e-05,
            "start": 53,
            "end": 82,
            "answer": "Tasks  _   _  Edit Add Remove"
          }
        ]
      },
      {
        "_source": {
          "title": "Does Non-COVID19 Lung Lesion Help? Investigating Transferability in COVID-19\nCT Image Segmentation | Papers With Code\n\n",
          "lemma_title": "Non-COVID19 Lung Lesion Help investigate transferability COVID-19 CT Image Segmentation Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\n       Mark the official implementation from paper authors\n\n√ó\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- Computed Tomography (CT) Transfer Learning Semantic Segmentation\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * COMPUTED TOMOGRAPHY (CT)\n\n  * SEMANTIC SEGMENTATION\n\n  * TRANSFER LEARNING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * COMPUTED TOMOGRAPHY (CT) \\- \n\n  * SEMANTIC SEGMENTATION \\- \n\n  * TRANSFER LEARNING \\- \n\n      Add a method\n\n√ó\n\nAttached methods:\n\n  * CONCATENATED SKIP CONNECTION\n\n  * RELU\n\n  * MAX POOLING\n\n  * CONVOLUTION\n\n  * U-NET\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  * CONCATENATED SKIP CONNECTION \\- \n\n  * RELU \\- \n\n  * MAX POOLING \\- \n\n  * CONVOLUTION \\- \n\n  * U-NET \\- \n\n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  Does Non-COVID19 Lung Lesion Help? Investigating Transferability in COVID-19\nCT Image Segmentation\n\n23 Jun 2020 ‚Ä¢  Yixin Wang ‚Ä¢  Yao Zhang ‚Ä¢  Yang Liu ‚Ä¢  Jiang Tian ‚Ä¢  Cheng\nZhong ‚Ä¢  Zhongchao Shi  ‚Ä¢  Yang Zhang ‚Ä¢  Zhiqiang He\n\nCoronavirus disease 2019 (COVID-19) is a highly contagious virus spreading all\naround the world. Deep learning has been adopted as an effective technique to\naid COVID-19 detection and segmentation from computed tomography (CT)\nimages... The major challenge lies in the inadequate public COVID-19 datasets.\nRecently, transfer learning has become a widely used technique that leverages\nthe knowledge gained while solving one problem and applying it to a different\nbut related problem. However, it remains unclear whether various non-COVID19\nlung lesions could contribute to segmenting COVID-19 infection areas and how\nto better conduct this transfer procedure. This paper provides a way to\nunderstand the transferability of non-COVID19 lung lesions. Based on a\npublicly available COVID-19 CT dataset and three public non-COVID19 datasets,\nwe evaluate four transfer learning methods using 3D U-Net as a standard\nencoder-decoder method. The results reveal the benefits of transferring\nknowledge from non-COVID19 lung lesions, and learning from multiple lung\nlesion datasets can extract more general features, leading to accurate and\nrobust pre-trained models. We further show the capability of the encoder to\nlearn feature representations of lung lesions, which improves segmentation\naccuracy and facilitates training convergence. In addition, our proposed\nHybrid-encoder learning method incorporates transferred lung lesion features\nfrom non-COVID19 datasets effectively and achieves significant improvement.\nThese findings promote new insights into transfer learning for COVID-19 CT\nimage segmentation, which can also be further generalized to other medical\ntasks. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * COMPUTED TOMOGRAPHY (CT)\n\n  * SEMANTIC SEGMENTATION\n\n  * TRANSFER LEARNING\n\n  Datasets\n\n__Edit\n\n* * *\n\n__  Add Datasets  introduced or used in this paper\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nConcatenated Skip Connection\n\nSkip Connections  \n  \nReLU\n\nActivation Functions  \n  \nMax Pooling\n\nPooling Operations  \n  \nConvolution\n\nConvolutions  \n  \nU-Net\n\nSemantic Segmentation Models  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task Computed Tomography CT Transfer Learning Semantic segmentation list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task √ó attach task compute TOMOGRAPHY CT semantic segmentation transfer learning add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task compute TOMOGRAPHY CT semantic segmentation transfer learn add method √ó attach method CONCATENATED SKIP connection RELU max POOLING CONVOLUTION U-NET add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method CONCATENATED connection RELU MAX POOLING CONVOLUTION U-NET edit Datasets add remove dataset introduce paper add remove other dataset use paper paper introduce new dataset _ _ add new dataset save Non-COVID19 Lung Lesion Help investigate transferability COVID-19 CT Image Segmentation 23 Jun 2020 ‚Ä¢ Yixin Wang ‚Ä¢ Yao Zhang ‚Ä¢ Yang Liu ‚Ä¢ Jiang Tian ‚Ä¢ Cheng Zhong ‚Ä¢ Zhongchao Shi ‚Ä¢ Yang Zhang ‚Ä¢ Zhiqiang He Coronavirus disease 2019 COVID-19 contagious virus spread world Deep learning adopt effective technique aid covid-19 detection segmentation compute tomography CT image major challenge lie inadequate public covid-19 dataset transfer learning become use technique leverage knowledge gain solve one problem apply different related problem remain unclear various non-covid19 lung lesion could contribute segment COVID-19 infection area conduct transfer procedure paper provide way understand transferability non-covid19 lung lesion base available CT dataset three public non-covid19 dataset evaluate four transfer learning method use 3D U-Net standard encoder-decoder method result reveal benefit transfer knowledge non-covid19 lung lesion learn multiple lung lesion dataset can extract more general feature lead accurate robust pre-trained model show capability encoder learn feature representation lung lesion improve segmentation accuracy facilitate training convergence addition proposed hybrid-encoder learning method incorporate transfer lung lesion feature non-covid19 dataset achieve significant improvement finding promote new insight transfer learn COVID-19 CT image segmentation can generalize other medical task read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove compute TOMOGRAPHY CT semantic segmentation transfer learning dataset _ _ edit _ _ Add Datasets introduce use paper result Paper _ _ edit _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type Concatenated Skip connection Skip Connections ReLU Activation Functions Max Pooling Pooling Operations Convolution convolution U-Net Semantic Segmentation model contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computed Tomography (CT)",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Yixin Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yao Zhang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yang Liu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yang Zhang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deep learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "COVID-19 CT",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "non-COVID19",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "non-COVID19",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Concatenated Skip Connection",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ReLU  Activation Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Max Pooling  Pooling Operations",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "major challenge",
              "property": "lie in",
              "value": "inadequate public covid-19 dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "transfer learning",
              "property": "become",
              "value": "technique",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "provide",
              "value": "way",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "evaluate",
              "value": "four transfer learning method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "four transfer learning method",
              "property": "use",
              "value": "3D U-Net",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "result",
              "property": "reveal",
              "value": "benefit",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "multiple lung lesion dataset",
              "property": "can extract",
              "value": "more general feature",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "further show",
              "value": "capability",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "proposed hybrid-encoder learning method",
              "property": "incorporate transfer",
              "value": "lung lesion feature",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "finding",
              "property": "promote",
              "value": "new insight",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "finding",
              "property": "promote",
              "value": "insight into transfer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "insight into transfer",
              "property": "learn for",
              "value": "COVID-19 CT image segmentation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "Computed Tomography",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute tomography",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "computer vision",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.26438368344679475,
                0.29321503918617964,
                0.12231990694999695,
                0.15484154410660267,
                0.11743797920644283,
                0.021713352296501398,
                0.008766695857048035,
                0.01732184085994959
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.31806728709489107,
                0.22105415957048535,
                0.08205175027251244,
                0.22461498156189919,
                0.05322249513119459,
                0.05979491537436843,
                0.03162109153345227,
                0.009573288261890411
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4909241273999214,
                0.13214559201151133,
                0.19954854622483253,
                0.08628922235220671,
                0.03814082033932209,
                0.02081833127886057,
                0.00982022937387228,
                0.022313068620860577
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "computer vision",
                "robotic",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.4585575945675373,
                0.2117945570498705,
                0.11914862040430307,
                0.10109944362193346,
                0.045194832142442465,
                0.03075081529095769,
                0.024590734392404556,
                0.008863353170454502
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.35796792805194855,
                0.17779557686299086,
                0.18395226635038853,
                0.09181044530123472,
                0.10868630930781364,
                0.036832092329859734,
                0.013607431203126907,
                0.029347898438572884
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2768703866750002,
                0.3099802937358618,
                0.13965896517038345,
                0.0948754083365202,
                0.07664071209728718,
                0.0451883664354682,
                0.01747892238199711,
                0.03930693306028843
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.3168510999530554,
                0.2962465863674879,
                0.12437382712960243,
                0.09212074428796768,
                0.09186259005218744,
                0.01853969506919384,
                0.0395191665738821,
                0.02048627007752657
              ]
            },
            {
              "labels": [
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.24270982574671507,
                0.1511044967919588,
                0.23542239889502525,
                0.18262582551687956,
                0.07781009189784527,
                0.05846101092174649,
                0.039993236772716045,
                0.011873195879161358
              ]
            },
            {
              "labels": [
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "natural language processing",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3544415161013603,
                0.1337179709225893,
                0.20740500325337052,
                0.09462795685976744,
                0.11346991686150432,
                0.044153730385005474,
                0.03619583137333393,
                0.015988169237971306
              ]
            },
            {
              "labels": [
                "natural language processing",
                "computer vision",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.44448293349705637,
                0.32771284505724907,
                0.09633023082278669,
                0.06046190904453397,
                0.03502765134908259,
                0.019437593640759587,
                0.011415323475375772,
                0.005131527781486511
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.269291577860713,
                0.28980145137757063,
                0.23364081420004368,
                0.08541306294500828,
                0.04984228778630495,
                0.028777304105460644,
                0.015079528093338013,
                0.028153878170996904
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9955170154571533,
              "spans": [
                {
                  "approx_length": 125,
                  "score": 0.9955170154571533,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8035062714056536,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 183,
                  "score": 0.9957739114761353,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 215,
                  "score": 0.9990337491035461,
                  "spanid": 5
                },
                {
                  "approx_length": 292,
                  "score": 0.9796426296234131,
                  "spanid": 6
                },
                {
                  "approx_length": 185,
                  "score": 0.9967429637908936,
                  "spanid": 7
                },
                {
                  "approx_length": 184,
                  "score": 0.9989454746246338,
                  "spanid": 8
                },
                {
                  "approx_length": 199,
                  "score": 0.9954511523246765,
                  "spanid": 9
                },
                {
                  "approx_length": 206,
                  "score": 0.996894359588623,
                  "spanid": 10
                },
                {
                  "approx_length": 215,
                  "score": 0.9991269111633301,
                  "spanid": 11
                },
                {
                  "approx_length": 310,
                  "score": 0.9957551956176758,
                  "spanid": 12
                },
                {
                  "approx_length": 315,
                  "score": 0.9940146207809448,
                  "spanid": 14
                },
                {
                  "approx_length": 234,
                  "score": 0.9988424777984619,
                  "spanid": 18
                },
                {
                  "approx_length": 209,
                  "score": 0.9954366683959961,
                  "spanid": 19
                },
                {
                  "approx_length": 247,
                  "score": 0.9967073202133179,
                  "spanid": 20
                },
                {
                  "approx_length": 294,
                  "score": 0.9890193343162537,
                  "spanid": 21
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.15769270062446594,
              "spans": [
                {
                  "approx_length": 329,
                  "score": 0.954837441444397,
                  "spanid": 13
                },
                {
                  "approx_length": 350,
                  "score": 0.5157932639122009,
                  "spanid": 15
                },
                {
                  "approx_length": 351,
                  "score": 0.9992300868034363,
                  "spanid": 16
                },
                {
                  "approx_length": 425,
                  "score": 0.9993786215782166,
                  "spanid": 17
                }
              ]
            }
          ],
          "summary": [
            " Does Non - COVID19 Lung Lesion help ?  Investigating Transferability in",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Trends Report will be published on Thursday, August 31,",
            " Metric value :  Uses extra training data Data evaluated on Submit Add a new evaluation result row . New task name :  Top - level area :  Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base",
            " Add a new method to Markdown . Use Markdown to create a Markdown list of methods . Add methods to the list . Add a method that is not in the list? Add methods:  Create a new",
            " This paper provides a way to understand the transferability of non - COVID19 lung lesions . Based on a publicly available COVID - 19 CT dataset and three public datasets . The major challenge lies in the inadequate public",
            " We evaluate four transfer learning methods using 3D U - Net as a standard encoder - decoder method . The results reveal the benefits of transferring knowledge from non - COVID19 lung lesions . Learning from multiple lung",
            " Submit results from this paper to get GitHub badges and help the community compare results to other papers . Submit results to get state - of - the - art GitHub badges ."
          ],
          "text_suggester": [
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a different but related problem",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a highly contagious virus",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 17
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 17
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 33
            },
            {
              "input": "a way",
              "weight": 1
            },
            {
              "input": "a widely used technique",
              "weight": 1
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "add a new category",
              "weight": 32
            },
            {
              "input": "add remove mark official",
              "weight": 50
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "an effective technique",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "cheng zhong",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 16
            },
            {
              "input": "compute",
              "weight": 6
            },
            {
              "input": "concatenated skip connection",
              "weight": 1
            },
            {
              "input": "connection",
              "weight": 5
            },
            {
              "input": "convolutions",
              "weight": 1
            },
            {
              "input": "coronavirus",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 9
            },
            {
              "input": "create a new account",
              "weight": 41
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 48
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 16
            },
            {
              "input": "deep learning",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 80
            },
            {
              "input": "edit datasets",
              "weight": 1
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feature",
              "weight": 14
            },
            {
              "input": "feature representations",
              "weight": 1
            },
            {
              "input": "first",
              "weight": 8
            },
            {
              "input": "four",
              "weight": 8
            },
            {
              "input": "four transfer learning methods",
              "weight": 1
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 13
            },
            {
              "input": "introduce",
              "weight": 10
            },
            {
              "input": "jiang tian",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "learn",
              "weight": 3
            },
            {
              "input": "learning",
              "weight": 8
            },
            {
              "input": "learning semantic segmentation",
              "weight": 1
            },
            {
              "input": "lesion",
              "weight": 11
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "lung",
              "weight": 11
            },
            {
              "input": "lung lesions",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "max pooling",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 32
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 13
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 17
            },
            {
              "input": "more general features",
              "weight": 1
            },
            {
              "input": "multiple lung lesion datasets",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 11
            },
            {
              "input": "new",
              "weight": 11
            },
            {
              "input": "new insights",
              "weight": 1
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 72
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "official",
              "weight": 14
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "one",
              "weight": 8
            },
            {
              "input": "one problem",
              "weight": 1
            },
            {
              "input": "one problem and apply",
              "weight": 59
            },
            {
              "input": "other",
              "weight": 10
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other medical tasks",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 32
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "paper with code",
              "weight": 8
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "pooling operations",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "relu",
              "weight": 1
            },
            {
              "input": "relu activation functions",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 11
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 16
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "segmentation",
              "weight": 16
            },
            {
              "input": "segmentation accuracy",
              "weight": 1
            },
            {
              "input": "semantic",
              "weight": 2
            },
            {
              "input": "semantic segmentation",
              "weight": 17
            },
            {
              "input": "semantic segmentation models",
              "weight": 1
            },
            {
              "input": "significant improvement",
              "weight": 1
            },
            {
              "input": "skip connections",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 17
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 6
            },
            {
              "input": "task",
              "weight": 16
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the benefits",
              "weight": 1
            },
            {
              "input": "the capability",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 17
            },
            {
              "input": "the encoder",
              "weight": 1
            },
            {
              "input": "the knowledge",
              "weight": 1
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 33
            },
            {
              "input": "the major challenge",
              "weight": 1
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the results",
              "weight": 1
            },
            {
              "input": "the transferability",
              "weight": 1
            },
            {
              "input": "the world",
              "weight": 1
            },
            {
              "input": "these findings",
              "weight": 1
            },
            {
              "input": "this paper",
              "weight": 98
            },
            {
              "input": "this transfer procedure",
              "weight": 1
            },
            {
              "input": "three",
              "weight": 8
            },
            {
              "input": "tomography",
              "weight": 5
            },
            {
              "input": "training convergence",
              "weight": 1
            },
            {
              "input": "transfer",
              "weight": 7
            },
            {
              "input": "transfer learning",
              "weight": 33
            },
            {
              "input": "transferred lung lesion features",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 12
            },
            {
              "input": "yang liu",
              "weight": 1
            },
            {
              "input": "yang zhang",
              "weight": 1
            },
            {
              "input": "yao zhang",
              "weight": 1
            },
            {
              "input": "yixin wang",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            },
            {
              "input": "zhiqiang",
              "weight": 1
            },
            {
              "input": "zhongchao shi",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/does-non-covid19-lung-lesion-help",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.015287101834009192,
        "_index": "cache_index",
        "_id": "cacheid_d339b260b88d148eceb3986be92e5b50",
        "_type": "_doc",
        "highlight": {
          "content": [
            "√ó\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nPaper introduces a new <b>dataset</b>?",
            "__Add a new <b>dataset</b> here\n\nSave\n\n  Does Non-COVID19 Lung Lesion Help?",
            "The major challenge lies in the inadequate public COVID-19 <b>datasets</b>.",
            "Based on a\npublicly available COVID-19 CT <b>dataset</b> and three public non-COVID19 <b>datasets</b>,\nwe evaluate"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.005272305140021439,
        "see_also": [
          {
            "doc_id": "cacheid_411fbca60cd0591967022d240c5968f6",
            "source_doc_id": "entity:user/813:en",
            "title": "nikolaos fragkoulis"
          },
          {
            "doc_id": "cacheid_3f38d7d5ce091bb0ba4197e513eea3cf",
            "source_doc_id": "https://www.r-bloggers.com/creating-an-infographic-with-infogram/",
            "title": "Creating an Infographic with infogram | R-bloggers\n\n"
          },
          {
            "doc_id": "cacheid_83d01cf3fcd9dc6ae7a2ff439997446c",
            "source_doc_id": "entity:user/1912:en",
            "title": "pedro favuzzi"
          },
          {
            "doc_id": "cacheid_08111c45d6c7872ea26a710a3f02a940",
            "source_doc_id": "https://towardsdatascience.com/artificial-artist-can-artificial-intelligence-create-art-d7dd6ed98270?source=user_profile---------3-----------------------&gi=e7b0f2ad801b",
            "title": "Artificial Artist: Can Artificial Intelligence create art?\n\n"
          },
          {
            "doc_id": "cacheid_a00df97b8369956bb03b111b51768e07",
            "source_doc_id": "https://towardsdatascience.com/what-is-the-best-programming-language-for-machine-learning-a745c156d6b7",
            "title": "What is the best programming language for Machine Learning?\n\n"
          }
        ],
        "semantic_content": " . *   *   *  COMPUTED TOMOGRAPHY  ( CT )   *  SEMANTIC SEGMENTATION  *  TRANSFER LEARNING Datasets  _  _ Edit  *   *   *   _  _  Add Datasets introduced or used in this paper Results from the Paper  _  _ Edit  *",
        "short_answer": [
          {
            "score": 0.05817422643303871,
            "start": 182,
            "end": 217,
            "answer": "Results from the Paper  _   _  Edit"
          }
        ]
      },
      {
        "_source": {
          "title": "DSConv: Efficient Convolution Operator | Papers With Code\n\n",
          "lemma_title": "Efficient Convolution Operator Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\nActiveVisionLab/NUQ\n\n2\n\n\\-\n\n       Mark the official implementation from paper authors\n\n√ó\n\nActiveVisionLab/NUQ\n\n2\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- Quantization\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * QUANTIZATION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * QUANTIZATION \\- \n\n      Add a method\n\n√ó\n\nAttached methods:\n\n  * BATCH NORMALIZATION\n\n  * BOTTLENECK RESIDUAL BLOCK\n\n  * RESIDUAL CONNECTION\n\n  * RESIDUAL BLOCK\n\n  * AVERAGE POOLING\n\n  * LOCAL RESPONSE NORMALIZATION\n\n  * AUXILIARY CLASSIFIER\n\n  * INCEPTION MODULE\n\n  * CONCATENATED SKIP CONNECTION\n\n  * RESNET\n\n  * GLOBAL AVERAGE POOLING\n\n  * DENSE BLOCK\n\n  * GROUPED CONVOLUTION\n\n  * KAIMING INITIALIZATION\n\n  * 1X1 CONVOLUTION\n\n  * RELU\n\n  * DROPOUT\n\n  * DENSE CONNECTIONS\n\n  * MAX POOLING\n\n  * SOFTMAX\n\n  * ALEXNET\n\n  * GOOGLENET\n\n  * DENSENET\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  * BATCH NORMALIZATION \\- \n\n  * BOTTLENECK RESIDUAL BLOCK \\- \n\n  * RESIDUAL CONNECTION \\- \n\n  * RESIDUAL BLOCK \\- \n\n  * AVERAGE POOLING \\- \n\n  * LOCAL RESPONSE NORMALIZATION \\- \n\n  * AUXILIARY CLASSIFIER \\- \n\n  * INCEPTION MODULE \\- \n\n  * CONCATENATED SKIP CONNECTION \\- \n\n  * RESNET \\- \n\n  * GLOBAL AVERAGE POOLING \\- \n\n  * DENSE BLOCK \\- \n\n  * GROUPED CONVOLUTION \\- \n\n  * KAIMING INITIALIZATION \\- \n\n  * 1X1 CONVOLUTION \\- \n\n  * RELU \\- \n\n  * DROPOUT \\- \n\n  * DENSE CONNECTIONS \\- \n\n  * MAX POOLING \\- \n\n  * SOFTMAX \\- \n\n  * ALEXNET \\- \n\n  * GOOGLENET \\- \n\n  * DENSENET \\- \n\n  * CONVOLUTION \\- \n\n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nImageNet\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  DSConv: Efficient Convolution Operator\n\n7 Jan 2019 ‚Ä¢  Marcelo Gennari ‚Ä¢  Roger Fawcett ‚Ä¢  Victor Adrian Prisacariu\n\nQuantization is a popular way of increasing the speed and lowering the memory\nusage of Convolution Neural Networks (CNNs). When labelled training data is\navailable, network weights and activations have successfully been quantized\ndown to 1-bit... The same cannot be said about the scenario when labelled\ntraining data is not available, e.g. when quantizing a pre-trained model,\nwhere current approaches show, at best, no loss of accuracy at 8-bit\nquantizations. We introduce DSConv, a flexible quantized convolution operator\nthat replaces single-precision operations with their far less expensive\ninteger counterparts, while maintaining the probability distributions over\nboth the kernel weights and the outputs. We test our model as a plug-and-play\nreplacement for standard convolution on most popular neural network\narchitectures, ResNet, DenseNet, GoogLeNet, AlexNet and VGG-Net and\ndemonstrate state-of-the-art results, with less than 1% loss of accuracy,\nwithout retraining, using only 4-bit quantization. We also show how a\ndistillation-based adaptation stage with unlabelled data can improve results\neven further. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nActiveVisionLab/NUQ\n\n2\n\nActiveVisionLab/NUQ\n\n2\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * QUANTIZATION\n\n  Datasets\n\n__Edit\n\n* * *\n\nImageNet\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nBatch Normalization\n\nNormalization  \n  \nBottleneck Residual Block\n\nSkip Connection Blocks  \n  \nResidual Connection\n\nSkip Connections  \n  \nResidual Block\n\nSkip Connection Blocks  \n  \nAverage Pooling\n\nPooling Operations  \n  \nLocal Response Normalization\n\nNormalization  \n  \nAuxiliary Classifier\n\nMiscellaneous Components  \n  \nInception Module\n\nImage Model Blocks  \n  \nConcatenated Skip Connection\n\nSkip Connections  \n  \nResNet\n\nConvolutional Neural Networks  \n  \nGlobal Average Pooling\n\nPooling Operations  \n  \nDense Block\n\nImage Model Blocks  \n  \nGrouped Convolution\n\nConvolutions  \n  \nKaiming Initialization\n\nInitialization  \n  \n1x1 Convolution\n\nConvolutions  \n  \nReLU\n\nActivation Functions  \n  \nDropout\n\nRegularization  \n  \nDense Connections\n\nFeedforward Networks  \n  \nMax Pooling\n\nPooling Operations  \n  \nSoftmax\n\nOutput Functions  \n  \nAlexNet\n\nConvolutional Neural Networks  \n  \nGoogLeNet\n\nConvolutional Neural Networks  \n  \nDenseNet\n\nConvolutional Neural Networks  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper ActiveVisionLab NUQ 2 mark official implementation paper author ActiveVisionLab NUQ 2 official implementation multiple official implementation submit add new evaluation result task quantization list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task √ó attach task quantization add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task quantization add method √ó attach method batch normalization BOTTLENECK residual block residual connection residual block average POOLING local response normalization auxiliary classifier INCEPTION module CONCATENATED SKIP connection RESNET global average POOLING dense block group CONVOLUTION kaiming INITIALIZATION 1x1 convolution RELU dropout dense connection max POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method batch NORMALIZATION BOTTLENECK RESIDUAL BLOCK residual connection residual BLOCK average POOLING local response NORMALIZATION auxiliary CLASSIFIER INCEPTION module CONCATENATED connection RESNET GLOBAL average POOLING dense BLOCK group CONVOLUTION KAIMING INITIALIZATION 1x1 convolution RELU dropout dense CONNECTIONS MAX POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION edit dataset add remove dataset introduce paper add remove other dataset use paper ImageNet paper introduce new dataset _ _ add new dataset save Efficient Convolution Operator 7 Jan 2019 ‚Ä¢ Marcelo Gennari Roger Fawcett Victor Adrian Prisacariu Quantization popular way increase speed lower memory usage Convolution Neural Networks CNNs label training datum available network weight activation quantize 1-bit same can say scenario label training datum available quantize pre-trained model current approach show good loss accuracy 8-bit quantization introduce DSConv flexible quantized convolution operator replace single-precision operation expensive integer counterpart maintain probability distribution kernel weight output test model plug-and-play replacement standard convolution popular neural network architecture ResNet DenseNet GoogLeNet AlexNet VGG-Net demonstrate state-of-the-art result less 1 loss accuracy retrain use 4-bit quantization show distillation-based adaptation stage unlabelled datum can improve result read _ _ PDF Abstract code _ _ edit add remove Mark official ActiveVisionLab NUQ 2 NUQ 2 task _ _ edit add remove quantization dataset _ _ edit imagenet result Paper _ _ edit _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type batch normalization normalization bottleneck Residual Block skip Connection Blocks Residual connection Skip Connections Residual Block skip Connection Blocks Average Pooling Pooling Operations local Response Normalization normalization Auxiliary Classifier Miscellaneous Components Inception Module Image Model Blocks Concatenated Skip connection Skip Connections ResNet Convolutional Neural Networks Global Average Pooling Pooling Operations Dense Block Image Model Blocks Grouped Convolution convolutions kaime initialization initialization 1x1 Convolution Convolutions relu Activation Functions regularization Dense Connections Feedforward Networks Max Pooling Pooling Operations Softmax Output Functions AlexNet Convolutional Neural Networks GoogLeNet Convolutional Neural Networks DenseNet Convolutional Neural Networks convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "√ó  ",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Task",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Metric",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "MAX",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ALEXNET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DENSENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Linear",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "7 Jan 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Marcelo Gennari",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Roger Fawcett",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adrian Prisacariu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "neural network",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GoogLeNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "AlexNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "VGG-Net",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Concatenated Skip Connection",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dense Block  ",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Grouped Convolution  Convolutions",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ReLU  Activation Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Softmax  Output Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "ImageNet   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the scenario",
              "property": "when label",
              "value": "training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "introduce",
              "value": "DSConv",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "test",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "distillation-based adaptation stage",
              "property": "can improve",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "machine learning",
                "internet of things",
                "deep learning",
                "natural language processing",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2668410362675786,
                0.09896954987198114,
                0.27236777544021606,
                0.18081902898848057,
                0.05852732993662357,
                0.06764410436153412,
                0.03876231610774994,
                0.016068918630480766
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.3272450468502939,
                0.28942291997373104,
                0.11984630767256021,
                0.06561031378805637,
                0.08268143143504858,
                0.05096941068768501,
                0.04990431945770979,
                0.014320256188511848
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.24227684643119574,
                0.21340905036777258,
                0.3208516836166382,
                0.10133377835154533,
                0.050128212198615074,
                0.014453338459134102,
                0.03174504917114973,
                0.025802026502788067
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "computer vision",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.27719002589583397,
                0.20975345559418201,
                0.1852069767192006,
                0.07818364351987839,
                0.07954248413443565,
                0.08761176560074091,
                0.06524304114282131,
                0.017268581315875053
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3746554674580693,
                0.22429421450942755,
                0.17696329997852445,
                0.06887668650597334,
                0.08836345840245485,
                0.030804456677287817,
                0.012053466401994228,
                0.023988965433090925
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3492646589875221,
                0.2034083236940205,
                0.18095654621720314,
                0.12506238743662834,
                0.06583806918933988,
                0.04356989311054349,
                0.009340261109173298,
                0.022559878416359425
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.38211968820542097,
                0.20986603572964668,
                0.17163959611207247,
                0.06933960691094398,
                0.04749210411682725,
                0.07330490741878748,
                0.012814713642001152,
                0.033423435874283314
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.37409550230950117,
                0.2331808116286993,
                0.12202797457575798,
                0.10509639605879784,
                0.05339428875595331,
                0.06691540032625198,
                0.017232537269592285,
                0.028057051822543144
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "internet of things",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.6225889539346099,
                0.24320663372054696,
                0.03618574608117342,
                0.04101987648755312,
                0.0235538799315691,
                0.00900522992014885,
                0.013519923435524106,
                0.010919908294454217
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.42791916616261005,
                0.42567391647025943,
                0.05322565673850477,
                0.019092107191681862,
                0.02159051294438541,
                0.017775981919839978,
                0.025564270094037056,
                0.009158421074971557
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3229021495208144,
                0.2566772289574146,
                0.1323608886450529,
                0.11714575625956059,
                0.05838124547153711,
                0.06771595869213343,
                0.014184347353875637,
                0.030632385052740574
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "computer vision",
                "reinforcement learning",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.5145255154930055,
                0.30083095468580723,
                0.07236555078998208,
                0.015173620544373989,
                0.031383235938847065,
                0.035739799961447716,
                0.02041794778779149,
                0.009563329629600048
              ]
            },
            {
              "labels": [
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2792060412466526,
                0.18633230589330196,
                0.23711027670651674,
                0.11716864164918661,
                0.064756004139781,
                0.05385416653007269,
                0.04959428682923317,
                0.011978311464190483
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9915897250175476,
              "spans": [
                {
                  "approx_length": 61,
                  "score": 0.9915897250175476,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.9026514068245888,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 278,
                  "score": 0.9996200799942017,
                  "spanid": 2
                },
                {
                  "approx_length": 202,
                  "score": 0.9979900121688843,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 209,
                  "score": 0.9986771941184998,
                  "spanid": 5
                },
                {
                  "approx_length": 272,
                  "score": 0.9951685070991516,
                  "spanid": 6
                },
                {
                  "approx_length": 283,
                  "score": 0.9968534708023071,
                  "spanid": 7
                },
                {
                  "approx_length": 250,
                  "score": 0.9934793710708618,
                  "spanid": 8
                },
                {
                  "approx_length": 187,
                  "score": 0.9994547367095947,
                  "spanid": 9
                },
                {
                  "approx_length": 208,
                  "score": 0.9956435561180115,
                  "spanid": 10
                },
                {
                  "approx_length": 208,
                  "score": 0.9978163242340088,
                  "spanid": 11
                },
                {
                  "approx_length": 237,
                  "score": 0.9983740448951721,
                  "spanid": 12
                },
                {
                  "approx_length": 217,
                  "score": 0.9916187524795532,
                  "spanid": 13
                },
                {
                  "approx_length": 180,
                  "score": 0.9984793663024902,
                  "spanid": 14
                },
                {
                  "approx_length": 322,
                  "score": 0.9875801205635071,
                  "spanid": 16
                },
                {
                  "approx_length": 313,
                  "score": 0.9925723671913147,
                  "spanid": 18
                },
                {
                  "approx_length": 273,
                  "score": 0.9989168047904968,
                  "spanid": 19
                },
                {
                  "approx_length": 193,
                  "score": 0.9954708218574524,
                  "spanid": 20
                },
                {
                  "approx_length": 293,
                  "score": 0.9972748756408691,
                  "spanid": 21
                },
                {
                  "approx_length": 582,
                  "score": 0.998123824596405,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9841867685317993,
                  "spanid": 23
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.0797823245326678,
              "spans": [
                {
                  "approx_length": 323,
                  "score": 0.924318253993988,
                  "spanid": 15
                },
                {
                  "approx_length": 338,
                  "score": 0.9904575347900391,
                  "spanid": 17
                }
              ]
            }
          ],
          "summary": [
            " DSConv :  Efficient Convolution Operator . Efficient convolution Operator is",
            " Use this article to help students understand RC2020 trends . Use the weekly PwC Newsquiz to test your knowledge of RC2020 developments . Sign in to view the latest trending ML papers with code, research developments",
            " Model name :  Metric name . Metric value :  Uses extra training data . Data evaluated on Submit Add a new evaluation result row .",
            " Markdown description description (optional ;   $ \\LaTeX $  enabled ) enabled . You can edit this . Add a new method name (e . g .  Rectified Linear Unit) New method full",
            " ImageNet Paper introduces a new dataset? Add or remove datasets introduced in this paper . Save DSConv :  Efficient Convolution Operator .",
            " Quantization is a popular way of increasing the speed and memory usage of Convolution Neural Networks . DSConv is a flexible quantized convolution operator that replaces single precision operations with their far less expensive integer counterparts .",
            " Submit results from this paper to get GitHub badges and help the community compare results to other papers . Submit results to get state - of - the - art GitHub badges . Methods used in the Paper are a free resource with",
            " Terms of privacy privacy of users' use of cookies in the U.S. use of these cookies . Privacy is a free form of form of moderation and moderation . Use of cookies to help people around the world understand"
          ],
          "text_suggester": [
            {
              "input": "1x1",
              "weight": 28
            },
            {
              "input": "1x1 convolution convolutions",
              "weight": 1
            },
            {
              "input": "7 jan 2019",
              "weight": 9
            },
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a flexible quantized convolution operator",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 21
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 21
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a popular way",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 40
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "activations",
              "weight": 1
            },
            {
              "input": "activevisionlab",
              "weight": 1
            },
            {
              "input": "add a new category",
              "weight": 38
            },
            {
              "input": "add remove mark official",
              "weight": 60
            },
            {
              "input": "adrian prisacariu",
              "weight": 9
            },
            {
              "input": "alexnet",
              "weight": 1
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "auxiliary classifier",
              "weight": 1
            },
            {
              "input": "average",
              "weight": 3
            },
            {
              "input": "average pooling",
              "weight": 1
            },
            {
              "input": "batch",
              "weight": 8
            },
            {
              "input": "batch normalization",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "block",
              "weight": 11
            },
            {
              "input": "blocks",
              "weight": 5
            },
            {
              "input": "blocks concatenated skip connection",
              "weight": 1
            },
            {
              "input": "both the kernel weights",
              "weight": 1
            },
            {
              "input": "bottleneck residual block",
              "weight": 1
            },
            {
              "input": "cnns",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 19
            },
            {
              "input": "concatenated skip connection",
              "weight": 9
            },
            {
              "input": "connection",
              "weight": 7
            },
            {
              "input": "connection blocks residual connection",
              "weight": 1
            },
            {
              "input": "connections",
              "weight": 17
            },
            {
              "input": "convolution",
              "weight": 14
            },
            {
              "input": "convolution convolutions",
              "weight": 1
            },
            {
              "input": "convolution neural networks",
              "weight": 1
            },
            {
              "input": "convolutional neural networks",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 11
            },
            {
              "input": "create a new account",
              "weight": 49
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 38
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 12
            },
            {
              "input": "dense",
              "weight": 3
            },
            {
              "input": "dense block",
              "weight": 1
            },
            {
              "input": "densenet",
              "weight": 1
            },
            {
              "input": "dsconv",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 96
            },
            {
              "input": "efficient convolution operator",
              "weight": 1
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feedforward networks",
              "weight": 1
            },
            {
              "input": "first",
              "weight": 9
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "functions",
              "weight": 14
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "global average pooling",
              "weight": 1
            },
            {
              "input": "global average pooling pooling operations",
              "weight": 1
            },
            {
              "input": "googlenet",
              "weight": 1
            },
            {
              "input": "image model",
              "weight": 1
            },
            {
              "input": "imagenet paper",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 15
            },
            {
              "input": "inception module",
              "weight": 1
            },
            {
              "input": "introduce",
              "weight": 12
            },
            {
              "input": "kaiming initialization",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "local",
              "weight": 5
            },
            {
              "input": "local response normalization",
              "weight": 1
            },
            {
              "input": "marcelo gennari",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "max pooling",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 38
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 19
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "miscellaneous components",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 18
            },
            {
              "input": "most popular neural network architectures",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 13
            },
            {
              "input": "network weights",
              "weight": 1
            },
            {
              "input": "new",
              "weight": 13
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 86
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "normalization",
              "weight": 38
            },
            {
              "input": "nuq",
              "weight": 1
            },
            {
              "input": "official",
              "weight": 16
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "operations",
              "weight": 15
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "our model",
              "weight": 1
            },
            {
              "input": "output functions",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 19
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "pooling",
              "weight": 15
            },
            {
              "input": "pooling operations",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "quantization",
              "weight": 19
            },
            {
              "input": "regularization dense connections",
              "weight": 1
            },
            {
              "input": "relu activation functions",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 13
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "residual",
              "weight": 12
            },
            {
              "input": "residual block",
              "weight": 1
            },
            {
              "input": "resnet",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 38
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "roger fawcett",
              "weight": 1
            },
            {
              "input": "skip",
              "weight": 13
            },
            {
              "input": "skip connections",
              "weight": 1
            },
            {
              "input": "softmax",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 21
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "standard convolution",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 8
            },
            {
              "input": "task",
              "weight": 38
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 21
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 40
            },
            {
              "input": "the memory usage",
              "weight": 1
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the outputs",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the probability distributions",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the scenario",
              "weight": 1
            },
            {
              "input": "the speed",
              "weight": 1
            },
            {
              "input": "their far less expensive integer counterparts",
              "weight": 1
            },
            {
              "input": "this paper",
              "weight": 78
            },
            {
              "input": "training",
              "weight": 12
            },
            {
              "input": "training data",
              "weight": 1
            },
            {
              "input": "unlabelled data",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 10
            },
            {
              "input": "victor adrian prisacariu",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/dsconv-efficient-convolution-operator",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.009826552345225142,
        "_index": "cache_index",
        "_id": "cacheid_4128942e9a125090338a9682c4411fe6",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "√ó\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nImageNet\n\nPaper introduces a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0047396445278161566,
        "see_also": [
          {
            "doc_id": "cacheid_36627a7d81adaa5c7eb016d5374618ea",
            "source_doc_id": "entity:user/884:en",
            "title": "Œ¥Œ∑ŒºŒÆœÑœÅŒ∑œÉ Œ∫Œ±Œ∫ŒªŒ∑œÉ"
          },
          {
            "doc_id": "cacheid_45c2604a4de77ac4ec9e06c7dc2a8f42",
            "source_doc_id": "entity:user/783:en",
            "title": "david balogh"
          },
          {
            "doc_id": "cacheid_871774c931c0ff9f110d59e35dfc0247",
            "source_doc_id": "entity:user/1546:en",
            "title": "benoit stackler"
          },
          {
            "doc_id": "cacheid_7f0db4549ee12a44d2446ba9b18b0582",
            "source_doc_id": "http://shadowmountaingallery.com/storeimages/book/download-digital-communications.-fundamentals-and-applications.htm",
            "title": "Download Digital Communications. Fundamentals And Applications\n\n"
          },
          {
            "doc_id": "cacheid_06779253062a7ece801cac21bf889bc5",
            "source_doc_id": "entity:user/1891:en",
            "title": "olivier dehoux"
          }
        ],
        "semantic_content": " . RELU \\ -   *  DROPOUT \\ -   *  DENSE CONNECTIONS \\ -   *  MAX POOLING \\ -   *  SOFTMAX \\ -   *  ALEXNET \\ -   *  GOOGLENET \\ -   *  DENSENET \\ -   *  CONVOLUTION \\ -  Edit Datasets . Pooling Pooling Operations Softmax Output Functions AlexNet Convolutional Neural Networks GoogLeNet Convolutional Neural Networks DenseNet Convolutional Neural Networks Convolution Convolutions Contact us on :  hello @ paperswithcode . com .  Papers With Code is a free resource with all data licensed under CC - BY - SA .  Terms Privacy Cookies policy",
        "short_answer": [
          {
            "score": 0.09457208216190338,
            "start": 179,
            "end": 192,
            "answer": "Edit Datasets"
          }
        ]
      },
      {
        "_source": {
          "title": "Point Convolutional Neural Networks by Extension Operators | Papers With Code\n\n",
          "lemma_title": "point Convolutional Neural Networks Extension Operators Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n√ó\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n√ó\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n√ó\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n√ó\n\nmatanatz/pcnn\n\n51\n\n\\-\n\n       Mark the official implementation from paper authors\n\n√ó\n\nmatanatz/pcnn\n\n51\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTask:*\n\n\\--------- 3D Part Segmentation 3D Point Cloud Classification Classify 3D\nPoint Clouds\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n√ó\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n3D Point Cloud Classification  ModelNet40  PCNN  Overall Accuracy  92.3    11\n\\-  \n3D Part Segmentation  ShapeNet-Part  PCNN  Instance Average IoU  85.1    15\n\\-  \n  \n      Add a task\n\n√ó\n\nAttached tasks:\n\n  * 3D PART SEGMENTATION\n\n  * 3D POINT CLOUD CLASSIFICATION\n\n  * CLASSIFY 3D POINT CLOUDS\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n√ó\n\n  * 3D PART SEGMENTATION \\- \n\n  * 3D POINT CLOUD CLASSIFICATION \\- \n\n  * CLASSIFY 3D POINT CLOUDS \\- \n\n      Add a method\n\n√ó\n\nAttached methods:\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n√ó\n\n  * CONVOLUTION \\- \n\n  ü¶° Badges\n\n* * *\n\nInclude the markdown at the top of your GitHub `README.md` file to showcase\nthe performance of the model.\n\nBadges are live and will be dynamically updated with the latest ranking of\nthis paper.\n\nBadge  Markdown  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/point-\nconvolutional-neural-networks-by/3d-point-cloud-classification-on-\nmodelnet40)](https://paperswithcode.com/sota/3d-point-cloud-classification-on-\nmodelnet40?p=point-convolutional-neural-networks-by)`  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/point-\nconvolutional-neural-networks-by/3d-part-segmentation-on-shapenet-\npart)](https://paperswithcode.com/sota/3d-part-segmentation-on-shapenet-\npart?p=point-convolutional-neural-networks-by)`  \n  \n      Edit Datasets\n\n√ó\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nModelNet\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  Point Convolutional Neural Networks by Extension Operators\n\n27 Mar 2018 ‚Ä¢  Matan Atzmon ‚Ä¢  Haggai Maron ‚Ä¢  Yaron Lipman\n\nThis paper presents Point Convolutional Neural Networks (PCNN): a novel\nframework for applying convolutional neural networks to point clouds. The\nframework consists of two operators: extension and restriction, mapping point\ncloud functions to volumetric functions and vise-versa... A point cloud\nconvolution is defined by pull-back of the Euclidean volumetric convolution\nvia an extension-restriction mechanism. The point cloud convolution is\ncomputationally efficient, invariant to the order of points in the point\ncloud, robust to different samplings and varying densities, and translation\ninvariant, that is the same convolution kernel is used at all points. PCNN\ngeneralizes image CNNs and allows readily adapting their architectures to the\npoint cloud setting. Evaluation of PCNN on three central point cloud learning\nbenchmarks convincingly outperform competing point cloud learning methods, and\nthe vast majority of methods working with more informative shape\nrepresentations such as surfaces and/or normals. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nmatanatz/pcnn\n\n51\n\nmatanatz/pcnn\n\n51\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * 3D PART SEGMENTATION\n\n  * 3D POINT CLOUD CLASSIFICATION\n\n  * CLASSIFY 3D POINT CLOUDS\n\n  Datasets\n\n__Edit\n\n* * *\n\nModelNet\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\nRanked  11 on  3D Point Cloud Classification on ModelNet40\n\n     __Get a GitHub badge\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK RESULT BENCHMARK  \n3D Point Cloud Classification  ModelNet40  PCNN  Overall Accuracy  92.3    11\n\nCompare  \n  \n  Results from Other Papers\n\n* * *\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK SOURCE PAPER COMPARE  \n3D Part Segmentation  ShapeNet-Part  PCNN  Instance Average IoU  85.1    15\n\nSee all  \n  \n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper matanatz pcnn 51 mark official implementation paper author matanatz pcnn 51 official implementation multiple official implementation submit add new evaluation result task 3D Part Segmentation 3D Point Cloud Classification classify 3D Point Clouds list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove 3D Point Cloud Classification PCNN Overall Accuracy 92.3 11 3D Part Segmentation ShapeNet-Part PCNN Instance average iou 85.1 15 add task √ó attach task 3d part segmentation 3D POINT cloud CLASSIFICATION classify 3D POINT CLOUDS add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task 3D PART segmentation 3D POINT CLOUD CLASSIFICATION classify 3D POINT CLOUDS add method √ó attach method CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method CONVOLUTION ü¶° badge include markdown top GitHub README.md file showcase performance model badge live will update late ranking paper Badge Markdown pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge point- convolutional-neural-networks-by/3d-point-cloud-classification-on- modelnet40 https://paperswithcode.com modelnet40?p point-convolutional-neural-networks-by pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge point- convolutional-neural-networks-by/3d-part-segmentation-on-shapenet- part https://paperswithcode.com sota/3d-part-segmentation-on-shapenet- point-convolutional-neural-networks-by Edit Datasets add remove dataset introduce paper add remove other dataset use paper ModelNet paper introduce new dataset _ _ add new dataset save point Convolutional Neural Networks Extension Operators 27 Mar 2018 ‚Ä¢ Matan Atzmon Haggai Maron ‚Ä¢ Yaron Lipman paper present point Convolutional Neural Networks PCNN novel framework apply convolutional neural networks point cloud framework consist two operator extension restriction mapping point cloud function volumetric function vise-versa point cloud convolution define pull-back euclidean volumetric convolution extension-restriction mechanism The point cloud convolution efficient invariant order point the point cloud robust different sampling vary density translation invariant same convolution kernel use point PCNN generalize image cnn allow adapt architecture the point cloud setting evaluation PCNN three central point cloud learn benchmark outperform compete point cloud learning method vast majority method work informative shape representation such surface normal read _ _ PDF Abstract code _ _ edit add remove Mark official matanatz pcnn 51 matanatz pcnn 51 task _ _ edit add remove 3d part segmentation 3D POINT cloud CLASSIFICATION classify 3d point CLOUDS dataset _ _ edit ModelNet result Paper _ _ edit rank 11 3D Point Cloud Classification _ _ GitHub badge task DATASET model metric name metric value global RANK RESULT benchmark 3D Point Cloud Classification PCNN Overall Accuracy 92.3 11 compare result other Papers task DATASET model metric name metric value global rank source paper compare 3D Part Segmentation ShapeNet-Part PCNN Instance average iou 85.1 15 see method use Paper _ _ edit add remove method type convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "√ó  matanatz",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "51",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Linear",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "README.md",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Badges",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Extension Operators",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yaron Lipman",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "convolutional neural networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Euclidean",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "PCNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "3D Point Cloud Classification",
              "property": "classify",
              "value": "3D Point Clouds",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "3D POINT cloud CLASSIFICATION",
              "property": "classify",
              "value": "3D POINT CLOUDS",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "ModelNet   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "present",
              "value": "point Convolutional Neural Networks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "framework",
              "property": "consist of",
              "value": "two operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "point cloud convolution",
              "property": "define by",
              "value": "pull-back",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "same convolution kernel",
              "property": "use at",
              "value": "all point",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "PCNN",
              "property": "generalize",
              "value": "image cnn",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "three central point cloud",
              "property": "learn",
              "value": "benchmark",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "outperform",
              "property": "compete",
              "value": "point cloud learning method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "majority of method",
              "property": "work with",
              "value": "informative shape representation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "3D POINT cloud CLASSIFICATION",
              "property": "classify",
              "value": "3d point CLOUDS",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "         method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "machine learning",
                "neuromorphic computing",
                "computer vision",
                "reinforcement learning",
                "natural language processing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.6225967512000352,
                0.3083595330826938,
                0.01790369302034378,
                0.011673457571305335,
                0.015432929387316108,
                0.014212677371688187,
                0.006891165510751307,
                0.0029297986766323447
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.24010554980486631,
                0.27390566375106573,
                0.2305420683696866,
                0.09486467577517033,
                0.06184030510485172,
                0.05004791356623173,
                0.038472047075629234,
                0.010221639648079872
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "computer vision",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.4044345151633024,
                0.18926105462014675,
                0.17179361265152693,
                0.06725202966481447,
                0.04897217359393835,
                0.07648742850869894,
                0.014343971386551857,
                0.027455215342342854
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2667951066978276,
                0.2724341172724962,
                0.2411617785692215,
                0.07242484390735626,
                0.06562168430536985,
                0.040734206326305866,
                0.029050404205918312,
                0.011777849867939949
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.38772103283554316,
                0.24193866550922394,
                0.15824870858341455,
                0.08596241287887096,
                0.04635637905448675,
                0.03575054323300719,
                0.012430398724973202,
                0.0315919341519475
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.26620902121067047,
                0.2501521045342088,
                0.13021866790950298,
                0.13973966613411903,
                0.07523183431476355,
                0.06982807349413633,
                0.021266981959342957,
                0.047353590838611126
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning"
              ],
              "scores": [
                0.6044091363437474,
                0.18402305850759149,
                0.10881571914069355,
                0.0276105348020792,
                0.029700268991291523,
                0.015366748906672001,
                0.009444323368370533,
                0.02063025929965079
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.1824192050844431,
                0.29614767618477345,
                0.20182868093252182,
                0.08948744460940361,
                0.07208983972668648,
                0.08119994774460793,
                0.026896510273218155,
                0.0499306982383132
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "reinforcement learning",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4778501996770501,
                0.3623816198669374,
                0.05993900028988719,
                0.032574403565377,
                0.01409060601145029,
                0.02867562510073185,
                0.011438133427873254,
                0.013050325447693467
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.33878814382478595,
                0.35364999435842037,
                0.09367240453138947,
                0.08000870794057846,
                0.0566091425716877,
                0.04148678667843342,
                0.01333525963127613,
                0.022449455223977566
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.43213900178670883,
                0.18016764242202044,
                0.18539420701563358,
                0.08719988819211721,
                0.03850828856229782,
                0.01552028302103281,
                0.03415638208389282,
                0.026914308313280344
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "reinforcement learning",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.4273812649771571,
                0.3569580018520355,
                0.06572599336504936,
                0.05344052752479911,
                0.049596124328672886,
                0.010553284548223019,
                0.020649808924645185,
                0.01569498609751463
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9908725619316101,
              "spans": [
                {
                  "approx_length": 79,
                  "score": 0.9908725619316101,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8555595998962721,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 268,
                  "score": 0.999627411365509,
                  "spanid": 2
                },
                {
                  "approx_length": 265,
                  "score": 0.9955912828445435,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 298,
                  "score": 0.9904479384422302,
                  "spanid": 5
                },
                {
                  "approx_length": 165,
                  "score": 0.999109148979187,
                  "spanid": 6
                },
                {
                  "approx_length": 289,
                  "score": 0.9988918304443359,
                  "spanid": 7
                },
                {
                  "approx_length": 200,
                  "score": 0.9990842938423157,
                  "spanid": 8
                },
                {
                  "approx_length": 194,
                  "score": 0.9873918890953064,
                  "spanid": 9
                },
                {
                  "approx_length": 207,
                  "score": 0.9968888163566589,
                  "spanid": 10
                },
                {
                  "approx_length": 238,
                  "score": 0.9982959628105164,
                  "spanid": 11
                },
                {
                  "approx_length": 284,
                  "score": 0.9402750730514526,
                  "spanid": 12
                },
                {
                  "approx_length": 260,
                  "score": 0.9971776008605957,
                  "spanid": 13
                },
                {
                  "approx_length": 215,
                  "score": 0.9971947073936462,
                  "spanid": 14
                },
                {
                  "approx_length": 260,
                  "score": 0.9968582987785339,
                  "spanid": 15
                },
                {
                  "approx_length": 346,
                  "score": 0.9832168817520142,
                  "spanid": 17
                },
                {
                  "approx_length": 209,
                  "score": 0.9951890707015991,
                  "spanid": 20
                },
                {
                  "approx_length": 310,
                  "score": 0.9898162484169006,
                  "spanid": 21
                },
                {
                  "approx_length": 277,
                  "score": 0.9910359382629395,
                  "spanid": 22
                },
                {
                  "approx_length": 141,
                  "score": 0.9310052394866943,
                  "spanid": 23
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.1145616148908933,
              "spans": [
                {
                  "approx_length": 336,
                  "score": 0.8202342987060547,
                  "spanid": 16
                },
                {
                  "approx_length": 356,
                  "score": 0.9958239793777466,
                  "spanid": 18
                },
                {
                  "approx_length": 316,
                  "score": 0.9334204792976379,
                  "spanid": 19
                }
              ]
            }
          ],
          "summary": [
            " Point Convolutional Neural Networks by Extension Operators by extension Operators . Point Conv",
            " Use this article to help students understand RC2020 trends . Use the weekly PwC Newsquiz to check out the latest trending ML papers . Sign in to sign in to the community . Add a new code entry",
            " Add a new evaluation result row to TASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE 3D Point Cloud Classification ModelNet40 PCNN Overall Accuracy",
            " Description :  Submit Remove a task . Create a new method . New method name  (e . g .  ReLU ) New method full name ( e . g  Rectified Linear Unit)  New method",
            " Badges are live and will be dynamically updated with the latest ranking of this paper . Include the markdown at the top of your GitHub GitHub .",
            " Point Convolutional Neural Networks (PCNN) is a novel framework for applying convolutional neural networks to point clouds . PCNN generalizes image CNNs and allows readily adapting their architectures to the point cloud setting",
            " Paper ranked 11 on 3D Point Cloud Classification on ModelNet40 . 3D Part Segmentation ShapeNet - Part PCNN Instance Average IoU 85 . 1 15 See all Methods used in the Paper ."
          ],
          "text_suggester": [
            {
              "input": "point convolutional neural networks",
              "weight": 0
            },
            {
              "input": "27 mar",
              "weight": 0
            },
            {
              "input": "27 mar 2018",
              "weight": 2
            },
            {
              "input": "3d part segmentation",
              "weight": 6
            },
            {
              "input": "3d point cloud classification",
              "weight": 0
            },
            {
              "input": "3d point clouds",
              "weight": 0
            },
            {
              "input": "a change",
              "weight": 0
            },
            {
              "input": "a code repository",
              "weight": 0
            },
            {
              "input": "a free resource",
              "weight": 0
            },
            {
              "input": "a github badge",
              "weight": 0
            },
            {
              "input": "a method",
              "weight": 6
            },
            {
              "input": "a new account",
              "weight": 0
            },
            {
              "input": "a new category",
              "weight": 0
            },
            {
              "input": "a new code entry",
              "weight": 0
            },
            {
              "input": "a new dataset",
              "weight": 6
            },
            {
              "input": "a new method",
              "weight": 0
            },
            {
              "input": "a new task",
              "weight": 0
            },
            {
              "input": "a novel framework",
              "weight": 0
            },
            {
              "input": "a point cloud convolution",
              "weight": 0
            },
            {
              "input": "a task",
              "weight": 11
            },
            {
              "input": "abstract code",
              "weight": 0
            },
            {
              "input": "add a new category",
              "weight": 11
            },
            {
              "input": "add remove mark official",
              "weight": 17
            },
            {
              "input": "all methods",
              "weight": 0
            },
            {
              "input": "all data",
              "weight": 0
            },
            {
              "input": "all points",
              "weight": 0
            },
            {
              "input": "attached methods",
              "weight": 0
            },
            {
              "input": "attached tasks",
              "weight": 0
            },
            {
              "input": "badge",
              "weight": 5
            },
            {
              "input": "badge markdown",
              "weight": 0
            },
            {
              "input": "badges",
              "weight": 0
            },
            {
              "input": "benchmarks",
              "weight": 0
            },
            {
              "input": "bitbucket url",
              "weight": 0
            },
            {
              "input": "classification",
              "weight": 2
            },
            {
              "input": "classify",
              "weight": 3
            },
            {
              "input": "cloud",
              "weight": 3
            },
            {
              "input": "clouds",
              "weight": 0
            },
            {
              "input": "code",
              "weight": 5
            },
            {
              "input": "competing point cloud learning methods",
              "weight": 0
            },
            {
              "input": "convincingly outperform",
              "weight": 0
            },
            {
              "input": "convolution",
              "weight": 5
            },
            {
              "input": "create",
              "weight": 3
            },
            {
              "input": "create a new account",
              "weight": 14
            },
            {
              "input": "data",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 7
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 5
            },
            {
              "input": "different samplings",
              "weight": 0
            },
            {
              "input": "edit",
              "weight": 28
            },
            {
              "input": "edit datasets",
              "weight": 0
            },
            {
              "input": "evaluation",
              "weight": 5
            },
            {
              "input": "extension operators",
              "weight": 0
            },
            {
              "input": "extra training data",
              "weight": 0
            },
            {
              "input": "first",
              "weight": 2
            },
            {
              "input": "full name",
              "weight": 0
            },
            {
              "input": "github",
              "weight": 0
            },
            {
              "input": "gitlab",
              "weight": 0
            },
            {
              "input": "global",
              "weight": 8
            },
            {
              "input": "global rank result benchmark 3d point cloud classification",
              "weight": 0
            },
            {
              "input": "global rank source paper",
              "weight": 0
            },
            {
              "input": "haggai",
              "weight": 0
            },
            {
              "input": "image cnns",
              "weight": 0
            },
            {
              "input": "implementation",
              "weight": 4
            },
            {
              "input": "informative shape representation such",
              "weight": 27
            },
            {
              "input": "instance average iou",
              "weight": 0
            },
            {
              "input": "introduce",
              "weight": 4
            },
            {
              "input": "late trending ml paper",
              "weight": 28
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "list",
              "weight": 0
            },
            {
              "input": "mapping point cloud functions",
              "weight": 0
            },
            {
              "input": "markdown description",
              "weight": 0
            },
            {
              "input": "maron",
              "weight": 0
            },
            {
              "input": "matan atzmon",
              "weight": 0
            },
            {
              "input": "matanatz",
              "weight": 10
            },
            {
              "input": "method",
              "weight": 11
            },
            {
              "input": "methods",
              "weight": 0
            },
            {
              "input": "methods rc2020 trends",
              "weight": 0
            },
            {
              "input": "metric",
              "weight": 4
            },
            {
              "input": "metric name",
              "weight": 0
            },
            {
              "input": "metric name metric value",
              "weight": 0
            },
            {
              "input": "metric value",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 5
            },
            {
              "input": "modelnet paper",
              "weight": 0
            },
            {
              "input": "more informative shape representations",
              "weight": 0
            },
            {
              "input": "name",
              "weight": 4
            },
            {
              "input": "name metric value",
              "weight": 0
            },
            {
              "input": "new",
              "weight": 3
            },
            {
              "input": "new method",
              "weight": 0
            },
            {
              "input": "new method full name",
              "weight": 25
            },
            {
              "input": "new method name",
              "weight": 0
            },
            {
              "input": "new task name",
              "weight": 0
            },
            {
              "input": "no match",
              "weight": 0
            },
            {
              "input": "no official implementation",
              "weight": 0
            },
            {
              "input": "normals",
              "weight": 0
            },
            {
              "input": "official",
              "weight": 4
            },
            {
              "input": "official code",
              "weight": 0
            },
            {
              "input": "other datasets",
              "weight": 0
            },
            {
              "input": "other papers",
              "weight": 0
            },
            {
              "input": "overall accuracy",
              "weight": 0
            },
            {
              "input": "paper",
              "weight": 5
            },
            {
              "input": "paper authors",
              "weight": 0
            },
            {
              "input": "paper present point convolutional neural networks",
              "weight": 21
            },
            {
              "input": "paper with code",
              "weight": 2
            },
            {
              "input": "papers",
              "weight": 0
            },
            {
              "input": "parent task",
              "weight": 0
            },
            {
              "input": "part",
              "weight": 2
            },
            {
              "input": "pcnn",
              "weight": 73
            },
            {
              "input": "pcnn overall accuracy",
              "weight": 100
            },
            {
              "input": "pdf",
              "weight": 0
            },
            {
              "input": "playing games reasoning robots",
              "weight": 0
            },
            {
              "input": "point",
              "weight": 4
            },
            {
              "input": "points",
              "weight": 0
            },
            {
              "input": "portals",
              "weight": 0
            },
            {
              "input": "previous issues",
              "weight": 0
            },
            {
              "input": "remove",
              "weight": 3
            },
            {
              "input": "remove mark official",
              "weight": 0
            },
            {
              "input": "research developments",
              "weight": 0
            },
            {
              "input": "result",
              "weight": 4
            },
            {
              "input": "results",
              "weight": 0
            },
            {
              "input": "segmentation",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 6
            },
            {
              "input": "speech time series",
              "weight": 0
            },
            {
              "input": "submit",
              "weight": 2
            },
            {
              "input": "surfaces",
              "weight": 0
            },
            {
              "input": "task",
              "weight": 5
            },
            {
              "input": "task dataset model",
              "weight": 0
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 0
            },
            {
              "input": "the community",
              "weight": 0
            },
            {
              "input": "the euclidean volumetric convolution",
              "weight": 0
            },
            {
              "input": "the framework",
              "weight": 0
            },
            {
              "input": "the latest ranking",
              "weight": 0
            },
            {
              "input": "the latest trending ml papers",
              "weight": 0
            },
            {
              "input": "the list",
              "weight": 11
            },
            {
              "input": "the markdown",
              "weight": 0
            },
            {
              "input": "the metric",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the official implementation",
              "weight": 0
            },
            {
              "input": "the order",
              "weight": 0
            },
            {
              "input": "the paper",
              "weight": 0
            },
            {
              "input": "the performance",
              "weight": 0
            },
            {
              "input": "the point cloud",
              "weight": 0
            },
            {
              "input": "the point cloud convolution",
              "weight": 0
            },
            {
              "input": "the point cloud setting",
              "weight": 0
            },
            {
              "input": "the pwc newsletter",
              "weight": 0
            },
            {
              "input": "the same convolution kernel",
              "weight": 0
            },
            {
              "input": "the top",
              "weight": 0
            },
            {
              "input": "the vast majority",
              "weight": 0
            },
            {
              "input": "their architectures",
              "weight": 0
            },
            {
              "input": "this paper",
              "weight": 28
            },
            {
              "input": "three",
              "weight": 2
            },
            {
              "input": "three central point cloud",
              "weight": 0
            },
            {
              "input": "two",
              "weight": 2
            },
            {
              "input": "two operators",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 4
            },
            {
              "input": "value",
              "weight": 5
            },
            {
              "input": "varying densities",
              "weight": 0
            },
            {
              "input": "volumetric functions",
              "weight": 0
            },
            {
              "input": "yaron lipman",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "√ó matanatz",
              "weight": 8
            },
            {
              "input": "ü¶° badges",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/point-convolutional-neural-networks-by",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.011914896904537176,
        "_index": "cache_index",
        "_id": "cacheid_8e226c30b452d30b70c023ad15020cc9",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "p=point-convolutional-neural-networks-by)`  \n  \n      Edit <b>Datasets</b>\n\n√ó\n\nAdd or remove <b>datasets</b>  introduced",
            "<b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.002412909549184739,
        "see_also": [
          {
            "doc_id": "cacheid_1a2c33146c83048063c78d324ffe7d06",
            "source_doc_id": "entity:user/2021:en",
            "title": "ioannis katramados"
          },
          {
            "doc_id": "cacheid_af1b90132b52d4b1c2106900988a1868",
            "source_doc_id": "https://www.datasciencecentral.com/profiles/blogs/what-clustering-method-is-required-for-text-documents",
            "title": "What clustering method is required for text documents - Data Science Central\n\n"
          },
          {
            "doc_id": "cacheid_fd9f0416276d13bcdb3a40ed84b0dc37",
            "source_doc_id": "entity:user/1830:en",
            "title": "stephane gerart"
          },
          {
            "doc_id": "cacheid_5cff673a1f190c9a7a70a5cc07e6992f",
            "source_doc_id": "entity:user/1211:en",
            "title": "jo bultreys"
          },
          {
            "doc_id": "cacheid_32295263c56d8c6a0158a19114d87953",
            "source_doc_id": "entity:user/1431:en",
            "title": "petra kralj novak"
          }
        ],
        "semantic_content": " . convolutional - neural - networks - by / 3d - point - cloud - classification - on -  modelnet40 )  ]  ( https :  /  / paperswithcode . com / sota / 3d - point - cloud - classification - on -  modelnet40 ? p = point - convolutional - neural - networks - by )  ` . *  matanatz / pcnn 51 matanatz / pcnn 51 Tasks  _  _ Edit Add Remove  *   *   *   *  3D PART SEGMENTATION  *  3D POINT CLOUD CLASSIFICATION  *  CLASSIFY 3D POINT CLOUDS Datasets  _  _ Edit  *   *   *  ModelNet",
        "short_answer": [
          {
            "score": 0.008465363644063473,
            "start": 256,
            "end": 261,
            "answer": "point"
          }
        ]
      }
    ],
    "total_docs": 12389,
    "by_source_information": [
      {
        "cache_index": {
          "search_status": 200,
          "total_docs": 214,
          "error": "",
          "warning": "",
          "log": "",
          "max_score_unnormalized": 42.844223
        }
      },
      {
        "ai4eu_qwant_ai": {
          "search_status": 200,
          "total_docs": 12175,
          "error": " | ",
          "warning": " | ",
          "log": " | ",
          "max_score_unnormalized": 0
        }
      }
    ],
    "query": "{\"from\": 0, \"size\": 35, \"query\": {\"bool\": {\"should\": [{\"match\": {\"title\": {\"query\": \"datasets\", \"boost\": 2}}}, {\"match\": {\"content\": \"datasets\"}}]}}, \"highlight\": {\"pre_tags\": [\"<b>\"], \"post_tags\": [\"</b>\"], \"fields\": {\"title\": {\"number_of_fragments\": 1}, \"content\": {\"number_of_fragments\": 5}}}}",
    "req_time": 3.0601744651794434
  },
  "config": "demos/ai4eu/configs/search-engine-config.json",
  "service": "search",
  "version": "1.0.0",
  "date": "2021/01"
}
