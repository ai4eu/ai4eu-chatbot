{
  "response": {
    "search_status": 200,
    "items": [
      {
        "_source": {
          "title": "Bijlage 3 - Complete dataset - Google Sheets\n\n",
          "content": "Bijlage 3 - Complete dataset - Google Sheets Impossible d'ouvrir ce fichier\ncar ...\n\n",
          "source_doc_id": "https://docs.google.com/spreadsheets/d/1QJLKOlYML6fc-4TaN0eO3R4WPujziKL-WUdgqp8htlI/edit?usp=sharing",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.9333333333333333,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://docs.google.com/spreadsheets/d/1QJLKOlYML6fc-4TaN0eO3R4WPujziKL-WUdgqp8htlI/edit?usp=sharing",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Bijlage 3 - Complete dataset - Google Sheets Impossible d'ouvrir ce fichier car ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.18043792247772217,
            "start": 35,
            "end": 48,
            "answer": "Google Sheets"
          }
        ]
      },
      {
        "_source": {
          "title": "_EIU-Democracy Indices - Dataset - v3 - Google Sheets\n\n",
          "content": "... Indices - Dataset - v3 - Google Sheets...) Percentage points Dataset\ndescription: The Democracy...\n\n",
          "source_doc_id": "https://docs.google.com/spreadsheets/d/1d0noZrwAWxNBTDSfDgG06_aLGWUz4R6fgDhRaUZbDzE/edit",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.92,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://docs.google.com/spreadsheets/d/1d0noZrwAWxNBTDSfDgG06_aLGWUz4R6fgDhRaUZbDzE/edit",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Indices - Dataset - v3 - Google Sheets...) Percentage points Dataset description: The Democracy..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.04419798403978348,
            "start": 130,
            "end": 184,
            "answer": "Percentage points Dataset description :  The Democracy"
          }
        ]
      },
      {
        "_source": {
          "title": "Dataset Search\n\n",
          "content": "Dataset Search d Subventions www.data.gouv.fr opendata.paris...toulouse-\nmetropole.fr data.laregion.fr +2more Subventions subventions-3 Dataset\nprovided by Métropole de Lyon License ...\n\n",
          "source_doc_id": "https://toolbox.google.com/datasetsearch/search?docid=AsRkwREq4KSn5PbXAAAAAA%3D%3D&query=subventions",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.9066666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://toolbox.google.com/datasetsearch/search?docid=AsRkwREq4KSn5PbXAAAAAA%3D%3D&query=subventions",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Dataset Search d Subventions www.data.gouv.fr opendata.paris...toulouse-metropole.fr data.laregion.fr +2more Subventions subventions-3 Dataset provided by Métropole de Lyon License ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.03547768294811249,
            "start": 197,
            "end": 222,
            "answer": "Métropole de Lyon License"
          }
        ]
      },
      {
        "_source": {
          "title": "CTI: deleting dataset cause an error · Issue  1635 · jeremyevans/sequel ·\nGitHub\n\n",
          "content": "CTI: deleting dataset cause an error · Issue  1635 · jeremyevans...alternative\nto bulk delete filtered CTI dataset instead of ugly each(&:delete) This...\n\n",
          "source_doc_id": "https://github.com/jeremyevans/sequel/issues/1635",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8933333333333333,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://github.com/jeremyevans/sequel/issues/1635",
        "_type": "_doc",
        "highlight": {
          "body": [
            "CTI: deleting dataset cause an error · Issue #1635 · jeremyevans...alternative to bulk delete filtered CTI dataset instead of ugly each(&:delete) This..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.23127906024456024,
            "start": 77,
            "end": 83,
            "answer": "GitHub"
          }
        ]
      },
      {
        "_source": {
          "title": "GitHub - IBM/Project_CodeNet: This repository is to support contributions for\ntools for the Project CodeNet dataset host\n\n",
          "content": "...the Project CodeNet dataset hosted in DAX No suggested... CodeNet, a large-\nscale dataset for benchmarking and experimentation. ...\n\n",
          "source_doc_id": "https://github.com/IBM/Project_CodeNet",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.88,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://github.com/IBM/Project_CodeNet",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...the Project CodeNet dataset hosted in DAX No suggested... CodeNet, a large-scale dataset for benchmarking and experimentation. ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.04999978840351105,
            "start": 176,
            "end": 209,
            "answer": "DAX No suggested .  .  .  CodeNet"
          }
        ]
      },
      {
        "_source": {
          "title": "[1809.10717] Dataset: Rare Event Classification in Multivariate Time Series\n\n",
          "content": "[1809.10717] Dataset: Rare Event...this version, v4)] Title:Dataset: Rare\nEvent...\n\n",
          "source_doc_id": "https://arxiv.org/abs/1809.10717",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8666666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://arxiv.org/abs/1809.10717",
        "_type": "_doc",
        "highlight": {
          "body": [
            "[1809.10717] Dataset: Rare Event...this version, v4)] Title:Dataset: Rare Event..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.2849136292934418,
            "start": 29,
            "end": 82,
            "answer": "Rare Event Classification in Multivariate Time Series"
          }
        ]
      },
      {
        "_source": {
          "title": "[1811.00207] Towards Empathetic Open-domain Conversation Models: a New\nBenchmark and Dataset\n\n",
          "content": "...domain Conversation Models: a New Benchmark and Dataset Donate to arXiv\nPlease join the Simons ...\n\n",
          "source_doc_id": "https://arxiv.org/abs/1811.00207",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8533333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://arxiv.org/abs/1811.00207",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...domain Conversation Models: a New Benchmark and Dataset Donate to arXiv Please join the Simons ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.04580473154783249,
            "start": 161,
            "end": 184,
            "answer": "Dataset Donate to arXiv"
          }
        ]
      },
      {
        "_source": {
          "title": "Opinion | Twelve Million Phones, One Dataset, Zero Privacy - The New York\nTimes\n\n",
          "content": "... Phones, One Dataset, Zero Privacy - ...you lived in one of the cities the\ndataset covers and use apps that share your location...\n\n",
          "source_doc_id": "https://www.nytimes.com/interactive/2019/12/19/opinion/location-tracking-cell-phone.html",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.84,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.nytimes.com/interactive/2019/12/19/opinion/location-tracking-cell-phone.html",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Phones, One Dataset, Zero Privacy - ...you lived in one of the cities the dataset covers and use apps that share your location..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.07422126084566116,
            "start": 52,
            "end": 64,
            "answer": "Zero Privacy"
          }
        ]
      },
      {
        "_source": {
          "title": "How Full Are Hospital I.C.U.s Near You? - The New York Times\n\n",
          "content": "...average of 70 percent of intensive care hospital beds were occupied\nnationwide, according to a dataset released weekly by the Department of Health\nand Human ...\n\n",
          "source_doc_id": "https://www.nytimes.com/interactive/2020/us/covid-hospitals-near-you.html",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8266666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.nytimes.com/interactive/2020/us/covid-hospitals-near-you.html",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...average of 70 percent of intensive care hospital beds were occupied nationwide, according to a dataset released weekly by the Department of Health and Human ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.8794030547142029,
            "start": 194,
            "end": 200,
            "answer": "weekly"
          }
        ]
      },
      {
        "_source": {
          "title": "Data | Free Full-Text | Long-Term WiFi Fingerprinting Dataset for Research on\nRobust Indoor Positioning\n\n",
          "content": "... Fingerprinting Dataset for Research on ... Fingerprinting Dataset for\nResearch on ...\n\n",
          "source_doc_id": "https://www.mdpi.com/2306-5729/3/1/3",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8133333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.mdpi.com/2306-5729/3/1/3",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Fingerprinting Dataset for Research on ... Fingerprinting Dataset for Research on ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.06769084185361862,
            "start": 30,
            "end": 46,
            "answer": "Long - Term WiFi"
          }
        ]
      },
      {
        "_source": {
          "title": "Remote Sensing | Free Full-Text | Time Series GIS Map Dataset of Demolished\nBuildings in Mashiki Town after the 2016 Kum\n\n",
          "content": "... GIS Map Dataset of Demolished ... GIS Map Dataset of Demolished ...\n\n",
          "source_doc_id": "https://www.mdpi.com/2072-4292/11/19/2190",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.8,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.mdpi.com/2072-4292/11/19/2190",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... GIS Map Dataset of Demolished ... GIS Map Dataset of Demolished ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.03182588145136833,
            "start": 40,
            "end": 67,
            "answer": "Time Series GIS Map Dataset"
          }
        ]
      },
      {
        "_source": {
          "title": "COVID-19 Open Research Dataset Challenge (CORD-19) | Kaggle\n\n",
          "content": "COVID-19 Open Research Dataset Challenge (CORD-19) | Kaggle\n\n",
          "source_doc_id": "https://www.kaggle.com/allen-institute-for-ai/CORD-19-research-challenge",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.7866666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.kaggle.com/allen-institute-for-ai/CORD-19-research-challenge",
        "_type": "_doc",
        "highlight": {
          "body": [
            "COVID-19 Open Research Dataset Challenge (CORD-19) | Kaggle"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.7858608365058899,
            "start": 63,
            "end": 69,
            "answer": "Kaggle"
          }
        ]
      },
      {
        "_source": {
          "title": "Question Pairs Dataset | Kaggle\n\n",
          "content": "Question Pairs Dataset | Kaggle\n\n",
          "source_doc_id": "https://www.kaggle.com/quora/question-pairs-dataset/kernels",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.7733333333333333,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.kaggle.com/quora/question-pairs-dataset/kernels",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Question Pairs Dataset | Kaggle"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.5909519195556641,
            "start": 27,
            "end": 33,
            "answer": "Kaggle"
          }
        ]
      },
      {
        "_source": {
          "title": "tf.data.Dataset | TensorFlow Core v2.5.0\n\n",
          "content": "tf.data.Dataset | TensorFlow ...contributing to code and documentation\ntf.data.Dataset tf.data.Dataset( variant...\n\n",
          "source_doc_id": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.76,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset",
        "_type": "_doc",
        "highlight": {
          "body": [
            "tf.data.Dataset  |  TensorFlow ...contributing to code and documentation tf.data.Dataset tf.data.Dataset( variant..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.0191496554762125,
            "start": 75,
            "end": 85,
            "answer": "TensorFlow"
          }
        ]
      },
      {
        "_source": {
          "title": "tfds.is_dataset_on_gcs | TensorFlow Datasets\n\n",
          "content": "tfds.is_dataset_on_gcs | TensorFlow Datasets...to-end ML components Models &\ndatasets Pre-trained models and datasets built by...\n\n",
          "source_doc_id": "https://www.tensorflow.org/datasets/api_docs/python/tfds/is_dataset_on_gcs",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.7466666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.tensorflow.org/datasets/api_docs/python/tfds/is_dataset_on_gcs",
        "_type": "_doc",
        "highlight": {
          "body": [
            "tfds.is_dataset_on_gcs  |  TensorFlow Datasets...to-end ML components Models & datasets Pre-trained models and datasets built by..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.4961402118206024,
            "start": 35,
            "end": 54,
            "answer": "TensorFlow Datasets"
          }
        ]
      },
      {
        "_source": {
          "title": "CLEVR: A Diagnostic Dataset for Compositional Language and Elementary Visual\nReasoning\n\n",
          "content": "...: A Diagnostic Dataset for Compositional ...each question requires. We use\nthis dataset to analyze a variety of modern visual reasoning...\n\n",
          "source_doc_id": "https://cs.stanford.edu/people/jcjohns/clevr/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.7333333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://cs.stanford.edu/people/jcjohns/clevr/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...: A Diagnostic Dataset for Compositional ...each question requires. We use this dataset to analyze a variety of modern visual reasoning..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.04755273833870888,
            "start": 34,
            "end": 88,
            "answer": "Compositional Language and Elementary Visual Reasoning"
          }
        ]
      },
      {
        "_source": {
          "title": "STL-10 dataset\n\n",
          "content": "STL-10 dataset STL-10 dataset Overview 10...in the range 1 to 10. The\nunlabeled dataset, unlabeled.bin, is in the same format, but there...\n\n",
          "source_doc_id": "https://cs.stanford.edu/~acoates/stl10/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.72,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://cs.stanford.edu/~acoates/stl10/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "STL-10 dataset STL-10 dataset Overview 10...in the range 1 to 10. The unlabeled dataset, unlabeled.bin, is in the same format, but there..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.6697554588317871,
            "start": 51,
            "end": 62,
            "answer": "Overview 10"
          }
        ]
      },
      {
        "_source": {
          "title": "Response2covid19, a dataset of governments’ responses to COVID-19 all around\nthe world | Scientific Data\n\n",
          "content": "..., a dataset of governments’ responses to...’, a living dataset of\ngovernments’ responses to... provides a worldwide dataset of school closures\nall around...\n\n",
          "source_doc_id": "https://www.nature.com/articles/s41597-020-00757-y",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.7066666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.nature.com/articles/s41597-020-00757-y",
        "_type": "_doc",
        "highlight": {
          "body": [
            "..., a dataset of governments’ responses to...’, a living dataset of governments’ responses to... provides a worldwide dataset of school closures all around..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.38892534375190735,
            "start": 95,
            "end": 110,
            "answer": "Scientific Data"
          }
        ]
      },
      {
        "_source": {
          "title": "Dataset of low global warming potential refrigerant refrigeration system for\nfault detection and diagnostics | Scientifi\n\n",
          "content": "Dataset of low global warming potential refrigerant refrigeration system for\nfault detection and diagnostics...\n\n",
          "source_doc_id": "https://www.nature.com/articles/s41597-021-00927-6?code=ae39ff30-64a9-4cf9-8236-d72b15d08035&error=cookies_not_supported",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6933333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.nature.com/articles/s41597-021-00927-6?code=ae39ff30-64a9-4cf9-8236-d72b15d08035&error=cookies_not_supported",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Dataset of low global warming potential refrigerant refrigeration system for fault detection and diagnostics..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.9553972482681274,
            "start": 113,
            "end": 122,
            "answer": "Scientifi"
          }
        ]
      },
      {
        "_source": {
          "title": "STL-10 dataset\n\n",
          "content": "STL-10 dataset STL-10 dataset Overview 10...in the range 1 to 10. The\nunlabeled dataset, unlabeled.bin, is in the same format, but there...\n\n",
          "source_doc_id": "https://ai.stanford.edu/~acoates/stl10/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.68,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://ai.stanford.edu/~acoates/stl10/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "STL-10 dataset STL-10 dataset Overview 10...in the range 1 to 10. The unlabeled dataset, unlabeled.bin, is in the same format, but there..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.6697554588317871,
            "start": 51,
            "end": 62,
            "answer": "Overview 10"
          }
        ]
      },
      {
        "_source": {
          "title": "RoboNet: A Dataset for Large-Scale Multi-Robot Learning | SAIL Blog\n\n",
          "content": "RoboNet: A Dataset for Large-Scale...arguably predicated just as much on large\ndatasets, such as ImageNet , as...\n\n",
          "source_doc_id": "https://ai.stanford.edu/blog/robonet/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6666666666666666,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://ai.stanford.edu/blog/robonet/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "RoboNet: A Dataset for Large-Scale...arguably predicated just as much on large datasets, such as ImageNet , as..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.17620456218719482,
            "start": 66,
            "end": 114,
            "answer": "SAIL Blog RoboNet :  A Dataset for Large - Scale"
          }
        ]
      },
      {
        "_source": {
          "title": "Miami 1/3 arc-second NAVD 88 Coastal Digital Elevation Model - OPeNDAP Dataset\nAccess Form - Data.gov\n\n",
          "content": "... Digital Elevation Model - OPeNDAP Dataset Access Form - Data.gov\n\n",
          "source_doc_id": "https://catalog.data.gov/dataset/miami-1-3-arc-second-navd-88-coastal-digital-elevation-model/resource/5f92111b-5e81-45ba-8244-089b5a57a399",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6533333333333333,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://catalog.data.gov/dataset/miami-1-3-arc-second-navd-88-coastal-digital-elevation-model/resource/5f92111b-5e81-45ba-8244-089b5a57a399",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Digital Elevation Model - OPeNDAP Dataset Access Form - Data.gov"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.11250156164169312,
            "start": 25,
            "end": 32,
            "answer": "NAVD 88"
          }
        ]
      },
      {
        "_source": {
          "title": "U.S. Monthly Extremes - KMZ file for dataset - CKAN\n\n",
          "content": "U.S. Monthly Extremes - KMZ file for dataset - CKAN\n\n",
          "source_doc_id": "https://catalog.data.gov/dataset/u-s-monthly-extremes/resource/852a002c-b24c-4da2-9343-ffe7a2ff3c71",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.64,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://catalog.data.gov/dataset/u-s-monthly-extremes/resource/852a002c-b24c-4da2-9343-ffe7a2ff3c71",
        "_type": "_doc",
        "highlight": {
          "body": [
            "U.S. Monthly Extremes - KMZ file for dataset - CKAN"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.1862538903951645,
            "start": 55,
            "end": 59,
            "answer": "CKAN"
          }
        ]
      },
      {
        "_source": {
          "title": "Mendeley Data - Data from : Plastic debris dataset on the Seine river banks:\nplastic pellets, unidentified plastic fragm\n\n",
          "content": "... from : Plastic debris dataset on the Seine river banks: plastic...prompt\nto sink. Furthermore, the dataset refers to specific activities in the\nestuary...\n\n",
          "source_doc_id": "https://data.mendeley.com/datasets/29c2r6dm85",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6266666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://data.mendeley.com/datasets/29c2r6dm85",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... from : Plastic debris dataset on the Seine river banks: plastic...prompt to sink. Furthermore, the dataset refers to specific activities in the estuary..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.030509984120726585,
            "start": 32,
            "end": 79,
            "answer": "Plastic debris dataset on the Seine river banks"
          }
        ]
      },
      {
        "_source": {
          "title": "Mendeley Data - Dataset for controlling sugarcane press-mud fermentation to\nincrease bioethanol steam reforming for hydr\n\n",
          "content": "... Data - Dataset for controlling sugarcane press-mud... files associated\nwith this dataset are licensed under a Creative...\n\n",
          "source_doc_id": "https://data.mendeley.com/datasets/g4jrbkk7v9/2",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6133333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://data.mendeley.com/datasets/g4jrbkk7v9/2",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Data - Dataset for controlling sugarcane press-mud... files associated with this dataset are licensed under a Creative..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.037857163697481155,
            "start": 135,
            "end": 189,
            "answer": "Data  -  Dataset for controlling sugarcane press - mud"
          }
        ]
      },
      {
        "_source": {
          "title": "The Stanford Question Answering Dataset\n\n",
          "content": "... Answering Dataset What is SQuAD? ...dataset. Download a copy of the\ndataset (distributed under the CC ...\n\n",
          "source_doc_id": "https://rajpurkar.github.io/SQuAD-explorer/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.6,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://rajpurkar.github.io/SQuAD-explorer/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Answering Dataset What is SQuAD? ...dataset. Download a copy of the dataset (distributed under the CC ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.05533446744084358,
            "start": 4,
            "end": 39,
            "answer": "Stanford Question Answering Dataset"
          }
        ]
      },
      {
        "_source": {
          "title": "SQuAD - the Stanford Question Answering Dataset\n\n",
          "content": "SQuAD - the Stanford Question Answering Dataset Explore SQuAD\n\n",
          "source_doc_id": "https://rajpurkar.github.io/SQuAD-explorer/explore/v2.0/dev/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.5866666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://rajpurkar.github.io/SQuAD-explorer/explore/v2.0/dev/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "SQuAD - the Stanford Question Answering Dataset Explore SQuAD"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.36506199836730957,
            "start": 100,
            "end": 113,
            "answer": "Explore SQuAD"
          }
        ]
      },
      {
        "_source": {
          "title": "Build Dataset: Get Apple Watch dat… | Apple Developer Forums\n\n",
          "content": "Build Dataset: Get Apple Watch... is the best way to build a dataset from\nApple Watch data...\n\n",
          "source_doc_id": "https://developer.apple.com/forums/thread/682714",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.5733333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://developer.apple.com/forums/thread/682714",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Build Dataset: Get Apple Watch... is the best way to build a dataset from Apple Watch data..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.507740318775177,
            "start": 42,
            "end": 64,
            "answer": "Apple Developer Forums"
          }
        ]
      },
      {
        "_source": {
          "title": "Designing Great ML Experiences - WWDC19 - Videos - Apple Developer\n\n",
          "content": "...engineering teams gather data from across different races, different\ncultures, and different scenarios. We built a dataset that matched the\nexperience we wanted to create. We c\n\n",
          "source_doc_id": "https://developer.apple.com/videos/play/wwdc2019/803",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.56,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://developer.apple.com/videos/play/wwdc2019/803",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...engineering teams gather data from across different races, different cultures, and different scenarios. We built a dataset that matched the experience we wanted to create. We c"
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.034720174968242645,
            "start": 57,
            "end": 72,
            "answer": "Apple Developer"
          }
        ]
      },
      {
        "_source": {
          "title": "6\\. Dataset transformations — scikit-learn 0.24.2 documentation\n\n",
          "content": "6\\. Dataset transformations — scikit-learn 0.24.2 documentation scikit-learn\nprovides a library of transformers...\n\n",
          "source_doc_id": "https://scikit-learn.org/stable/data_transforms.html",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.5466666666666666,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://scikit-learn.org/stable/data_transforms.html",
        "_type": "_doc",
        "highlight": {
          "body": [
            "6. Dataset transformations — scikit-learn 0.24.2 documentation scikit-learn provides a library of transformers..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.16286949813365936,
            "start": 32,
            "end": 57,
            "answer": "scikit - learn 0 . 24 . 2"
          }
        ]
      },
      {
        "_source": {
          "title": "API Reference — scikit-learn 0.24.2 documentation\n\n",
          "content": "... the Cross decomposition section for further details. The sklearn.datasets\nmodule includes utilities to load datasets, including methods to load and\nfetch popular reference...\n\n",
          "source_doc_id": "https://scikit-learn.org/stable/modules/classes.html",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.5333333333333333,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://scikit-learn.org/stable/modules/classes.html",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... the Cross decomposition section for further details. The sklearn.datasets module includes utilities to load datasets, including methods to load and fetch popular reference..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.054703373461961746,
            "start": 125,
            "end": 186,
            "answer": "sklearn . datasets module includes utilities to load datasets"
          }
        ]
      },
      {
        "_source": {
          "title": "Tracking State Changes in Procedural Text: a Challenge Dataset and Models for\nProcess Paragraph Comprehension\n\n",
          "content": "...: a Challenge Dataset and Models for Process...improve accuracy by up to\n19%. The dataset and models are available to the community...\n\n",
          "source_doc_id": "https://www.aclweb.org/anthology/N18-1144",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.52,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.aclweb.org/anthology/N18-1144",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...: a Challenge Dataset and Models for Process...improve accuracy by up to 19%. The dataset and models are available to the community..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.03189970552921295,
            "start": 176,
            "end": 206,
            "answer": "improve accuracy by up to 19 %"
          }
        ]
      },
      {
        "_source": {
          "title": "Inducing Gazetteers for Named Entity Recognition by Large-Scale Clustering of\nDependency Relations\n\n",
          "content": "...struction of large-scale MN clusters. We demonstrated with the IREX dataset\nfor the Japanese NER that using the constructed clus- ters as a gazetteer...\n\n",
          "source_doc_id": "https://www.aclweb.org/anthology/P08-1047",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.5066666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://www.aclweb.org/anthology/P08-1047",
        "_type": "_doc",
        "highlight": {
          "body": [
            "...struction of large-scale MN clusters. We demonstrated with the IREX dataset for the Japanese NER that using the constructed clus- ters as a gazetteer..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.1799340844154358,
            "start": 177,
            "end": 210,
            "answer": "IREX dataset for the Japanese NER"
          }
        ]
      },
      {
        "_source": {
          "title": "Cedergren dataset\n\n",
          "content": "Cedergren dataset Cedegren data set: Logistic Regression a.k.a. ...\n\n",
          "source_doc_id": "https://nlp.stanford.edu/~manning/courses/ling289/cedegren-varbrul.html",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.4933333333333334,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://nlp.stanford.edu/~manning/courses/ling289/cedegren-varbrul.html",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Cedergren dataset Cedegren data set: Logistic Regression a.k.a. ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.06576395034790039,
            "start": 18,
            "end": 44,
            "answer": "Cedergren dataset Cedegren"
          }
        ]
      },
      {
        "_source": {
          "title": "A New Multi-Turn, Multi-Domain, Task-Oriented Dialogue Dataset - The Stanford\nNatural Language Processing Group\n\n",
          "content": "... Dialogue Dataset - The Stanford ... 79 65 140 Our dataset was designed so\nthat each dialogue had...\n\n",
          "source_doc_id": "https://nlp.stanford.edu/blog/a-new-multi-turn-multi-domain-task-oriented-dialogue-dataset/",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.48,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://nlp.stanford.edu/blog/a-new-multi-turn-multi-domain-task-oriented-dialogue-dataset/",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Dialogue Dataset - The Stanford ... 79 65 140 Our dataset was designed so that each dialogue had..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.08157661557197571,
            "start": 40,
            "end": 72,
            "answer": "Task - Oriented Dialogue Dataset"
          }
        ]
      },
      {
        "_source": {
          "title": "Groove MIDI Dataset\n\n",
          "content": "... MIDI Dataset The ...data, we created a new dataset of drum performances\nrecorded... MIDI Dataset in your work, please cite...\n\n",
          "source_doc_id": "https://magenta.tensorflow.org/datasets/groove",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.4666666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://magenta.tensorflow.org/datasets/groove",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... MIDI Dataset The ...data, we created a new dataset of drum performances recorded... MIDI Dataset in your work, please cite..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.03096015378832817,
            "start": 30,
            "end": 42,
            "answer": "MIDI Dataset"
          }
        ]
      },
      {
        "_source": {
          "title": "The MAESTRO Dataset and Wave2Midi2Wave\n\n",
          "content": "The MAESTRO Dataset and Wave2Midi2Wave...transcribed from the piano audio in\nthe dataset and then synthesized using a ...\n\n",
          "source_doc_id": "https://magenta.tensorflow.org/maestro-wave2midi2wave",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.45333333333333337,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://magenta.tensorflow.org/maestro-wave2midi2wave",
        "_type": "_doc",
        "highlight": {
          "body": [
            "The MAESTRO Dataset and Wave2Midi2Wave...transcribed from the piano audio in the dataset and then synthesized using a ..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.0623452365398407,
            "start": 107,
            "end": 118,
            "answer": "piano audio"
          }
        ]
      },
      {
        "_source": {
          "title": "Unsplash Dataset | The world’s largest open library dataset\n\n",
          "content": "Unsplash Dataset | The world’s largest open library... see all fields exposed\nin the dataset, see the documentation . 550 MB...\n\n",
          "source_doc_id": "https://unsplash.com/data",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.44000000000000006,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://unsplash.com/data",
        "_type": "_doc",
        "highlight": {
          "body": [
            "Unsplash Dataset | The world’s largest open library... see all fields exposed in the dataset, see the documentation . 550 MB..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.048103656619787216,
            "start": 21,
            "end": 78,
            "answer": "The world’s largest open library dataset Unsplash Dataset"
          }
        ]
      },
      {
        "_source": {
          "title": "100+ Koala Pictures | Download Free Images on Unsplash\n\n",
          "content": "... Free Images on Unsplash Koala Koala Dataset KOALA 38 photos · Curated by\nTSAI JACOB Koala...\n\n",
          "source_doc_id": "https://unsplash.com/s/photos/koala",
          "data_source": "ai4eu_qwant_ai",
          "kg_generic": [],
          "plugin_name": "QwantPlugin"
        },
        "_score": 0.4266666666666667,
        "_index": "ai4eu_qwant_ai",
        "_id": "https://unsplash.com/s/photos/koala",
        "_type": "_doc",
        "highlight": {
          "body": [
            "... Free Images on Unsplash Koala Koala Dataset KOALA 38 photos · Curated by TSAI JACOB Koala..."
          ]
        },
        "_source_score": 0.5,
        "_aggregator_score": 1,
        "semantic_content": "",
        "see_also": [],
        "short_answer": [
          {
            "score": 0.1101505309343338,
            "start": 113,
            "end": 118,
            "answer": "KOALA"
          }
        ]
      },
      {
        "_source": {
          "title": "ECO: Efficient Convolution Operators for Tracking | Papers With Code\n\n",
          "lemma_title": "ECO efficient Convolution Operators track Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n×\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n×\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n×\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n×\n\nmartin-danelljan/ECO\n\n536\n\n\\-\n\nfengyang95/pyCFTrackers\n\n309\n\n\\-\n\n       Mark the official implementation from paper authors\n\n×\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTask:*\n\n\\--------- Visual Object Tracking\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \nVisual Object Tracking  TrackingNet  ECO  Precision  48.86    5  \\-  \nVisual Object Tracking  TrackingNet  ECO  Normalized Precision  62.14    5  \\-  \nVisual Object Tracking  TrackingNet  ECO  Accuracy  56.13    5  \\-  \nVisual Object Tracking  VOT2017/18  ECO  Expected Average Overlap (EAO)  0.280\n  11  \\-  \n  \n      Add a task\n\n×\n\nAttached tasks:\n\n  * VISUAL OBJECT TRACKING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n×\n\n  * VISUAL OBJECT TRACKING \\- \n\n      Add a method\n\n×\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n×\n\n  🦡 Badges\n\n* * *\n\nInclude the markdown at the top of your GitHub `README.md` file to showcase\nthe performance of the model.\n\nBadges are live and will be dynamically updated with the latest ranking of\nthis paper.\n\nBadge  Markdown  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/eco-\nefficient-convolution-operators-for/visual-object-tracking-on-\ntrackingnet)](https://paperswithcode.com/sota/visual-object-tracking-on-\ntrackingnet?p=eco-efficient-convolution-operators-for)`  \n`[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/eco-\nefficient-convolution-operators-for/visual-object-tracking-on-\nvot201718)](https://paperswithcode.com/sota/visual-object-tracking-on-\nvot201718?p=eco-efficient-convolution-operators-for)`  \n  \n      Edit Datasets\n\n×\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nOTB OTB-2015 VOT2016\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  ECO: Efficient Convolution Operators for Tracking\n\nCVPR 2017 •  Martin Danelljan •  Goutam Bhat •  Fahad Shahbaz Khan •  Michael\nFelsberg\n\nIn recent years, Discriminative Correlation Filter (DCF) based methods have\nsignificantly advanced the state-of-the-art in tracking. However, in the\npursuit of ever increasing tracking performance, their characteristic speed\nand real-time capability have gradually faded... Further, the increasingly\ncomplex models, with massive number of trainable parameters, have introduced\nthe risk of severe over-fitting. In this work, we tackle the key causes behind\nthe problems of computational complexity and over-fitting, with the aim of\nsimultaneously improving both speed and performance. We revisit the core DCF\nformulation and introduce: (i) a factorized convolution operator, which\ndrastically reduces the number of parameters in the model; (ii) a compact\ngenerative model of the training sample distribution, that significantly\nreduces memory and time complexity, while providing better diversity of\nsamples; (iii) a conservative model update strategy with improved robustness\nand reduced complexity. We perform comprehensive experiments on four\nbenchmarks: VOT2016, UAV123, OTB-2015, and TempleColor. When using expensive\ndeep features, our tracker provides a 20-fold speedup and achieves a 13.0%\nrelative gain in Expected Average Overlap compared to the top ranked method in\nthe VOT2016 challenge. Moreover, our fast variant, using hand-crafted\nfeatures, operates at 60 Hz on a single CPU, while obtaining 65.0% AUC on\nOTB-2015. (read more)\n\n__PDF Abstract  __CVPR 2017 PDF CVPR 2017 Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\nmartin-danelljan/ECO\n\n536\n\nfengyang95/pyCFTrackers\n\n309\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * VISUAL OBJECT TRACKING\n\n  Datasets\n\n__Edit\n\n* * *\n\nOTB  OTB-2015  VOT2016\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\nRanked  5 on  Visual Object Tracking on TrackingNet\n\n     __Get a GitHub badge\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK RESULT BENCHMARK  \nVisual Object Tracking  VOT2017/18  ECO  Expected Average Overlap (EAO)  0.280\n  11\n\nCompare  \n  \n  Results from Other Papers\n\n* * *\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK SOURCE PAPER COMPARE  \nVisual Object Tracking  TrackingNet  ECO  Precision  48.86    5\n\nSee all  \n  \nNormalized Precision  62.14    5\n\nSee all  \n  \nAccuracy  56.13    5\n\nSee all  \n  \n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n🤖 No Methods Found Help the community by adding them if they're not listed;\ne.g. Deep Residual Learning for Image Recognition uses ResNet  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper martin-danelljan ECO 536 fengyang95 pycftracker 309 mark official implementation paper author martin-danelljan ECO 536 pycftracker 309 official implementation multiple official implementation submit add new evaluation result task visual object tracking list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove visual object tracking TrackingNet ECO Precision 48.86 5 visual object tracking TrackingNet ECO Normalized Precision 62.14 5 visual object tracking TrackingNet ECO accuracy 56.13 5 visual object tracking VOT2017/18 ECO expect Average Overlap EAO 0.280 11 add task × attach task visual object tracking add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task visual object track add method add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method 🦡 badge include markdown top GitHub README.md file showcase performance model badge live will update late ranking paper Badge Markdown pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge eco- efficient-convolution-operators-for visual-object-tracking-on- trackingnet https://paperswithcode.com sota visual-object-tracking-on- trackingnet?p eco-efficient-convolution-operators-for pwc] https://img.shields.io endpoint.svg?url https://paperswithcode.com badge eco- efficient-convolution-operators-for visual-object-tracking-on- vot201718 https://paperswithcode.com sota visual-object-tracking-on- vot201718?p eco-efficient-convolution-operators-for Edit Datasets add remove dataset introduce paper add remove other dataset use paper OTB OTB-2015 vot2016 paper introduce new dataset _ _ add new dataset save eco efficient Convolution Operators track CVPR 2017 • Martin Danelljan • Goutam Bhat • Fahad Shahbaz Khan • Michael Felsberg recent year Discriminative Correlation Filter DCF base method advance state-of-the-art tracking pursuit increase tracking performance characteristic speed real-time capability fade complex model massive number trainable parameter introduce risk severe over-fitting work tackle key cause problem computational complexity over-fitting aim improve speed performance revisit core DCF formulation introduce i factorized convolution operator reduce number parameter model compact generative model training sample distribution reduce memory time complexity provide well diversity sample conservative model update strategy improve robustness reduced complexity perform comprehensive experiment four benchmark VOT2016 uav123 OTB-2015 TempleColor use expensive deep feature tracker provide 20-fold speedup achieve 13.0 relative gain expect Average Overlap compare top rank method vot2016 challenge fast variant use hand-crafted feature operate 60 hz single cpu obtain 65.0 AUC OTB-2015 read _ _ PDF Abstract _ _ CVPR 2017 PDF CVPR 2017 Abstract code _ _ edit add remove Mark official martin-danelljan ECO 536 pycftracker 309 martin-danelljan ECO 536 pycftracker 309 task _ _ edit add remove visual object tracking dataset _ _ edit OTB otb-2015 vot2016 result Paper _ _ edit rank 5 visual object track TrackingNet _ _ GitHub badge task DATASET model metric name metric value global RANK result benchmark visual object tracking VOT2017/18 ECO expect Average Overlap EAO 0.280 11 compare result other Papers task DATASET model metric name metric value global rank source paper compare visual object tracking TrackingNet ECO Precision 48.86 5 see Normalized Precision 62.14 5 see accuracy 56.13 5 see method use Paper _ _ edit add remove method type 🤖 Methods find Help community add list Deep Residual Learning Image Recognition use ResNet contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "×  ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "×  ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "README.md",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Badges",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "efficient-convolution-operators-for",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://img.shields.io",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "efficient-convolution-operators-for",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "https://paperswithcode.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "OTB OTB-2015 VOT2016",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Martin Danelljan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Bhat",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Fahad Shahbaz Khan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Michael Felsberg",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "recent years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Discriminative Correlation Filter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "VOT2016",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "UAV123",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "OTB-2015",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "60 Hz",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "OTB-2015",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Normalized Precision",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Accuracy",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "visual",
              "property": "object",
              "value": "tracking",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "significantly advance",
              "value": "state-of-the-art",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "increasingly complex model",
              "property": "introduce",
              "value": "risk",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "tackle",
              "value": "key cause",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "revisit",
              "value": "core DCF formulation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "perform",
              "value": "comprehensive experiment",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "tracker",
              "property": "provide",
              "value": "20-fold speedup",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Overlap",
              "property": "compare to",
              "value": "method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "fast variant",
              "property": "operate at",
              "value": "60 hz",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "object",
              "property": "track on",
              "value": "TrackingNet",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "         method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Deep Residual Learning",
              "property": "use",
              "value": "ResNet",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "EAO",
              "property": "",
              "value": "expect Average Overlap",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "DCF",
              "property": "",
              "value": "Discriminative Correlation Filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "EAO",
              "property": "",
              "value": "expect Average Overlap",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2791069569066167,
                0.2380798738449812,
                0.21438411343842745,
                0.06667243223637342,
                0.06697441171854734,
                0.08193171676248312,
                0.037399765104055405,
                0.015450757928192616
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2523683328181505,
                0.2846635989844799,
                0.12179230060428381,
                0.09586088359355927,
                0.1281764218583703,
                0.060712493024766445,
                0.041333386674523354,
                0.015092547982931137
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.21985260490328074,
                0.2824602145701647,
                0.21462023258209229,
                0.11517398059368134,
                0.06788383983075619,
                0.05048944894224405,
                0.017753349617123604,
                0.031766414642333984
              ]
            },
            {
              "labels": [
                "deep learning",
                "computer vision",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.33835532423108816,
                0.19003452733159065,
                0.19808251224458218,
                0.128807770088315,
                0.06215498223900795,
                0.05181572400033474,
                0.010790429078042507,
                0.01995875360444188
              ]
            },
            {
              "labels": [
                "natural language processing",
                "robotic",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.28153412602841854,
                0.2572300210595131,
                0.15746625512838364,
                0.13448332250118256,
                0.08929645270109177,
                0.039959156420081854,
                0.014740699902176857,
                0.02529002260416746
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.36785490065813065,
                0.19174085790291429,
                0.1355793382972479,
                0.07626556698232889,
                0.06321312673389912,
                0.12107548303902149,
                0.013006316497921944,
                0.03126446809619665
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "computer vision",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.3319245455786586,
                0.21531949657946825,
                0.1623413059860468,
                0.12677808478474617,
                0.043055337853729725,
                0.060490308329463005,
                0.043613823130726814,
                0.016477230936288834
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "computer vision",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.22618352808058262,
                0.10080304834991693,
                0.1197053100913763,
                0.22902759723365307,
                0.15175600722432137,
                0.10831497609615326,
                0.04415582865476608,
                0.020053740590810776
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.1995834531262517,
                0.2840989585965872,
                0.2257087053731084,
                0.10864214785397053,
                0.056504388339817524,
                0.028541622683405876,
                0.05452119931578636,
                0.042399522848427296
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3557768166065216,
                0.2561328951269388,
                0.12476826272904873,
                0.1068305829539895,
                0.05976171512156725,
                0.04412034805864096,
                0.04085823521018028,
                0.011751093901693821
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.30113834887742996,
                0.29823717242106795,
                0.17409673240035772,
                0.05522982496768236,
                0.08584135212004185,
                0.033514185808598995,
                0.013878360390663147,
                0.038063996471464634
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3775497693568468,
                0.20246324967592955,
                0.1189485713839531,
                0.13767898082733154,
                0.05816175043582916,
                0.0568819884210825,
                0.01334685180336237,
                0.03496874962002039
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.34147914592176676,
                0.2227809727191925,
                0.2138592624105513,
                0.10876133851706982,
                0.04212559666484594,
                0.012343489564955235,
                0.032650177367031574,
                0.02600007364526391
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "natural language processing",
                "neuromorphic computing",
                "robotic",
                "internet of things"
              ],
              "scores": [
                0.44945337576791644,
                0.29428473685402423,
                0.21866371482610703,
                0.02541247953195125,
                0.006791370891733095,
                0.0012976747239008546,
                0.001964241499081254,
                0.002132447174517438
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.998069167137146,
              "spans": [
                {
                  "approx_length": 72,
                  "score": 0.998069167137146,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8387852036035978,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.7519263029098511,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 305,
                  "score": 0.9979187846183777,
                  "spanid": 2
                },
                {
                  "approx_length": 231,
                  "score": 0.9990814924240112,
                  "spanid": 3
                },
                {
                  "approx_length": 148,
                  "score": 0.9918054938316345,
                  "spanid": 4
                },
                {
                  "approx_length": 347,
                  "score": 0.9888420701026917,
                  "spanid": 5
                },
                {
                  "approx_length": 202,
                  "score": 0.9986692667007446,
                  "spanid": 6
                },
                {
                  "approx_length": 292,
                  "score": 0.9796426296234131,
                  "spanid": 7
                },
                {
                  "approx_length": 158,
                  "score": 0.997466504573822,
                  "spanid": 8
                },
                {
                  "approx_length": 213,
                  "score": 0.9987664222717285,
                  "spanid": 9
                },
                {
                  "approx_length": 207,
                  "score": 0.9968888163566589,
                  "spanid": 10
                },
                {
                  "approx_length": 223,
                  "score": 0.9981539845466614,
                  "spanid": 11
                },
                {
                  "approx_length": 379,
                  "score": 0.8867576122283936,
                  "spanid": 13
                },
                {
                  "approx_length": 310,
                  "score": 0.9170502424240112,
                  "spanid": 15
                },
                {
                  "approx_length": 326,
                  "score": 0.9984300136566162,
                  "spanid": 16
                },
                {
                  "approx_length": 340,
                  "score": 0.8379002809524536,
                  "spanid": 17
                },
                {
                  "approx_length": 328,
                  "score": 0.5473277568817139,
                  "spanid": 18
                },
                {
                  "approx_length": 252,
                  "score": 0.9830255508422852,
                  "spanid": 20
                },
                {
                  "approx_length": 253,
                  "score": 0.9960092306137085,
                  "spanid": 21
                },
                {
                  "approx_length": 210,
                  "score": 0.9754774570465088,
                  "spanid": 22
                },
                {
                  "approx_length": 333,
                  "score": 0.9853234887123108,
                  "spanid": 23
                },
                {
                  "approx_length": 235,
                  "score": 0.9981154799461365,
                  "spanid": 24
                },
                {
                  "approx_length": 215,
                  "score": 0.9865387678146362,
                  "spanid": 25
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.09152295726996201,
              "spans": [
                {
                  "approx_length": 277,
                  "score": 0.7118383049964905,
                  "spanid": 12
                },
                {
                  "approx_length": 261,
                  "score": 0.6783273220062256,
                  "spanid": 14
                },
                {
                  "approx_length": 330,
                  "score": 0.9894312620162964,
                  "spanid": 19
                }
              ]
            }
          ],
          "summary": [
            " ECO :  Efficient Convolution Operators for Tracking for Tracking . ECO : E",
            " Official code from paper authors Submit Remove a code repository from this paper . Add a new code entry for this paper to GitHub or BitBucket . Mark the official implementation of the paper authors . There is no official",
            " Data evaluated on Submit Add a new evaluation result row to the list . Add a task to add a task . Use a new task to test your knowledge base's ability to perform visual object tracking . Add tasks to",
            " New method name  (e . g .  ReLU ) New method full name (e. g . Rectified Linear Unit) New Method full name  :  Paper where method was first introduced  :",
            " Badges are live and will be dynamically updated with the latest ranking of this paper . Include the markdown at the top of your GitHub GitHub .",
            " In recent years,  Discriminative Correlation Filter (DCF ) based methods have significantly advanced the state - of - the - art in tracking . However, in the pursuit of ever increasing tracking performance",
            " Our tracker provides a 20 - fold speedup and achieves a 13 . 0% relative gain in Expected Average Overlap compared to the top ranked method in the VOT2016 challenge . We perform comprehensive experiments on",
            " TASK DATASET MODEL METRIC METRIC NAME METRIC VALUE GLOBAL RANK RESULT BENCHMARK Visual Object Tracking VOT2017 / 18 ECO Expected Average Over"
          ],
          "text_suggester": [
            {
              "input": "eco",
              "weight": 27
            },
            {
              "input": "efficient convolution operators",
              "weight": 0
            },
            {
              "input": "60 hz",
              "weight": 13
            },
            {
              "input": "a change",
              "weight": 0
            },
            {
              "input": "a code repository",
              "weight": 0
            },
            {
              "input": "a compact generative model",
              "weight": 0
            },
            {
              "input": "a conservative model update strategy",
              "weight": 0
            },
            {
              "input": "a factorized convolution operator",
              "weight": 0
            },
            {
              "input": "a free resource",
              "weight": 0
            },
            {
              "input": "a github badge",
              "weight": 0
            },
            {
              "input": "a method",
              "weight": 9
            },
            {
              "input": "a new account",
              "weight": 0
            },
            {
              "input": "a new category",
              "weight": 0
            },
            {
              "input": "a new code entry",
              "weight": 0
            },
            {
              "input": "a new dataset",
              "weight": 9
            },
            {
              "input": "a new method",
              "weight": 0
            },
            {
              "input": "a new task",
              "weight": 0
            },
            {
              "input": "a single cpu",
              "weight": 0
            },
            {
              "input": "a task",
              "weight": 19
            },
            {
              "input": "abstract",
              "weight": 0
            },
            {
              "input": "abstract code",
              "weight": 0
            },
            {
              "input": "add a new category",
              "weight": 17
            },
            {
              "input": "add remove mark official",
              "weight": 28
            },
            {
              "input": "all methods",
              "weight": 0
            },
            {
              "input": "all normalized precision",
              "weight": 0
            },
            {
              "input": "all data",
              "weight": 0
            },
            {
              "input": "attached tasks",
              "weight": 0
            },
            {
              "input": "average",
              "weight": 6
            },
            {
              "input": "badge",
              "weight": 9
            },
            {
              "input": "badge markdown",
              "weight": 0
            },
            {
              "input": "badges",
              "weight": 0
            },
            {
              "input": "better diversity",
              "weight": 0
            },
            {
              "input": "bitbucket url",
              "weight": 0
            },
            {
              "input": "both speed",
              "weight": 0
            },
            {
              "input": "code",
              "weight": 9
            },
            {
              "input": "compare",
              "weight": 11
            },
            {
              "input": "complexity",
              "weight": 7
            },
            {
              "input": "comprehensive experiments",
              "weight": 0
            },
            {
              "input": "computational complexity",
              "weight": 0
            },
            {
              "input": "create",
              "weight": 5
            },
            {
              "input": "create a new account",
              "weight": 23
            },
            {
              "input": "cvpr",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 12
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 9
            },
            {
              "input": "deep residual learning",
              "weight": 0
            },
            {
              "input": "deep residual learning for image recognition",
              "weight": 4
            },
            {
              "input": "discriminative correlation filter",
              "weight": 4
            },
            {
              "input": "edit",
              "weight": 45
            },
            {
              "input": "edit datasets",
              "weight": 0
            },
            {
              "input": "expect",
              "weight": 6
            },
            {
              "input": "expect average overlap compare",
              "weight": 31
            },
            {
              "input": "expected average overlap",
              "weight": 0
            },
            {
              "input": "expensive deep features",
              "weight": 0
            },
            {
              "input": "extra training data",
              "weight": 0
            },
            {
              "input": "fahad shahbaz khan",
              "weight": 0
            },
            {
              "input": "first",
              "weight": 4
            },
            {
              "input": "four",
              "weight": 4
            },
            {
              "input": "four benchmarks",
              "weight": 0
            },
            {
              "input": "full name",
              "weight": 0
            },
            {
              "input": "github",
              "weight": 0
            },
            {
              "input": "gitlab",
              "weight": 0
            },
            {
              "input": "global",
              "weight": 12
            },
            {
              "input": "global rank source paper",
              "weight": 0
            },
            {
              "input": "goutam bhat",
              "weight": 0
            },
            {
              "input": "iii",
              "weight": 4
            },
            {
              "input": "image recognition",
              "weight": 0
            },
            {
              "input": "implementation",
              "weight": 7
            },
            {
              "input": "improved robustness",
              "weight": 0
            },
            {
              "input": "introduce",
              "weight": 5
            },
            {
              "input": "late trending ml paper",
              "weight": 54
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "list",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 0
            },
            {
              "input": "martin danelljan",
              "weight": 0
            },
            {
              "input": "massive number",
              "weight": 0
            },
            {
              "input": "memory and time complexity",
              "weight": 0
            },
            {
              "input": "method",
              "weight": 9
            },
            {
              "input": "methods",
              "weight": 0
            },
            {
              "input": "methods rc2020 trends",
              "weight": 0
            },
            {
              "input": "metric",
              "weight": 9
            },
            {
              "input": "metric name",
              "weight": 0
            },
            {
              "input": "metric name metric value",
              "weight": 0
            },
            {
              "input": "metric name metric value global rank result benchmark",
              "weight": 0
            },
            {
              "input": "metric value",
              "weight": 0
            },
            {
              "input": "michael felsberg",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 7
            },
            {
              "input": "name",
              "weight": 7
            },
            {
              "input": "name metric value",
              "weight": 0
            },
            {
              "input": "new",
              "weight": 6
            },
            {
              "input": "new method",
              "weight": 0
            },
            {
              "input": "new method full name",
              "weight": 33
            },
            {
              "input": "new method name",
              "weight": 0
            },
            {
              "input": "new task name",
              "weight": 0
            },
            {
              "input": "no match",
              "weight": 0
            },
            {
              "input": "no methods",
              "weight": 0
            },
            {
              "input": "no official implementation",
              "weight": 0
            },
            {
              "input": "normalized precision",
              "weight": 0
            },
            {
              "input": "object",
              "weight": 8
            },
            {
              "input": "official",
              "weight": 7
            },
            {
              "input": "official code",
              "weight": 0
            },
            {
              "input": "other datasets",
              "weight": 0
            },
            {
              "input": "other papers",
              "weight": 0
            },
            {
              "input": "our fast variant",
              "weight": 0
            },
            {
              "input": "our tracker",
              "weight": 0
            },
            {
              "input": "overlap",
              "weight": 6
            },
            {
              "input": "paper",
              "weight": 18
            },
            {
              "input": "paper authors",
              "weight": 0
            },
            {
              "input": "paper with code",
              "weight": 4
            },
            {
              "input": "papers",
              "weight": 0
            },
            {
              "input": "parameters",
              "weight": 0
            },
            {
              "input": "parent task",
              "weight": 0
            },
            {
              "input": "pdf",
              "weight": 0
            },
            {
              "input": "pdf cvpr",
              "weight": 0
            },
            {
              "input": "performance",
              "weight": 9
            },
            {
              "input": "playing games reasoning robots",
              "weight": 0
            },
            {
              "input": "portals",
              "weight": 0
            },
            {
              "input": "precision",
              "weight": 0
            },
            {
              "input": "previous issues",
              "weight": 0
            },
            {
              "input": "pycftracker",
              "weight": 14
            },
            {
              "input": "rank",
              "weight": 6
            },
            {
              "input": "recent year",
              "weight": 4
            },
            {
              "input": "recent years",
              "weight": 0
            },
            {
              "input": "reduced complexity",
              "weight": 0
            },
            {
              "input": "remove",
              "weight": 6
            },
            {
              "input": "remove mark official",
              "weight": 0
            },
            {
              "input": "research developments",
              "weight": 0
            },
            {
              "input": "resnet",
              "weight": 0
            },
            {
              "input": "result",
              "weight": 9
            },
            {
              "input": "results",
              "weight": 0
            },
            {
              "input": "samples",
              "weight": 0
            },
            {
              "input": "see",
              "weight": 18
            },
            {
              "input": "something",
              "weight": 9
            },
            {
              "input": "speech time series",
              "weight": 0
            },
            {
              "input": "submit",
              "weight": 4
            },
            {
              "input": "task",
              "weight": 9
            },
            {
              "input": "task dataset model",
              "weight": 0
            },
            {
              "input": "templecolor",
              "weight": 0
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 0
            },
            {
              "input": "the aim",
              "weight": 0
            },
            {
              "input": "the community",
              "weight": 9
            },
            {
              "input": "the core dcf formulation",
              "weight": 0
            },
            {
              "input": "the increasingly complex models",
              "weight": 0
            },
            {
              "input": "the key causes",
              "weight": 0
            },
            {
              "input": "the latest ranking",
              "weight": 0
            },
            {
              "input": "the latest trending ml papers",
              "weight": 0
            },
            {
              "input": "the list",
              "weight": 19
            },
            {
              "input": "the markdown",
              "weight": 0
            },
            {
              "input": "the metric",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 9
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the official implementation",
              "weight": 0
            },
            {
              "input": "the paper",
              "weight": 0
            },
            {
              "input": "the performance",
              "weight": 0
            },
            {
              "input": "the problems",
              "weight": 0
            },
            {
              "input": "the pursuit",
              "weight": 0
            },
            {
              "input": "the pwc newsletter",
              "weight": 0
            },
            {
              "input": "the risk",
              "weight": 0
            },
            {
              "input": "the top",
              "weight": 0
            },
            {
              "input": "the top ranked method",
              "weight": 0
            },
            {
              "input": "the training sample distribution",
              "weight": 0
            },
            {
              "input": "the vot2016 challenge",
              "weight": 0
            },
            {
              "input": "their characteristic speed",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "this paper",
              "weight": 37
            },
            {
              "input": "this work",
              "weight": 0
            },
            {
              "input": "track",
              "weight": 5
            },
            {
              "input": "tracking",
              "weight": 9
            },
            {
              "input": "tracking performance",
              "weight": 0
            },
            {
              "input": "trackingnet",
              "weight": 72
            },
            {
              "input": "trainable parameters",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 6
            },
            {
              "input": "value",
              "weight": 10
            },
            {
              "input": "visual",
              "weight": 8
            },
            {
              "input": "visual object tracking",
              "weight": 37
            },
            {
              "input": "visual object tracking trackingnet",
              "weight": 100
            },
            {
              "input": "vot2016",
              "weight": 18
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "🦡 badges",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/eco-efficient-convolution-operators-for",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.04089237931559597,
        "_index": "cache_index",
        "_id": "cacheid_e9ab0f1f5aed27e07689d931947df44d",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "p=eco-efficient-convolution-operators-for)`  \n  \n      Edit <b>Datasets</b>\n\n×\n\nAdd or remove <b>datasets</b>  introduced",
            "a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.010999604502106254,
        "see_also": [
          {
            "doc_id": "cacheid_d0c09c1109470dc858561adc9057a874",
            "source_doc_id": "entity:user/2035:en",
            "title": "pavel soriano"
          },
          {
            "doc_id": "cacheid_b1e3c224c3d220f3fb4bcfab717d2fbf",
            "source_doc_id": "entity:user/944:en",
            "title": "bin cheng"
          },
          {
            "doc_id": "cacheid_93f2c295f736584a1a437085b080f2b7",
            "source_doc_id": "entity:user/2046:en",
            "title": "ignas anicas"
          },
          {
            "doc_id": "cacheid_03d2b2cf96e0771385da65c378864ca4",
            "source_doc_id": "entity:user/2032:en",
            "title": "tempet franck"
          },
          {
            "doc_id": "cacheid_954cb58042f58d36afacb779b1939996",
            "source_doc_id": "https://towardsdatascience.com/whos-quitting-today-e1b0ca2fa90f",
            "title": "Who’s quitting today? - Towards Data Science\n\n"
          }
        ],
        "semantic_content": " . efficient - convolution - operators - for / visual - object - tracking - on -  vot201718 )  ]  ( https :  /  / paperswithcode . com / sota / visual - object - tracking - on -  vot201718 ? p = eco - efficient - convolution - operators - for )  `  Edit Datasets ×",
        "short_answer": [
          {
            "score": 0.1268194615840912,
            "start": 235,
            "end": 238,
            "answer": "eco"
          }
        ]
      },
      {
        "_source": {
          "title": "Large Margin Structured Convolution Operator for Thermal Infrared Object\nTracking | Papers With Code\n\n",
          "lemma_title": "large Margin Structured Convolution Operator Thermal Infrared object tracking Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n×\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n×\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n×\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n×\n\n       Mark the official implementation from paper authors\n\n×\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTask:*\n\n\\--------- Thermal Infrared Object Tracking Object Tracking\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n×\n\nAttached tasks:\n\n  * OBJECT TRACKING\n\n  * THERMAL INFRARED OBJECT TRACKING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n×\n\n  * OBJECT TRACKING \\- \n\n  * THERMAL INFRARED OBJECT TRACKING \\- \n\n      Add a method\n\n×\n\nAttached methods:\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n×\n\n  * CONVOLUTION \\- \n\n      Edit Datasets\n\n×\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nOTB\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  Large Margin Structured Convolution Operator for Thermal Infrared Object\nTracking\n\n19 Apr 2018 •  Peng Gao •  Yipeng Ma •  Ke Song •  Chao Li •  Fei Wang •  Liyi\nXiao\n\nCompared with visible object tracking, thermal infrared (TIR) object tracking\ncan track an arbitrary target in total darkness since it cannot be influenced\nby illumination variations. However, there are many unwanted attributes that\nconstrain the potentials of TIR tracking, such as the absence of visual color\npatterns and low resolutions... Recently, structured output support vector\nmachine (SOSVM) and discriminative correlation filter (DCF) have been\nsuccessfully applied to visible object tracking, respectively. Motivated by\nthese, in this paper, we propose a large margin structured convolution\noperator (LMSCO) to achieve efficient TIR object tracking. To improve the\ntracking performance, we employ the spatial regularization and implicit\ninterpolation to obtain continuous deep feature maps, including deep\nappearance features and deep motion features, of the TIR targets. Finally, a\ncollaborative optimization strategy is exploited to significantly update the\noperators. Our approach not only inherits the advantage of the strong\ndiscriminative capability of SOSVM but also achieves accurate and robust\ntracking with higher-dimensional features and more dense samples. To the best\nof our knowledge, we are the first to incorporate the advantages of DCF and\nSOSVM for TIR object tracking. Comprehensive evaluations on two thermal\ninfrared tracking benchmarks, i.e. VOT-TIR2015 and VOT-TIR2016, clearly\ndemonstrate that our LMSCO tracker achieves impressive results and outperforms\nmost state-of-the-art trackers in terms of accuracy and robustness with\nsufficient frame rate. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * OBJECT TRACKING\n\n  * THERMAL INFRARED OBJECT TRACKING\n\n  Datasets\n\n__Edit\n\n* * *\n\nOTB\n\n  Results from the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task Thermal infrared object tracking object tracking list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task × attach task object tracking thermal infrared object tracking add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task object track thermal infrared object track add method × attach method CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method CONVOLUTION edit dataset add remove dataset introduce paper add remove other dataset use paper OTB paper introduce new dataset _ _ add new dataset save large Margin Structured Convolution Operator Thermal Infrared object track 19 Apr 2018 • Peng Gao • Yipeng Ma • Ke Song • Chao Li • Fei Wang • Liyi Xiao compare visible object tracking thermal infrared TIR object tracking can track arbitrary target total darkness can influence illumination variation many unwanted attribute constrain potential TIR tracking such absence visual color pattern low resolution structured output support vector machine SOSVM discriminative correlation filter DCF apply visible object tracking motivate paper propose large margin structured convolution operator LMSCO achieve efficient tir object tracking improve tracking performance employ spatial regularization implicit interpolation obtain continuous deep feature map include deep appearance feature deep motion feature TIR target collaborative optimization strategy exploit update operator approach inherit advantage strong discriminative capability SOSVM achieve accurate robust tracking higher-dimensional feature dense sample good knowledge first incorporate advantage DCF SOSVM TIR object tracking comprehensive evaluation two thermal infrared tracking benchmark vot-tir2015 demonstrate LMSCO tracker achieve impressive result outperform most state-of-the-art tracker term accuracy robustness sufficient frame rate read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove object tracking thermal infrared object tracking dataset _ _ edit OTB result Paper _ _ edit add remove _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "OTB",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "19 Apr 2018",
              "property": "rel:instanceof",
              "value": "time"
            },
            {
              "subject": "Yipeng Ma",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Chao Li",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "target",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LMSCO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "SOSVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DCF",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "SOSVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LMSCO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "OTB",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "OTB   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "thermal infrared ( TIR ) object tracking",
              "property": "can track",
              "value": "arbitrary target",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "propose",
              "value": "large margin structured convolution operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "employ",
              "value": "spatial regularization",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "approach",
              "property": "only inherit",
              "value": "advantage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "LMSCO tracker",
              "property": "achieve",
              "value": "impressive result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "SOSVM",
              "property": "",
              "value": "structured output support vector machine",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "DCF",
              "property": "",
              "value": "discriminative correlation filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "LMSCO",
              "property": "",
              "value": "large margin structured convolution operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "natural language processing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing"
              ],
              "scores": [
                0.46620715921744704,
                0.26689736265689135,
                0.07743650116026402,
                0.09491055924445391,
                0.03204251895658672,
                0.025574536994099617,
                0.03158434713259339,
                0.005346990656107664
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2992564858868718,
                0.2734715398401022,
                0.17088750563561916,
                0.10217788256704807,
                0.0657714419066906,
                0.044797844253480434,
                0.030900694895535707,
                0.012736618518829346
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.21681328676640987,
                0.17593427514657378,
                0.29156131483614445,
                0.08003935497254133,
                0.0798218809068203,
                0.11271991208195686,
                0.016684461385011673,
                0.02642551902681589
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.34899511002004147,
                0.24460173211991787,
                0.1346044414676726,
                0.09161911252886057,
                0.04718174459412694,
                0.04921639338135719,
                0.06926068291068077,
                0.014520839788019657
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.29107854794710875,
                0.2798269158229232,
                0.12862608395516872,
                0.14010561536997557,
                0.0600071894004941,
                0.051788765005767345,
                0.014837314374744892,
                0.0337297385558486
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.42547685373574495,
                0.18877609260380268,
                0.21033914014697075,
                0.07824314571917057,
                0.04717948706820607,
                0.024138779379427433,
                0.009377461858093739,
                0.01646904065273702
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.33962524868547916,
                0.3413359420374036,
                0.10613560257479548,
                0.10202277451753616,
                0.051669031381607056,
                0.016176274046301842,
                0.024308661464601755,
                0.018726562149822712
              ]
            },
            {
              "labels": [
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.31671232357621193,
                0.1718666758388281,
                0.20990210678428411,
                0.132582179736346,
                0.06177494116127491,
                0.05985819362103939,
                0.015715988352894783,
                0.03158758766949177
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "deep learning",
                "natural language processing",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.26435764878988266,
                0.24477094877511263,
                0.20785103924572468,
                0.1301242783665657,
                0.05615650676190853,
                0.04774670861661434,
                0.015004276297986507,
                0.03398863971233368
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3275926997885108,
                0.19769076816737652,
                0.11441039852797985,
                0.17320844903588295,
                0.06521680764853954,
                0.05407215096056461,
                0.021942174062132835,
                0.045866611413657665
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9919988512992859,
              "spans": [
                {
                  "approx_length": 102,
                  "score": 0.9919988512992859,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.7814976453781128,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 163,
                  "score": 0.9961638450622559,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 222,
                  "score": 0.998384952545166,
                  "spanid": 5
                },
                {
                  "approx_length": 300,
                  "score": 0.984811007976532,
                  "spanid": 6
                },
                {
                  "approx_length": 209,
                  "score": 0.9992579817771912,
                  "spanid": 7
                },
                {
                  "approx_length": 194,
                  "score": 0.9873918890953064,
                  "spanid": 8
                },
                {
                  "approx_length": 207,
                  "score": 0.9968888163566589,
                  "spanid": 9
                },
                {
                  "approx_length": 262,
                  "score": 0.9988899827003479,
                  "spanid": 10
                },
                {
                  "approx_length": 307,
                  "score": 0.9757458567619324,
                  "spanid": 11
                },
                {
                  "approx_length": 356,
                  "score": 0.9982706904411316,
                  "spanid": 12
                },
                {
                  "approx_length": 208,
                  "score": 0.997342586517334,
                  "spanid": 17
                },
                {
                  "approx_length": 251,
                  "score": 0.9941085577011108,
                  "spanid": 18
                },
                {
                  "approx_length": 150,
                  "score": 0.956945538520813,
                  "spanid": 19
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.1975797235965729,
              "spans": [
                {
                  "approx_length": 338,
                  "score": 0.9628623127937317,
                  "spanid": 13
                },
                {
                  "approx_length": 403,
                  "score": 0.9990697503089905,
                  "spanid": 14
                },
                {
                  "approx_length": 329,
                  "score": 0.9979159235954285,
                  "spanid": 15
                },
                {
                  "approx_length": 281,
                  "score": 0.9917464852333069,
                  "spanid": 16
                }
              ]
            }
          ],
          "summary": [
            " Large Margin Structured Convolution Operator for Thermal Infrared Object Tracking . Thermal Inf",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Trends Report will be published on April 28, 2015",
            " Model name :  *  Metric name . Metric value :  Higher is better  ( for the metric )  Uses extra training data Data evaluated on Submit Add a new evaluation result row . Add a",
            " Not in the list ?  Create a new method . New method name  ( e . g .  Rectified Linear Unit) New method full name (e . g   ReLU)  New method",
            " Thermal infrared (TIR) object tracking can track an arbitrary target in total darkness since it cannot be influenced by illumination variations . However, there are many unwanted attributes that constrain the potentials of TIR tracking",
            " LMSCO tracker outperforms most state - of - the - art trackers in terms of accuracy and robustness with sufficient frame rate . Submit results from this paper to get GitHub badges and help the community compare"
          ],
          "text_suggester": [
            {
              "input": "large margin structured convolution operator",
              "weight": 100
            },
            {
              "input": "19 apr 2018",
              "weight": 9
            },
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a collaborative optimization strategy",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a large margin structured convolution operator",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 21
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 21
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 40
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "accurate and robust tracking",
              "weight": 1
            },
            {
              "input": "achieve",
              "weight": 17
            },
            {
              "input": "add a new category",
              "weight": 37
            },
            {
              "input": "add remove mark official",
              "weight": 59
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "an arbitrary target",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "chao li",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 19
            },
            {
              "input": "comprehensive evaluations",
              "weight": 1
            },
            {
              "input": "continuous deep feature maps",
              "weight": 1
            },
            {
              "input": "convolution",
              "weight": 28
            },
            {
              "input": "create",
              "weight": 11
            },
            {
              "input": "create a new account",
              "weight": 49
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 38
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 19
            },
            {
              "input": "deep",
              "weight": 13
            },
            {
              "input": "deep appearance features",
              "weight": 1
            },
            {
              "input": "deep motion features",
              "weight": 1
            },
            {
              "input": "discriminative correlation filter",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 96
            },
            {
              "input": "efficient tir object tracking",
              "weight": 1
            },
            {
              "input": "evaluation",
              "weight": 7
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feature",
              "weight": 12
            },
            {
              "input": "fei wang",
              "weight": 1
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "illumination variations",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 16
            },
            {
              "input": "implicit interpolation",
              "weight": 1
            },
            {
              "input": "impressive results",
              "weight": 1
            },
            {
              "input": "infrared",
              "weight": 16
            },
            {
              "input": "introduce",
              "weight": 16
            },
            {
              "input": "ke song",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "liyi xiao",
              "weight": 1
            },
            {
              "input": "lmsco",
              "weight": 1
            },
            {
              "input": "low resolutions",
              "weight": 1
            },
            {
              "input": "many unwanted attributes",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 38
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 16
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "more dense samples",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 13
            },
            {
              "input": "new",
              "weight": 13
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 86
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "object",
              "weight": 13
            },
            {
              "input": "official",
              "weight": 17
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "otb paper",
              "weight": 1
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "our approach",
              "weight": 1
            },
            {
              "input": "our knowledge",
              "weight": 1
            },
            {
              "input": "our lmsco tracker",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 19
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "paper with code",
              "weight": 9
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "peng gao",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 12
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 19
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 21
            },
            {
              "input": "sosvm",
              "weight": 1
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 7
            },
            {
              "input": "sufficient frame rate",
              "weight": 1
            },
            {
              "input": "task",
              "weight": 19
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the absence",
              "weight": 1
            },
            {
              "input": "the advantage",
              "weight": 1
            },
            {
              "input": "the advantages",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 21
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 40
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the operators",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the potentials",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the spatial regularization",
              "weight": 1
            },
            {
              "input": "the strong discriminative capability",
              "weight": 1
            },
            {
              "input": "the tir targets",
              "weight": 1
            },
            {
              "input": "the tracking performance",
              "weight": 1
            },
            {
              "input": "thermal",
              "weight": 14
            },
            {
              "input": "thermal infrared",
              "weight": 21
            },
            {
              "input": "this paper",
              "weight": 98
            },
            {
              "input": "tir",
              "weight": 10
            },
            {
              "input": "tir object tracking",
              "weight": 1
            },
            {
              "input": "tir tracking",
              "weight": 1
            },
            {
              "input": "total darkness",
              "weight": 1
            },
            {
              "input": "track",
              "weight": 10
            },
            {
              "input": "tracking",
              "weight": 38
            },
            {
              "input": "two",
              "weight": 9
            },
            {
              "input": "two thermal infrared tracking benchmarks",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 13
            },
            {
              "input": "visible object tracking",
              "weight": 21
            },
            {
              "input": "visual color patterns",
              "weight": 1
            },
            {
              "input": "yipeng ma",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/large-margin-structured-convolution-operator",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.04134196163749565,
        "_index": "cache_index",
        "_id": "cacheid_6986d07a786fea666df4bc7cdee327c8",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "×\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nOTB\n\nPaper introduces a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.006728214110208575,
        "see_also": [
          {
            "doc_id": "cacheid_12d7268c2503e85c5b6c297ff640ec19",
            "source_doc_id": "entity:user/1294:en",
            "title": "duarte folgado"
          },
          {
            "doc_id": "cacheid_e4ba97f091599a9204f023a01c39e5ae",
            "source_doc_id": "https://www.forbes.com/sites/peterhigh/2016/06/20/deep-learning-pioneer-geoff-hinton-helps-shape-googles-drive-to-put-ai-everywhere/",
            "title": "Deep Learning Pioneer Geoff Hinton Helps Shape Google's Drive To Put AI\nEverywhere\n\n"
          },
          {
            "doc_id": "cacheid_54fa5cc7ba08f4573a303fd1b5369c82",
            "source_doc_id": "https://www.forbes.com/sites/gilpress/2019/09/20/deep-learning-pioneer-yoshua-bengio-says-ai-is-not-magic-and-intel-ai-experts-explain-why-and-how/",
            "title": "Deep Learning Pioneer Yoshua Bengio Says AI Is Not Magic And Intel AI Experts\nExplain Why And How\n\n"
          },
          {
            "doc_id": "cacheid_32295263c56d8c6a0158a19114d87953",
            "source_doc_id": "entity:user/1431:en",
            "title": "petra kralj novak"
          },
          {
            "doc_id": "cacheid_88798d7ad6d513b258df262f4dd1cbb9",
            "source_doc_id": "entity:user/257:en",
            "title": "han tran"
          }
        ],
        "semantic_content": " . yet .  Submit your code now Tasks  _  _ Edit Add Remove  *   *   *   *  OBJECT TRACKING  *  THERMAL INFRARED OBJECT TRACKING Datasets  _  _ Edit  *   *   *  OTB Results from the Paper  _  _ Edit Add Remove  *",
        "short_answer": [
          {
            "score": 0.03676368668675423,
            "start": 186,
            "end": 218,
            "answer": "Paper  _   _  Edit Add Remove  *"
          }
        ]
      },
      {
        "_source": {
          "title": "Fuzzy Systems from Data. Generating human-readable knowledge… | by Carmel Gafa\n| Jun, 2020 | Towards Data Science\n\n",
          "lemma_title": "Fuzzy Systems Data generate human-readable knowledge Carmel Gafa Jun 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n·\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Fuzzy Systems from Data\n\n   Generating human-readable knowledge from sensor information\n\nCarmel Gafa\n\nJun 17, 2020·10 min read\n\nImage from https://www.pexels.com/\n\n  Introduction\n\nFuzzy-Logic theory has introduced a framework whereby human knowledge can be\nformalized and used by machines in a wide variety of applications, ranging\nfrom cameras to trains. The basic ideas that we discussed in the earlier posts\nwere concerned with only this aspect with regards to the use of Fuzzy Logic-\nbased systems; that is the application of human experience into machine-driven\napplications. While there are numerous instances where such techniques are\nrelevant; there are also applications where it is challenging for a human user\nto articulate the knowledge that they hold. Such applications include driving\na car or recognizing images. Machine learning techniques provide an excellent\nplatform in such circumstances, where sets of inputs and corresponding outputs\nare available, building a model that provides the transformation from the\ninput data to the outputs using the available data.\n\nIn this post, we will discuss an algorithm that constructs a Fuzzy System from\ndata that was presented by Professor Li-Xin Wang and Professor Jerry Mendel.\nOne exciting aspect of this and similar techniques is the ability to obtain\nknowledge that can be easily understood by humans in the form of fuzzy sets\nand rules from data.\n\n  Procedure\n\nThe objective of this exercise is, as we have explained in the introduction,\ngiven a set of input/output combinations, we will generate a ruleset that\ndetermines the mapping between the inputs and outputs. In this discussion, we\nwill consider a two-input, single-output system. Extending this procedure for\nmore complex systems should be a straightforward task to the reader.\n\n   Step 1 — Divide the input and output spaces into fuzzy regions.\n\nWe start by assigning some fuzzy sets to each input and output space. Wang and\nMendel specified an odd number of evenly spaced fuzzy regions, determined by\n 2N+1  where  N  is an integer. As we will see later on, the value of\n N  affects the performance of our models and can result in\nunder/overfitting at times.  N  is, therefore, one of the hyperparameters\nthat we will use to tweak this system’s performance.\n\nDivisions of an input space into fuzzy regions where N=2\n\n   Step 2 — Generate Fuzzy Rules from data.\n\nWe can use our input and output spaces, together with the fuzzy regions that\nwe have just defined, and the dataset for the application to generate fuzzy\nrules in the form of:\n\n    \n    \n      If  {antecedent clauses}  then  {consequent clauses}\n\nWe start by determining the degree of membership of each sample in the dataset\nto the different fuzzy regions in that space. If, as an example, we consider a\nsample depicted below:\n\nCorres\n\nwe obtain the following degrees of membership values.\n\nDegree-of-membership values for sample-1\n\nWe then assign the region having the maximum degree of membership of to the\nspaces, which is indicated by the highlighted elements in the above table so\nthat it is possible to obtain a rule:\n\n    \n    \n    sample 1 =>  If  x1 is b1 and x2 is s1  then  y is ce => Rule 1\n\nThe next illustration shows a second example, together with the degree of\nmembership results that it generates.\n\nThis sample will, therefore, produce the following rule:\n\n    \n    \n    sample 2=>  If  x1 is b1  and  x2 is ce  then  y is b1 => Rule 2\n\n   Step 3 — Assign a degree to each rule.\n\nStep 2 is very straightforward to implement, yet it suffers from one problem;\nit will generate conflicting rules, that is, rules that have the same\nantecedent clauses but different consequent clauses. Wang and Medel solved\nthis issue by assigning a degree to each rule, using a product strategy such\nthat the degree is the product of all the degree-of-membership values from\nboth antecedent and consequent spaces forming the rule. We retain the rule\nhaving the most significant degree, while we discard the rules having the same\nantecedent but a having a smaller degree.\n\nIf we refer to the previous example, the degree of Rule 1 will equate to:\n\nand for Rule 2 we obtain:\n\nWe notice that this procedure reduces the number of rules radically in\npractice.\n\nIt is also possible to fuse human knowledge to the knowledge obtained from\ndata by introducing a human element to the rule degree, that has high\napplicability in practice, as human supervision can assess the reliability of\ndata, and hence the rules generated from it directly. In the cases where human\nintervention is not desirable, this factor is set to 1 for all rules. Rule 1\ncan be hence defined as follows;\n\n   Step 4 — Create a Combined Fuzzy Rule Base\n\nThe notion of the Combined Fuzzy Rule Base was examined in a previous post. It\nis a matrix that holds the fuzzy rule-base information for a system. A\nCombined Fuzzy Rule Base can contain the rules that are generated numerically\nusing the procedure described above, but also rules that are obtained from\nhuman experience.\n\nCombined Fuzzy Rule Base for this system. Note Rule 1 and Rule 2.\n\n   Step 5 — Determine a mapping based on the Combined Fuzzy Rule Base.\n\nThe final step in this procedure explains the defuzzification strategy used to\ndetermine the value of  y,  given (x1, x2). Wang and Mendel suggest a\ndifferent approach to the max-min computation used by Mamdani. We have to\nconsider that, in practical applications, the number of input spaces will be\nsignificant when compared to the typical control application where Fuzzy Logic\nis typically used. Besides, this procedure will generate a large number of\nrules, and therefore it would be impractical to compute an output using the\n‘normal’ approach.\n\nFor a given input combination (x1, x2), we combine the antecedents of a given\nrule to determine the degree of output control corresponding to (x1, x2) using\nthe product operator. If\n\nis the degree of output control for the ith Rule,\n\nTherefore for Rule 1\n\n    \n    \n      If  x1 is b1 and x2 is s1  then  y is ce\n\nWe now define the centre of a fuzzy region as the point that has the smallest\nabsolute value among all points at which the membership function for this\nregion is equal to 1 as illustrated below;\n\nCenter of fuzzy region\n\nThe value of y for a given (x1, x2) combination is thus\n\nwhere  K  is the number of rules.\n\n  Testing\n\nA (very dirty) implementation of the above algorithm was developed in Python\nto test it with real datasets. The code and data used are available in Github.\nSome considerations on this system include.\n\n  * The fuzzy system is generated from the test data directly.\n  * The sets were created using the recommendation in the original paper, that is evenly spaced. It is, however, interesting to see the effects of changing this method. One idea is to have sets created around the dataset mean with a spread relatable to the standard deviation — this might be investigated in a future post.\n  * The system created does not cater for categorical data implicitly, and this is a future improvement that can affect the performance of the system considerably in real-life scenarios.\n\n   Testing metrics\n\nWe will use the coefficient of determination (R-Squared) to assess the\nperformance of this system and to tune the hyperparameter that was identified,\nthe number of fuzzy sets generated.\n\nTo explain R-Squared, we must first define the sum of squares total and the\nsum of squares residual.\n\nThe  sum of squares total  is the sum of the squared difference between the\ndependent variable (y) and the mean of the observed dependent variable.\n\nThe sum of squares residual is the sum of the squared difference between the\nactual and estimated value of the dependent variable.\n\nR-Squared can be then calculated as\n\nwe notice that R-Squared will have a value between 0 and 1, the larger, the\nbetter. If R-Squared =1, then there is no error and the estimated values will\nbe equal to the actual values.\n\n  Case Study 1 — Noisy Sensor\n\nWe begin testing the procedure with a straightforward application; a single-\ninput, single-output system that represents a hypothetical sensor that has an\nexponential response. To complicate things a little, we have added some noise\nto the sensor data as can be shown in the image below:\n\nWe start by examining the various outcomes for the different values of  N \nfor  x  and  y . The following illustrations formed the results that were\nobtained during the search for the best values.\n\nThe best response is obtained when setting the value of N_x to 4 and N_y to 3,\nattaining an R-squared value of 0.985. The rules generated by the system are\nof particular interest as they can explain how the system is working in a way\nthat can be easily understood;\n\n    \n    \n    If x is s4 then Y is s3  \n    If x is s3 then Y is s3  \n    If x is s2 then Y is s3  \n    If x is s1 then Y is s3  \n    If x is ce then Y is s2  \n    If x is b1 then Y is s2  \n    If x is b2 then Y is s1  \n    If x is b3 then Y is ce  \n    If x is b4 then Y is b3\n\nWe notice that the characteristics of a system displaying exponential\nproperties are clearly explained. The output value remains the smallest\npossible for all small values of the input, increasing very rapidly as the\nvalues of the input increase further.\n\nThe system is also susceptible to overfitting as can be noticed for the values\nlike N_x=5 and N_y=2.\n\n  Case Study 2 — Temperature\n\nFor a second test, we have used the Weather in Szeged 2006–2016 available at\nKaggle. The dataset has over 96,000 training examples that consist of 12\nfeatures.\n\n    \n    \n    Formatted Date               object  \n    Summary                      object  \n    Precip Type                  object  \n    Temperature (C)             float64  \n    Apparent Temperature (C)    float64  \n    Humidity                    float64  \n    Wind Speed (km/h)           float64  \n    Wind Bearing (degrees)      float64  \n    Visibility (km)             float64  \n    Loud Cover                  float64  \n    Pressure (millibars)        float64  \n    Daily Summary                object\n\nFor this exercise, we will be discarding most of these features and assess if\nwe can predict the temperature given the month and humidity.\n\nUpon examining the data, we notice that the average temperature varied between\n1 and 23 degrees Celcius with a variability of about 20 degrees per month.\n\nThe average humidity varies between 0.63 and 0.85, but we also notice that it\nis always possible to reach 100%, irrelevant of the month.\n\nThe best Fuzzy system that was tested consisted of 3 fuzzy spaces (  N  =1)\nfor the input variables and nine fuzzy spaces (  N  =4) for the temperature.\nThe system generated the nine rules depicted in the Fuzzy Distribution Map\nbelow and attained an R-Squared value of 0.75, using a test sample of 20%.\n\n  Conclusion\n\nThe system described above produces human-readable rules from data that can\nhelp us gain insights on complex systems. Below are several observations and\nideas for future work:\n\n  1. The system needs a considerable dataset that needs to cover all possible rules that can be generated. Therefore larger datasets are required as the number of features increase, as the number of rules required will grow exponentially.\n  2. It might be possible to generate missing rules by examining the neighbouring ones. If an absent rule can be illustrated in a Combined Fuzzy Rule Base surrounded by the same output space, probably, the rule would then belong to the same space. This idea will be tested in the future.\n  3. The distribution of the fuzzy spaces affects the performance of the system, although preprocessing like standardization and normalization help to limit the effect of data distribution on the system.\n  4. The effect of handcrafted rules has to be investigated. It is interesting to verify if human experience can indeed augment the performance of a machine-generated system.\n  5. It is also interesting to examine the data responsible for a rule and use the information to determine why a test sample yields a significant error.\n\n   Carmel Gafa\n\nPassionate about engineering, AI and their impact on society- carmelgafa.com\n\nFollow\n\n80\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don’t already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n80\n\n80\n\n  * Fuzzy\n  * Machine Learning\n  * Soft Computing\n  * Linear Regression\n  * Towards Data Science\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Import all Python libraries in one line of code\n\nSatyam Kumar in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app Fuzzy Systems Data generate human-readable knowledge sensor information Carmel Gafa Jun 17 2020·10 min read image https://www.pexels.com/ introduction fuzzy-logic theory introduce framework human knowledge can formalize use machine wide variety application range camera train basic idea discuss early post concern aspect regard use Fuzzy Logic- base system application human experience machine-driven application numerous instance such technique relevant application challenging human user articulate knowledge hold such application include drive car recognize image Machine learning technique provide excellent platform such circumstance set input correspond output available build model provide transformation input datum output use available datum post will discuss algorithm construct Fuzzy System datum present Professor Li-Xin Wang Professor Jerry Mendel one exciting aspect similar technique ability obtain knowledge can understand human form fuzzy set rule datum procedure objective exercise explain introduction give set input output combination will generate ruleset determine mapping input output discussion will consider two-input single-output system extend procedure more complex system should straightforward task reader step 1 divide input output space fuzzy region start assign fuzzy set input output space Wang Mendel specify odd number spaced fuzzy region determine 2n+1 N integer will see value n affect performance model can result overfitte time n one hyperparameter will use tweak system performance division input space fuzzy region N=2 step 2 generate fuzzy Rules datum can use input output space fuzzy region define dataset application generate fuzzy rule form antecedent clause consequent clause start determine degree membership sample dataset different fuzzy region space example consider sample depict corre obtain follow degree membership value degree-of-membership value sample-1 assign region have maximum degree membership space indicate highlight element above table possible obtain rule sample 1 x1 b1 x2 s1 y ce = rule 1 next illustration show second example degree membership result generate sample will produce follow rule sample 2= x1 b1 x2 ce y b1 = rule 2 step 3 assign degree rule step 2 straightforward implement suffer one problem will generate conflicting rule rule same antecedent clause different consequent clause Wang Medel solve issue assign degree rule use product strategy such degree product degree-of-membership value antecedent consequent space form rule retain rule have significant degree discard rule have same antecedent have small degree refer previous example degree Rule 1 will equate Rule 2 obtain notice procedure reduce number rule practice possible fuse human knowledge knowledge obtain datum introduce human element rule degree high applicability practice human supervision can assess reliability datum rule generate case human intervention desirable factor set 1 rule rule 1 can define follow Step 4 create Combined Fuzzy rule Base notion Combined Fuzzy Rule Base examine previous post matrix hold fuzzy rule-base information system Combined Fuzzy Rule Base can contain rule generate use procedure describe rule obtain human experience Combined Fuzzy Rule Base system note rule 1 Rule 2 step 5 determine mapping base Combined Fuzzy Rule Base final step procedure explain defuzzification strategy use determine value y give x1 x2 Wang Mendel suggest different approach max-min computation use Mamdani consider practical application number input space will significant compare typical control application Fuzzy Logic use procedure will generate large number rule would impractical compute output use normal approach give input combination x1 x2 combine antecedent give rule determine degree output control correspond x1 x2 use product operator degree output control ith Rule Rule 1 x1 b1 x2 s1 y ce define centre fuzzy region the point small absolute value point membership function region equal 1 illustrate Center fuzzy region value y give x1 x2 combination K number rule testing A dirty implementation above algorithm develop Python test real dataset code datum use available Github consideration system include fuzzy system generate test datum set create use recommendation original paper space interesting see effect change method one idea set create dataset mean spread relatable standard deviation may investigate future post system create cater categorical datum future improvement can affect performance system real-life scenario testing metric will use coefficient determination r-squared assess performance system tune hyperparameter identify number fuzzy set generate explain r-squared must define sum square total sum square residual sum square total sum squared difference dependent variable y mean observe dependent variable sum square residual sum squared difference actual estimate value dependent variable R-Squared can calculate notice R-Squared will value 0 1 large well 1 error estimate value will equal actual value case study 1 Noisy Sensor begin test procedure straightforward application single- input single-output system represent hypothetical sensor exponential response complicate thing little add noise sensor datum can show image start examine various outcome different value n y following illustration form result obtain search good value good response obtain set value n_x 4 n_y 3 attain r-square value 0.985 rule generate system particular interest can explain system work way can understand x s4 Y s3 x s3 Y s3 x s2 Y s3 x s1 Y s3 x ce Y s2 x b1 Y s2 x b2 Y s1 x b3 Y ce x b4 Y b3 notice characteristic system display exponential property explain output value remain small possible small value input increase value input increase system susceptible overfitte can notice value N_x=5 N_y=2 case study 2 temperature second test use Weather Szeged 2006–2016 available Kaggle dataset 96 000 training example consist 12 feature Formatted date object summary object Precip Type object temperature C float64 apparent temperature c float64 Humidity float64 wind speed km h wind bearing degree float64 visibility km Loud Cover float64 pressure millibars float64 Daily Summary object exercise will discard most feature assess can predict temperature give month humidity examine datum notice average temperature vary 1 23 degree celcius variability 20 degree month average humidity vary 0.63 0.85 notice possible reach 100 irrelevant month good fuzzy system test consist 3 fuzzy space N 1 input variable nine fuzzy space N 4 temperature system generate nine rule depict Fuzzy Distribution Map attain r-squared value 0.75 use test sample 20 conclusion system describe produce human-readable rule datum can help gain insight complex system several observation idea future work 1 system need considerable dataset need cover possible rule can generate large dataset require number feature increase number rule require will grow 2 may possible generate miss rule examine neighbour one absent rule can illustrate Combined Fuzzy Rule Base surround same output space rule would belong same space idea will test future 3 distribution fuzzy space affect performance system preprocesse standardization normalization help limit effect datum distribution system 4 effect handcraft rule investigate interesting verify human experience can augment performance machine-generated system 5 interesting examine datum responsible rule use information determine test sample yield significant error Carmel Gafa passionate engineering AI impact carmelgafa.com follow 80 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 80 80 fuzzy Machine Learning soft computing Linear regression datum Science Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Import Python library one line code Satyam Kumar Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Fuzzy Systems",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Carmel Gafa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jun,",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Fuzzy Systems",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Carmel Gafa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jun 17",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2020·10 min",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "https://www.pexels.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Logic-",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Professor",
              "property": "rel:instanceof",
              "value": "jobtitle"
            },
            {
              "subject": "Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Professor",
              "property": "rel:instanceof",
              "value": "jobtitle"
            },
            {
              "subject": "Jerry Mendel",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mendel",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "b1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "b1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "b1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Medel",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mendel",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mamdani",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "combination",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "b1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "combination",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Case Study 1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Noisy Sensor",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "N_x to 4",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "R-squared",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s2",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s2",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "b1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s2",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "s1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Case Study 2",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Kaggle",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the month",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "between 1 and 23 degrees Celcius",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "about 20 degrees",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "the month",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the Fuzzy Distribution Map",
              "property": "rel:instanceof",
              "value": "facility"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Carmel Gafa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "carmelgafa.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Data     ",
              "property": "generate",
              "value": "human-readable knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Data     ",
              "property": "generate",
              "value": "knowledge from sensor information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "2020·10 min",
              "property": "read",
              "value": "image from https://www.pexels.com/",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "fuzzy-logic theory",
              "property": "introduce",
              "value": "framework",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "discuss in",
              "value": "early post",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "basic idea",
              "property": "concern with",
              "value": "this aspect",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "basic idea",
              "property": "concern with",
              "value": "aspect with regard",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Logic-",
              "property": "base",
              "value": "system",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "human user",
              "property": "articulate",
              "value": "knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "such application",
              "property": "include drive",
              "value": "car",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Machine learning technique",
              "property": "provide",
              "value": "excellent platform",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the output",
              "property": "use",
              "value": "available datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will discuss",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will generate",
              "value": "ruleset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will consider",
              "value": "two-input , single-output system",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Wang",
              "property": "specify",
              "value": "odd number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "value",
              "property": "affect",
              "value": "performance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "N=2      step",
              "property": "generate",
              "value": "fuzzy Rules",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "input and output space",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "consider",
              "value": "sample",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "obtain",
              "value": "degree of membership value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "then assign",
              "value": "region",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "region",
              "property": "have",
              "value": "maximum degree",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "region",
              "property": "have",
              "value": "degree of membership",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "next illustration",
              "property": "show",
              "value": "second example",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "sample will",
              "property": "produce",
              "value": "rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "suffer from",
              "value": "one problem",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will generate",
              "value": "conflicting rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will generate",
              "value": "is , rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Wang",
              "property": "solve",
              "value": "issue",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "consequent space",
              "property": "form",
              "value": "rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "retain",
              "value": "rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "rule",
              "property": "have",
              "value": "most significant degree",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "discard",
              "value": "rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "rule",
              "property": "have",
              "value": "same antecedent",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "refer to",
              "value": "previous example",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "procedure",
              "property": "reduce",
              "value": "number of rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the knowledge",
              "property": "obtain from",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "human supervision",
              "property": "can assess",
              "value": "reliability of datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Step",
              "property": "create",
              "value": "Combined Fuzzy rule Base",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "notion",
              "property": "examine in",
              "value": "previous post",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Combined Fuzzy Rule Base",
              "property": "can contain",
              "value": "rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "mapping",
              "property": "base on",
              "value": "Combined Fuzzy Rule Base",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "final step",
              "property": "explain",
              "value": "defuzzification strategy",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Wang",
              "property": "suggest",
              "value": "different approach",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "max-min computation",
              "property": "use by",
              "value": "Mamdani",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "procedure",
              "property": "will generate",
              "value": "large number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "procedure",
              "property": "will generate",
              "value": "number of rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "output",
              "property": "use",
              "value": "' normal ' approach",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "combine",
              "value": "antecedent",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "degree of output control",
              "property": "correspond to",
              "value": "x1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "now define",
              "value": "centre",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "A ( very dirty ) implementation",
              "property": "develop in",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "fuzzy system",
              "property": "generate from",
              "value": "the test datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "set",
              "property": "create use",
              "value": "recommendation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "set",
              "property": "create around",
              "value": "the dataset mean",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "cater for",
              "value": "categorical datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "coefficient of determination",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "r-squared",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "must first define",
              "value": "sum of square",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin test",
              "value": "procedure",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "following illustration",
              "property": "form",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "good response",
              "property": "obtain when set",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "rule",
              "property": "generate by",
              "value": "the system",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "work in",
              "value": "a way",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "a system",
              "property": "display",
              "value": "exponential property",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can predict",
              "value": "temperature",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "temperature",
              "property": "give",
              "value": "month",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "average temperature",
              "property": "vary between",
              "value": "1 and 23 degree celcius",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "good fuzzy system",
              "property": "test consist of",
              "value": "3 fuzzy space",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "generate",
              "value": "nine rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "nine rule",
              "property": "depict in",
              "value": "Fuzzy Distribution Map",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "produce",
              "value": "human-readable rule",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "produce",
              "value": "rule from datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "gain",
              "value": "insight",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "system",
              "property": "need",
              "value": "considerable dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "absent rule",
              "property": "illustrate in",
              "value": "Combined Fuzzy Rule Base",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Combined Fuzzy Rule Base",
              "property": "surround by",
              "value": "same output space",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "idea",
              "property": "test in",
              "value": "the future",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "distribution",
              "property": "affect",
              "value": "performance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "human experience",
              "property": "can indeed augment",
              "value": "performance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "reinforcement learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.33303493820130825,
                0.1250999802723527,
                0.20859431475400925,
                0.19345605932176113,
                0.055558000691235065,
                0.017912382259964943,
                0.04212568420916796,
                0.024218600243330002
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.33632677234709263,
                0.1469522388651967,
                0.18889329442754388,
                0.10755300242453814,
                0.0913503859192133,
                0.06753226835280657,
                0.04479390662163496,
                0.016598058864474297
              ]
            },
            {
              "labels": [
                "machine learning",
                "computer vision",
                "deep learning",
                "internet of things",
                "natural language processing",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing"
              ],
              "scores": [
                0.8655862936284393,
                0.03207881050184369,
                0.045466532465070486,
                0.018268193351104856,
                0.01688961172476411,
                0.00885875930543989,
                0.010655303252860904,
                0.00219658762216568
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "neuromorphic computing",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.3219422232359648,
                0.17168860137462616,
                0.23214726708829403,
                0.02935592271387577,
                0.053932979702949524,
                0.08835401944816113,
                0.05833893269300461,
                0.044239954091608524
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.23801394645124674,
                0.27854480780661106,
                0.16438633017241955,
                0.07216988503932953,
                0.09928426891565323,
                0.07172559760510921,
                0.02247108332812786,
                0.05340413190424442
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.23388890735805035,
                0.11844378057867289,
                0.23441152460873127,
                0.20399953611195087,
                0.06223192624747753,
                0.08757936581969261,
                0.018220681697130203,
                0.04122430458664894
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.2574327252805233,
                0.2379961498081684,
                0.09322531055659056,
                0.1690614651888609,
                0.12002664431929588,
                0.05981007032096386,
                0.02118178829550743,
                0.04126599617302418
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.341565758921206,
                0.18005397729575634,
                0.13620742037892342,
                0.1388310445472598,
                0.06959053128957748,
                0.09357678145170212,
                0.013236862607300282,
                0.02693757601082325
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.28452249336987734,
                0.19398116134107113,
                0.19970559980720282,
                0.15094946324825287,
                0.07678279839456081,
                0.04857472889125347,
                0.014648432843387127,
                0.030835346318781376
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.31564904749393463,
                0.21905382722616196,
                0.18179352767765522,
                0.030780376866459846,
                0.09596558846533298,
                0.06011679582297802,
                0.04686536453664303,
                0.049775331281125546
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2256304007023573,
                0.28860596753656864,
                0.13755697198212147,
                0.09028206020593643,
                0.09599129110574722,
                0.09754771925508976,
                0.022300003096461296,
                0.0420856149867177
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.21945436019450426,
                0.2759467577561736,
                0.20825269632041454,
                0.06308135390281677,
                0.10385482013225555,
                0.05776093900203705,
                0.025120548903942108,
                0.046528534963727
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.31945030111819506,
                0.1753085684031248,
                0.20419367216527462,
                0.12067570351064205,
                0.06458086241036654,
                0.05212115775793791,
                0.049296457320451736,
                0.014373152516782284
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.18154300283640623,
                0.14106863923370838,
                0.24628592655062675,
                0.2055211365222931,
                0.06075129471719265,
                0.08545495197176933,
                0.026287073269486427,
                0.05308797676116228
              ]
            },
            {
              "labels": [
                "machine learning",
                "internet of things",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.22212532348930836,
                0.11789556499570608,
                0.2869699732400477,
                0.18836800567805767,
                0.0895906388759613,
                0.0514548746868968,
                0.018245015293359756,
                0.025350527837872505
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.25891774520277977,
                0.2399220555089414,
                0.16168627608567476,
                0.09849269222468138,
                0.11710737086832523,
                0.0623893141746521,
                0.018453318625688553,
                0.043031200766563416
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.2504132706671953,
                0.24774673487991095,
                0.23758595436811447,
                0.11571591719985008,
                0.05447770096361637,
                0.023798460140824318,
                0.034493097104132175,
                0.03576888237148523
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.3877875655889511,
                0.2125397389754653,
                0.20463883294723928,
                0.07886215206235647,
                0.06621483061462641,
                0.01033815648406744,
                0.02217536559328437,
                0.017443387303501368
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.2868712544441223,
                0.2717566564679146,
                0.17865692730993032,
                0.06787482555955648,
                0.10641818773001432,
                0.021532626822590828,
                0.0390746733173728,
                0.02781479898840189
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "natural language processing",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2893031481653452,
                0.20083514600992203,
                0.0945384195074439,
                0.12340444698929787,
                0.1507838424295187,
                0.0698448782786727,
                0.05341066047549248,
                0.01787962205708027
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.23346820333972573,
                0.22850098740309477,
                0.21271045319736004,
                0.13324848841875792,
                0.07392395567148924,
                0.06011894624680281,
                0.0443977527320385,
                0.01363125629723072
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.6366811245679855,
                0.09389063343405724,
                0.10936870286241174,
                0.042697424069046974,
                0.0529946144670248,
                0.027487287763506174,
                0.011352901346981525,
                0.025527389254420996
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "deep learning",
                "natural language processing",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.38326037814840674,
                0.227409228682518,
                0.07488305028527975,
                0.1584924622438848,
                0.08147400431334972,
                0.03998097125440836,
                0.01258113607764244,
                0.021918775513768196
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.31216725148260593,
                0.2421857099980116,
                0.20226544979959726,
                0.1007277350872755,
                0.05363733321428299,
                0.05077451653778553,
                0.010340907610952854,
                0.02790110372006893
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9953054189682007,
              "spans": [
                {
                  "approx_length": 125,
                  "score": 0.9953054189682007,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.5788753509521485,
              "spans": [
                {
                  "approx_length": 345,
                  "score": 0.9751278162002563,
                  "spanid": 0
                },
                {
                  "approx_length": 320,
                  "score": 0.9787253141403198,
                  "spanid": 5
                },
                {
                  "approx_length": 306,
                  "score": 0.9965574741363525,
                  "spanid": 6
                },
                {
                  "approx_length": 295,
                  "score": 0.9080495238304138,
                  "spanid": 7
                },
                {
                  "approx_length": 295,
                  "score": 0.9870390295982361,
                  "spanid": 8
                },
                {
                  "approx_length": 248,
                  "score": 0.9864674210548401,
                  "spanid": 11
                },
                {
                  "approx_length": 331,
                  "score": 0.9862886071205139,
                  "spanid": 12
                },
                {
                  "approx_length": 304,
                  "score": 0.9991039037704468,
                  "spanid": 13
                },
                {
                  "approx_length": 296,
                  "score": 0.9894442558288574,
                  "spanid": 15
                },
                {
                  "approx_length": 338,
                  "score": 0.9778383374214172,
                  "spanid": 18
                },
                {
                  "approx_length": 278,
                  "score": 0.98850017786026,
                  "spanid": 19
                },
                {
                  "approx_length": 296,
                  "score": 0.9981458783149719,
                  "spanid": 20
                },
                {
                  "approx_length": 295,
                  "score": 0.996148407459259,
                  "spanid": 21
                },
                {
                  "approx_length": 303,
                  "score": 0.9918463826179504,
                  "spanid": 24
                },
                {
                  "approx_length": 308,
                  "score": 0.9943338632583618,
                  "spanid": 25
                },
                {
                  "approx_length": 310,
                  "score": 0.967214047908783,
                  "spanid": 26
                },
                {
                  "approx_length": 311,
                  "score": 0.9914194345474243,
                  "spanid": 27
                },
                {
                  "approx_length": 191,
                  "score": 0.9425109624862671,
                  "spanid": 29
                },
                {
                  "approx_length": 349,
                  "score": 0.9585809707641602,
                  "spanid": 30
                },
                {
                  "approx_length": 293,
                  "score": 0.9167052507400513,
                  "spanid": 31
                },
                {
                  "approx_length": 292,
                  "score": 0.9991700649261475,
                  "spanid": 32
                },
                {
                  "approx_length": 318,
                  "score": 0.9724752902984619,
                  "spanid": 33
                },
                {
                  "approx_length": 324,
                  "score": 0.9989384412765503,
                  "spanid": 36
                },
                {
                  "approx_length": 311,
                  "score": 0.9874910116195679,
                  "spanid": 37
                },
                {
                  "approx_length": 309,
                  "score": 0.9475550651550293,
                  "spanid": 41
                },
                {
                  "approx_length": 359,
                  "score": 0.9784896373748779,
                  "spanid": 42
                },
                {
                  "approx_length": 88,
                  "score": 0.6352242231369019,
                  "spanid": 44
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.35869320498572455,
              "spans": [
                {
                  "approx_length": 338,
                  "score": 0.9925923943519592,
                  "spanid": 1
                },
                {
                  "approx_length": 389,
                  "score": 0.9983843564987183,
                  "spanid": 2
                },
                {
                  "approx_length": 342,
                  "score": 0.9811654090881348,
                  "spanid": 3
                },
                {
                  "approx_length": 326,
                  "score": 0.9996051788330078,
                  "spanid": 4
                },
                {
                  "approx_length": 325,
                  "score": 0.5790755748748779,
                  "spanid": 9
                },
                {
                  "approx_length": 256,
                  "score": 0.9970179200172424,
                  "spanid": 10
                },
                {
                  "approx_length": 334,
                  "score": 0.9978597164154053,
                  "spanid": 14
                },
                {
                  "approx_length": 319,
                  "score": 0.9188109040260315,
                  "spanid": 16
                },
                {
                  "approx_length": 292,
                  "score": 0.6906756162643433,
                  "spanid": 17
                },
                {
                  "approx_length": 320,
                  "score": 0.7656355500221252,
                  "spanid": 22
                },
                {
                  "approx_length": 327,
                  "score": 0.9576177597045898,
                  "spanid": 23
                },
                {
                  "approx_length": 277,
                  "score": 0.9936684966087341,
                  "spanid": 28
                },
                {
                  "approx_length": 249,
                  "score": 0.5286922454833984,
                  "spanid": 34
                },
                {
                  "approx_length": 327,
                  "score": 0.9729748964309692,
                  "spanid": 35
                },
                {
                  "approx_length": 335,
                  "score": 0.9933121204376221,
                  "spanid": 38
                },
                {
                  "approx_length": 347,
                  "score": 0.999284029006958,
                  "spanid": 39
                },
                {
                  "approx_length": 304,
                  "score": 0.7806257605552673,
                  "spanid": 40
                },
                {
                  "approx_length": 386,
                  "score": 0.9941962957382202,
                  "spanid": 43
                }
              ]
            }
          ],
          "summary": [
            " Fuzzy Systems from Data .  Generating human - readable knowledge… Generating",
            " Fuzzy Logic theory has introduced a framework whereby human knowledge can be formalized and used by machines in a wide variety of applications . Machine learning techniques provide an excellent platform in such circumstances . In this post we will discuss an algorithm",
            " The objective of this exercise is given a set of input / output combinations . We will generate a ruleset that determines the mapping between the inputs and outputs . Extending this procedure for more complex systems should be a straightforward task to the",
            " We start by determining the degree of membership of each sample in the dataset to the different fuzzy regions in that space . We then assign the region having the maximum degree of . membership of to the regions . The next illustration shows a second",
            " Wang and Medel solved this issue by assigning a degree to each rule using a product strategy such that the degree is the product of all the degree - of - membership values from both antecedent and consequent spaces forming the rule",
            " Wang and Mendel suggest a different approach to the max - min computation used by Mamdani . In practical applications, the number of input spaces will be significant when compared to the typical control application where Fuzzy Logic is typically",
            " Centre of a fuzzy region is the point that has the smallest absolute value among all points at which the membership function for this region is equal to 1 . The value of y for a given  ( x1 ,  x2 )",
            " R - Squared is the sum of the squared difference between the mean of the observed dependent variable and the actual value of the dependent variable . This is the result of a hyperparameter that was identified and the number of fuzzy sets",
            " The best response is obtained when setting the value of N _ x to 4 and N _ y to 3, attaining an R - squared value of 0 . 985 . The rules generated by the system are of particular interest as",
            " The average temperature varied between 1 and 23 degrees Celcius with a variability of about 20 degrees per month . The average humidity varies between 0 . 63 and 0 . 85 . The best Fuzzy system that was tested consisted of 3",
            " The system needs a considerable dataset that needs to cover all possible rules that can be generated . The distribution of the fuzzy spaces affects the performance of the system . The effect of handcrafted rules has to be investigated .",
            " The Variable delivers the very best of Towards Data Science :  from hands - on tutorials and cutting - edge research to original features you don't want to miss . Take a look .  Get this newsletter by signing up .  You",
            " Dimitris Poulopoulos in Towards Data Science: The Making of AI Snake Oil . Adnan Haider in Towards data Science About Help Legal Get the Medium app ."
          ],
          "text_suggester": [
            {
              "input": "carmel gafa",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 0
            },
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "fuzzy systems",
              "weight": 0
            },
            {
              "input": "1 and 23 degree celcius",
              "weight": 99
            },
            {
              "input": "1 and 23 degrees celcius",
              "weight": 0
            },
            {
              "input": "12 features",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "20 degree per month",
              "weight": 16
            },
            {
              "input": "2020·10 min",
              "weight": 12
            },
            {
              "input": "3 fuzzy spaces",
              "weight": 0
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a car",
              "weight": 0
            },
            {
              "input": "a combined fuzzy rule base",
              "weight": 0
            },
            {
              "input": "a considerable dataset",
              "weight": 0
            },
            {
              "input": "a degree",
              "weight": 8
            },
            {
              "input": "a different approach",
              "weight": 0
            },
            {
              "input": "a framework",
              "weight": 0
            },
            {
              "input": "a future improvement",
              "weight": 0
            },
            {
              "input": "a future post",
              "weight": 0
            },
            {
              "input": "a fuzzy region",
              "weight": 0
            },
            {
              "input": "a fuzzy system",
              "weight": 0
            },
            {
              "input": "a given input combination",
              "weight": 0
            },
            {
              "input": "a given rule",
              "weight": 0
            },
            {
              "input": "a human element",
              "weight": 0
            },
            {
              "input": "a human user",
              "weight": 0
            },
            {
              "input": "a hypothetical sensor",
              "weight": 0
            },
            {
              "input": "a large number",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a mapping",
              "weight": 0
            },
            {
              "input": "a matrix",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a previous post",
              "weight": 0
            },
            {
              "input": "a product strategy",
              "weight": 0
            },
            {
              "input": "a rule",
              "weight": 8
            },
            {
              "input": "a ruleset",
              "weight": 0
            },
            {
              "input": "a sample",
              "weight": 0
            },
            {
              "input": "a second example",
              "weight": 0
            },
            {
              "input": "a second test",
              "weight": 0
            },
            {
              "input": "a set",
              "weight": 0
            },
            {
              "input": "a significant error",
              "weight": 0
            },
            {
              "input": "a smaller degree",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spread",
              "weight": 0
            },
            {
              "input": "a straightforward application",
              "weight": 0
            },
            {
              "input": "a straightforward task",
              "weight": 0
            },
            {
              "input": "a system",
              "weight": 8
            },
            {
              "input": "a test sample",
              "weight": 8
            },
            {
              "input": "a value",
              "weight": 0
            },
            {
              "input": "a variability",
              "weight": 0
            },
            {
              "input": "a way",
              "weight": 0
            },
            {
              "input": "a wide variety",
              "weight": 0
            },
            {
              "input": "ability to obtain knowledge",
              "weight": 28
            },
            {
              "input": "about 20 degree",
              "weight": 4
            },
            {
              "input": "about 20 degrees",
              "weight": 0
            },
            {
              "input": "actual and estimate value",
              "weight": 28
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "affect",
              "weight": 6
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "all points",
              "weight": 0
            },
            {
              "input": "all possible rules",
              "weight": 0
            },
            {
              "input": "all rules",
              "weight": 0
            },
            {
              "input": "all small values",
              "weight": 0
            },
            {
              "input": "an absent rule",
              "weight": 0
            },
            {
              "input": "an algorithm",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an example",
              "weight": 0
            },
            {
              "input": "an excellent platform",
              "weight": 0
            },
            {
              "input": "an exponential response",
              "weight": 0
            },
            {
              "input": "an input space",
              "weight": 0
            },
            {
              "input": "an integer",
              "weight": 0
            },
            {
              "input": "an odd number",
              "weight": 0
            },
            {
              "input": "an output",
              "weight": 0
            },
            {
              "input": "antecedent",
              "weight": 8
            },
            {
              "input": "app",
              "weight": 24
            },
            {
              "input": "apparent temperature",
              "weight": 0
            },
            {
              "input": "application",
              "weight": 8
            },
            {
              "input": "applications",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "assess",
              "weight": 3
            },
            {
              "input": "assign",
              "weight": 3
            },
            {
              "input": "available",
              "weight": 5
            },
            {
              "input": "average temperature vary between 1",
              "weight": 100
            },
            {
              "input": "base",
              "weight": 9
            },
            {
              "input": "begin test the procedure",
              "weight": 22
            },
            {
              "input": "between 1 and 23 degree celcius",
              "weight": 4
            },
            {
              "input": "cameras",
              "weight": 0
            },
            {
              "input": "case",
              "weight": 4
            },
            {
              "input": "case study",
              "weight": 8
            },
            {
              "input": "case study 1",
              "weight": 4
            },
            {
              "input": "case study 2",
              "weight": 4
            },
            {
              "input": "case where human intervention",
              "weight": 24
            },
            {
              "input": "categorical data",
              "weight": 0
            },
            {
              "input": "cater for categorical datum",
              "weight": 76
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "clause",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 8
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "combination",
              "weight": 3
            },
            {
              "input": "combined",
              "weight": 9
            },
            {
              "input": "combined fuzzy rule base",
              "weight": 0
            },
            {
              "input": "complex systems",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "conflicting rules",
              "weight": 0
            },
            {
              "input": "consequent",
              "weight": 3
            },
            {
              "input": "consequent spaces",
              "weight": 0
            },
            {
              "input": "consider",
              "weight": 2
            },
            {
              "input": "control",
              "weight": 5
            },
            {
              "input": "corres",
              "weight": 0
            },
            {
              "input": "corresponding outputs",
              "weight": 0
            },
            {
              "input": "create",
              "weight": 4
            },
            {
              "input": "create a medium account",
              "weight": 22
            },
            {
              "input": "daily summary",
              "weight": 0
            },
            {
              "input": "data distribution",
              "weight": 0
            },
            {
              "input": "data science import all python libraries",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 5
            },
            {
              "input": "datum",
              "weight": 56
            },
            {
              "input": "define",
              "weight": 2
            },
            {
              "input": "degree",
              "weight": 7
            },
            {
              "input": "degree be the product",
              "weight": 13
            },
            {
              "input": "degree of membership result",
              "weight": 35
            },
            {
              "input": "degree of output control",
              "weight": 19
            },
            {
              "input": "dependent",
              "weight": 2
            },
            {
              "input": "determine",
              "weight": 4
            },
            {
              "input": "different",
              "weight": 5
            },
            {
              "input": "different consequent clauses",
              "weight": 0
            },
            {
              "input": "different value of n",
              "weight": 16
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "divisions",
              "weight": 0
            },
            {
              "input": "each input and output space",
              "weight": 0
            },
            {
              "input": "each rule",
              "weight": 8
            },
            {
              "input": "each sample",
              "weight": 0
            },
            {
              "input": "early post be concern",
              "weight": 30
            },
            {
              "input": "effect",
              "weight": 6
            },
            {
              "input": "evenly spaced fuzzy regions",
              "weight": 0
            },
            {
              "input": "examine",
              "weight": 4
            },
            {
              "input": "example",
              "weight": 5
            },
            {
              "input": "experience",
              "weight": 8
            },
            {
              "input": "explain",
              "weight": 2
            },
            {
              "input": "exponential properties",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 5
            },
            {
              "input": "features increase",
              "weight": 0
            },
            {
              "input": "first",
              "weight": 4
            },
            {
              "input": "float64",
              "weight": 32
            },
            {
              "input": "float64 visibility",
              "weight": 0
            },
            {
              "input": "follow",
              "weight": 7
            },
            {
              "input": "form",
              "weight": 5
            },
            {
              "input": "formatted date",
              "weight": 0
            },
            {
              "input": "future",
              "weight": 5
            },
            {
              "input": "future work",
              "weight": 0
            },
            {
              "input": "fuzzy",
              "weight": 5
            },
            {
              "input": "fuzzy logic",
              "weight": 0
            },
            {
              "input": "fuzzy region",
              "weight": 0
            },
            {
              "input": "fuzzy region as the point",
              "weight": 20
            },
            {
              "input": "fuzzy regions",
              "weight": 0
            },
            {
              "input": "fuzzy rules",
              "weight": 0
            },
            {
              "input": "fuzzy sets",
              "weight": 0
            },
            {
              "input": "generate",
              "weight": 3
            },
            {
              "input": "github",
              "weight": 0
            },
            {
              "input": "give",
              "weight": 4
            },
            {
              "input": "good",
              "weight": 5
            },
            {
              "input": "google cloud vision api",
              "weight": 45
            },
            {
              "input": "handcrafted rules",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 4
            },
            {
              "input": "hence the rules",
              "weight": 0
            },
            {
              "input": "high applicability",
              "weight": 0
            },
            {
              "input": "human",
              "weight": 7
            },
            {
              "input": "human experience",
              "weight": 16
            },
            {
              "input": "human intervention",
              "weight": 0
            },
            {
              "input": "human knowledge",
              "weight": 8
            },
            {
              "input": "human supervision",
              "weight": 0
            },
            {
              "input": "humans",
              "weight": 0
            },
            {
              "input": "idea",
              "weight": 8
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "image",
              "weight": 8
            },
            {
              "input": "images",
              "weight": 0
            },
            {
              "input": "increase",
              "weight": 3
            },
            {
              "input": "information",
              "weight": 6
            },
            {
              "input": "input",
              "weight": 5
            },
            {
              "input": "input and output space",
              "weight": 17
            },
            {
              "input": "input spaces",
              "weight": 0
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "insights",
              "weight": 0
            },
            {
              "input": "interesting",
              "weight": 0
            },
            {
              "input": "jerry mendel",
              "weight": 4
            },
            {
              "input": "jun 17",
              "weight": 4
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "kaggle",
              "weight": 0
            },
            {
              "input": "knowledge",
              "weight": 8
            },
            {
              "input": "large",
              "weight": 4
            },
            {
              "input": "larger datasets",
              "weight": 0
            },
            {
              "input": "loud cover",
              "weight": 0
            },
            {
              "input": "machine learning techniques",
              "weight": 0
            },
            {
              "input": "machines",
              "weight": 0
            },
            {
              "input": "mamdani",
              "weight": 0
            },
            {
              "input": "maximum degree of membership",
              "weight": 37
            },
            {
              "input": "medel",
              "weight": 0
            },
            {
              "input": "medium",
              "weight": 8
            },
            {
              "input": "membership",
              "weight": 16
            },
            {
              "input": "membership results",
              "weight": 0
            },
            {
              "input": "membership values",
              "weight": 0
            },
            {
              "input": "mendel",
              "weight": 0
            },
            {
              "input": "missing rules",
              "weight": 0
            },
            {
              "input": "model and can result",
              "weight": 21
            },
            {
              "input": "month",
              "weight": 8
            },
            {
              "input": "more complex systems",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "n affect the performance",
              "weight": 15
            },
            {
              "input": "newsletter by sign",
              "weight": 18
            },
            {
              "input": "nine",
              "weight": 12
            },
            {
              "input": "nine fuzzy spaces",
              "weight": 0
            },
            {
              "input": "no error",
              "weight": 0
            },
            {
              "input": "noisy sensor",
              "weight": 0
            },
            {
              "input": "note rule",
              "weight": 0
            },
            {
              "input": "notice",
              "weight": 5
            },
            {
              "input": "notice that the characteristic",
              "weight": 15
            },
            {
              "input": "number",
              "weight": 5
            },
            {
              "input": "numerous instances",
              "weight": 0
            },
            {
              "input": "object",
              "weight": 7
            },
            {
              "input": "object temperature",
              "weight": 0
            },
            {
              "input": "objective of this exercise",
              "weight": 21
            },
            {
              "input": "obtain",
              "weight": 7
            },
            {
              "input": "obtain during the search",
              "weight": 20
            },
            {
              "input": "one exciting aspect",
              "weight": 0
            },
            {
              "input": "one idea",
              "weight": 0
            },
            {
              "input": "one line",
              "weight": 0
            },
            {
              "input": "one of the hyperparameter",
              "weight": 41
            },
            {
              "input": "one problem",
              "weight": 0
            },
            {
              "input": "only this aspect",
              "weight": 0
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our input and output spaces",
              "weight": 0
            },
            {
              "input": "our models",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "output",
              "weight": 5
            },
            {
              "input": "output control",
              "weight": 8
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "over 96",
              "weight": 4
            },
            {
              "input": "particular interest",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "performance",
              "weight": 7
            },
            {
              "input": "performance of the system",
              "weight": 14
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "possible",
              "weight": 5
            },
            {
              "input": "possible to reach 100",
              "weight": 20
            },
            {
              "input": "post",
              "weight": 6
            },
            {
              "input": "practical applications",
              "weight": 0
            },
            {
              "input": "practice",
              "weight": 16
            },
            {
              "input": "precip type",
              "weight": 0
            },
            {
              "input": "procedure",
              "weight": 8
            },
            {
              "input": "product",
              "weight": 4
            },
            {
              "input": "professor jerry mendel",
              "weight": 0
            },
            {
              "input": "python",
              "weight": 0
            },
            {
              "input": "real datasets",
              "weight": 0
            },
            {
              "input": "regards",
              "weight": 0
            },
            {
              "input": "region",
              "weight": 6
            },
            {
              "input": "region be equal to 1",
              "weight": 86
            },
            {
              "input": "result",
              "weight": 11
            },
            {
              "input": "rule",
              "weight": 32
            },
            {
              "input": "rules",
              "weight": 0
            },
            {
              "input": "s3 if x",
              "weight": 49
            },
            {
              "input": "same",
              "weight": 4
            },
            {
              "input": "sample",
              "weight": 16
            },
            {
              "input": "sample in the dataset",
              "weight": 23
            },
            {
              "input": "satyam kumar",
              "weight": 0
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "sensor",
              "weight": 6
            },
            {
              "input": "sensor information",
              "weight": 0
            },
            {
              "input": "set",
              "weight": 8
            },
            {
              "input": "sets",
              "weight": 0
            },
            {
              "input": "several observations",
              "weight": 0
            },
            {
              "input": "show in the image",
              "weight": 16
            },
            {
              "input": "sign",
              "weight": 8
            },
            {
              "input": "sign in get",
              "weight": 4
            },
            {
              "input": "significant",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "similar techniques",
              "weight": 0
            },
            {
              "input": "small",
              "weight": 3
            },
            {
              "input": "some considerations",
              "weight": 0
            },
            {
              "input": "some fuzzy sets",
              "weight": 0
            },
            {
              "input": "some noise",
              "weight": 0
            },
            {
              "input": "space",
              "weight": 5
            },
            {
              "input": "square",
              "weight": 24
            },
            {
              "input": "squares",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 4
            },
            {
              "input": "step",
              "weight": 24
            },
            {
              "input": "straightforward",
              "weight": 7
            },
            {
              "input": "such",
              "weight": 4
            },
            {
              "input": "such applications",
              "weight": 0
            },
            {
              "input": "such circumstances",
              "weight": 0
            },
            {
              "input": "such techniques",
              "weight": 0
            },
            {
              "input": "sum",
              "weight": 7
            },
            {
              "input": "sum of square residual",
              "weight": 40
            },
            {
              "input": "sum of square total",
              "weight": 40
            },
            {
              "input": "summary object",
              "weight": 0
            },
            {
              "input": "system",
              "weight": 5
            },
            {
              "input": "system display exponential property",
              "weight": 33
            },
            {
              "input": "szeged",
              "weight": 0
            },
            {
              "input": "technique",
              "weight": 4
            },
            {
              "input": "temperature",
              "weight": 8
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "test",
              "weight": 5
            },
            {
              "input": "testing metrics",
              "weight": 0
            },
            {
              "input": "that space",
              "weight": 0
            },
            {
              "input": "the sum",
              "weight": 0
            },
            {
              "input": "the ability",
              "weight": 0
            },
            {
              "input": "the above algorithm",
              "weight": 0
            },
            {
              "input": "the above table",
              "weight": 0
            },
            {
              "input": "the actual and estimated value",
              "weight": 0
            },
            {
              "input": "the actual values",
              "weight": 0
            },
            {
              "input": "the antecedents",
              "weight": 0
            },
            {
              "input": "the application",
              "weight": 8
            },
            {
              "input": "the available data",
              "weight": 0
            },
            {
              "input": "the average humidity",
              "weight": 0
            },
            {
              "input": "the average temperature",
              "weight": 0
            },
            {
              "input": "the basic ideas",
              "weight": 0
            },
            {
              "input": "the best fuzzy system",
              "weight": 0
            },
            {
              "input": "the best response",
              "weight": 0
            },
            {
              "input": "the best values",
              "weight": 0
            },
            {
              "input": "the cases",
              "weight": 0
            },
            {
              "input": "the centre",
              "weight": 0
            },
            {
              "input": "the characteristics",
              "weight": 0
            },
            {
              "input": "the code",
              "weight": 0
            },
            {
              "input": "the coefficient",
              "weight": 0
            },
            {
              "input": "the combined fuzzy rule base",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the dataset",
              "weight": 25
            },
            {
              "input": "the defuzzification strategy",
              "weight": 0
            },
            {
              "input": "the degree",
              "weight": 41
            },
            {
              "input": "the dependent variable",
              "weight": 8
            },
            {
              "input": "the different fuzzy regions",
              "weight": 0
            },
            {
              "input": "the different values",
              "weight": 0
            },
            {
              "input": "the distribution",
              "weight": 0
            },
            {
              "input": "the earlier posts",
              "weight": 0
            },
            {
              "input": "the effect",
              "weight": 8
            },
            {
              "input": "the effects",
              "weight": 0
            },
            {
              "input": "the estimated values",
              "weight": 0
            },
            {
              "input": "the final step",
              "weight": 0
            },
            {
              "input": "the following degrees",
              "weight": 0
            },
            {
              "input": "the following illustrations",
              "weight": 0
            },
            {
              "input": "the following rule",
              "weight": 0
            },
            {
              "input": "the form",
              "weight": 8
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the fuzzy distribution map",
              "weight": 0
            },
            {
              "input": "the fuzzy regions",
              "weight": 0
            },
            {
              "input": "the fuzzy spaces",
              "weight": 0
            },
            {
              "input": "the fuzzy system",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 4
            },
            {
              "input": "the highlighted elements",
              "weight": 0
            },
            {
              "input": "the hyperparameter",
              "weight": 0
            },
            {
              "input": "the hyperparameters",
              "weight": 0
            },
            {
              "input": "the image",
              "weight": 0
            },
            {
              "input": "the information",
              "weight": 0
            },
            {
              "input": "the input",
              "weight": 8
            },
            {
              "input": "the input and output spaces",
              "weight": 0
            },
            {
              "input": "the input data",
              "weight": 0
            },
            {
              "input": "the input variables",
              "weight": 0
            },
            {
              "input": "the inputs",
              "weight": 0
            },
            {
              "input": "the introduction",
              "weight": 0
            },
            {
              "input": "the ith rule",
              "weight": 0
            },
            {
              "input": "the knowledge",
              "weight": 8
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 4
            },
            {
              "input": "the mapping",
              "weight": 0
            },
            {
              "input": "the maximum degree",
              "weight": 0
            },
            {
              "input": "the mean",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the membership function",
              "weight": 0
            },
            {
              "input": "the month",
              "weight": 28
            },
            {
              "input": "the most significant degree",
              "weight": 0
            },
            {
              "input": "the neighbouring ones",
              "weight": 0
            },
            {
              "input": "the next illustration",
              "weight": 0
            },
            {
              "input": "the nine rules",
              "weight": 0
            },
            {
              "input": "the notion",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 41
            },
            {
              "input": "the objective",
              "weight": 0
            },
            {
              "input": "the observed dependent variable",
              "weight": 0
            },
            {
              "input": "the original paper",
              "weight": 0
            },
            {
              "input": "the output value",
              "weight": 0
            },
            {
              "input": "the outputs",
              "weight": 0
            },
            {
              "input": "the performance",
              "weight": 33
            },
            {
              "input": "the previous example",
              "weight": 0
            },
            {
              "input": "the procedure",
              "weight": 8
            },
            {
              "input": "the product",
              "weight": 0
            },
            {
              "input": "the product operator",
              "weight": 0
            },
            {
              "input": "the reader",
              "weight": 0
            },
            {
              "input": "the recommendation",
              "weight": 0
            },
            {
              "input": "the region",
              "weight": 0
            },
            {
              "input": "the reliability",
              "weight": 0
            },
            {
              "input": "the results",
              "weight": 0
            },
            {
              "input": "the rule",
              "weight": 33
            },
            {
              "input": "the rule degree",
              "weight": 0
            },
            {
              "input": "the rules",
              "weight": 0
            },
            {
              "input": "the same antecedent",
              "weight": 0
            },
            {
              "input": "the same antecedent clauses",
              "weight": 0
            },
            {
              "input": "the same output space",
              "weight": 0
            },
            {
              "input": "the same space",
              "weight": 0
            },
            {
              "input": "the search",
              "weight": 0
            },
            {
              "input": "the sensor data",
              "weight": 0
            },
            {
              "input": "the sets",
              "weight": 0
            },
            {
              "input": "the smallest absolute value",
              "weight": 0
            },
            {
              "input": "the spaces",
              "weight": 0
            },
            {
              "input": "the squared difference",
              "weight": 8
            },
            {
              "input": "the standard deviation",
              "weight": 0
            },
            {
              "input": "the sum",
              "weight": 33
            },
            {
              "input": "the system",
              "weight": 73
            },
            {
              "input": "the temperature",
              "weight": 8
            },
            {
              "input": "the test data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the transformation",
              "weight": 0
            },
            {
              "input": "the typical control application",
              "weight": 0
            },
            {
              "input": "the use",
              "weight": 0
            },
            {
              "input": "the value",
              "weight": 25
            },
            {
              "input": "the values",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the various outcomes",
              "weight": 0
            },
            {
              "input": "the weather",
              "weight": 0
            },
            {
              "input": "the ‘normal’ approach",
              "weight": 0
            },
            {
              "input": "their impact",
              "weight": 0
            },
            {
              "input": "then y",
              "weight": 0
            },
            {
              "input": "these features",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "things",
              "weight": 0
            },
            {
              "input": "this discussion",
              "weight": 0
            },
            {
              "input": "this exercise",
              "weight": 8
            },
            {
              "input": "this factor",
              "weight": 0
            },
            {
              "input": "this idea",
              "weight": 0
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this method",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this post",
              "weight": 0
            },
            {
              "input": "this procedure",
              "weight": 25
            },
            {
              "input": "this region",
              "weight": 0
            },
            {
              "input": "this sample",
              "weight": 0
            },
            {
              "input": "this system",
              "weight": 16
            },
            {
              "input": "this system’s performance",
              "weight": 0
            },
            {
              "input": "times",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 3
            },
            {
              "input": "towards data science",
              "weight": 76
            },
            {
              "input": "towards data science import all python",
              "weight": 4
            },
            {
              "input": "towards datum science",
              "weight": 4
            },
            {
              "input": "trains",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 4
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "value between 0 and 1",
              "weight": 77
            },
            {
              "input": "variable",
              "weight": 16
            },
            {
              "input": "wang",
              "weight": 0
            },
            {
              "input": "wind speed",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "· editors",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/fuzzy-systems-from-data-51a53bcbc9b1?source=post_internal_links---------3------------------&gi=b338fed34077",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.015262090720898958,
        "_index": "cache_index",
        "_id": "cacheid_6e8a26eac1ad10c2319d3e3925771f12",
        "_type": "_doc",
        "highlight": {
          "content": [
            "use our input and output spaces, together with the fuzzy regions that\nwe have just defined, and the <b>dataset</b>",
            "then  {consequent clauses}\n\nWe start by determining the degree of membership of each sample in the <b>dataset</b>",
            "One idea is to have sets created around the <b>dataset</b> mean with a spread relatable to the standard deviation",
            "The <b>dataset</b> has over 96,000 training examples that consist of 12\nfeatures.",
            "The system needs a considerable <b>dataset</b> that needs to cover all possible rules that can be generated."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.005529320058969911,
        "see_also": [
          {
            "doc_id": "cacheid_5cff673a1f190c9a7a70a5cc07e6992f",
            "source_doc_id": "entity:user/1211:en",
            "title": "jo bultreys"
          },
          {
            "doc_id": "cacheid_6df56c15260272e2e6c4b204eaf224c7",
            "source_doc_id": "entity:user/905:en",
            "title": "jav karbasian"
          },
          {
            "doc_id": "cacheid_253617830c30a384140b0caaaf5e7c1b",
            "source_doc_id": "entity:user/1823:en",
            "title": "javier rodriguez fernandez"
          },
          {
            "doc_id": "cacheid_6a9edc92b2173f8e5f8a67aa44a6f186",
            "source_doc_id": "entity:user/1517:en",
            "title": "gabor vadasz"
          },
          {
            "doc_id": "cacheid_59bd3760211cb7600002a37aef578bb8",
            "source_doc_id": "entity:user/1168:en",
            "title": "dimitrios hristuvarsakelis"
          }
        ],
        "semantic_content": " . of AI Snake Oil Adnan Haider in Towards Data Science About Help Legal Get the Medium app",
        "short_answer": [
          {
            "score": 0.4379423260688782,
            "start": 35,
            "end": 91,
            "answer": "Towards Data Science About Help Legal Get the Medium app"
          }
        ]
      },
      {
        "_source": {
          "title": "DSConv: Efficient Convolution Operator | Papers With Code\n\n",
          "lemma_title": "Efficient Convolution Operator Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n×\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n×\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n×\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n×\n\n       Mark the official implementation from paper authors\n\n×\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTask:*\n\n\\--------- Quantization\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n×\n\nAttached tasks:\n\n  * QUANTIZATION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n×\n\n  * QUANTIZATION \\- \n\n      Add a method\n\n×\n\nAttached methods:\n\n  * BATCH NORMALIZATION\n\n  * BOTTLENECK RESIDUAL BLOCK\n\n  * RESIDUAL CONNECTION\n\n  * RESIDUAL BLOCK\n\n  * AVERAGE POOLING\n\n  * LOCAL RESPONSE NORMALIZATION\n\n  * AUXILIARY CLASSIFIER\n\n  * INCEPTION MODULE\n\n  * CONCATENATED SKIP CONNECTION\n\n  * RESNET\n\n  * GLOBAL AVERAGE POOLING\n\n  * DENSE BLOCK\n\n  * GROUPED CONVOLUTION\n\n  * KAIMING INITIALIZATION\n\n  * 1X1 CONVOLUTION\n\n  * RELU\n\n  * DROPOUT\n\n  * DENSE CONNECTIONS\n\n  * MAX POOLING\n\n  * SOFTMAX\n\n  * ALEXNET\n\n  * GOOGLENET\n\n  * DENSENET\n\n  * CONVOLUTION\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n×\n\n  * BATCH NORMALIZATION \\- \n\n  * BOTTLENECK RESIDUAL BLOCK \\- \n\n  * RESIDUAL CONNECTION \\- \n\n  * RESIDUAL BLOCK \\- \n\n  * AVERAGE POOLING \\- \n\n  * LOCAL RESPONSE NORMALIZATION \\- \n\n  * AUXILIARY CLASSIFIER \\- \n\n  * INCEPTION MODULE \\- \n\n  * CONCATENATED SKIP CONNECTION \\- \n\n  * RESNET \\- \n\n  * GLOBAL AVERAGE POOLING \\- \n\n  * DENSE BLOCK \\- \n\n  * GROUPED CONVOLUTION \\- \n\n  * KAIMING INITIALIZATION \\- \n\n  * 1X1 CONVOLUTION \\- \n\n  * RELU \\- \n\n  * DROPOUT \\- \n\n  * DENSE CONNECTIONS \\- \n\n  * MAX POOLING \\- \n\n  * SOFTMAX \\- \n\n  * ALEXNET \\- \n\n  * GOOGLENET \\- \n\n  * DENSENET \\- \n\n  * CONVOLUTION \\- \n\n      Edit Datasets\n\n×\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nImageNet\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  DSConv: Efficient Convolution Operator\n\nICCV 2019 •  Marcelo Gennari do Nascimento •  Roger Fawcett •  Victor Adrian\nPrisacariu\n\nQuantization is a popular way of increasing the speed and lowering the memory\nusage of Convolution Neural Networks (CNNs). When labelled training data is\navailable, network weights and activations have successfully been quantized\ndown to 1-bit... The same cannot be said about the scenario when labelled\ntraining data is not available, e.g. when quantizing a pre-trained model,\nwhere current approaches show, at best, no loss of accuracy at 8-bit\nquantizations. We introduce DSConv, a flexible quantized convolution operator\nthat replaces single-precision operations with their far less expensive\ninteger counterparts, while maintaining the probability distributions over\nboth the kernel weights and the outputs. We test our model as a plug-and-play\nreplacement for standard convolution on most popular neural network\narchitectures, ResNet, DenseNet, GoogLeNet, AlexNet and VGG-Net and\ndemonstrate state-of-the-art results, with less than 1% loss of accuracy,\nwithout retraining, using only 4-bit quantization. We also show how a\ndistillation-based adaptation stage with unlabelled data can improve results\neven further. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * QUANTIZATION\n\n  Datasets\n\n__Edit\n\n* * *\n\nImageNet\n\n  Results from the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nBatch Normalization\n\nNormalization  \n  \nBottleneck Residual Block\n\nSkip Connection Blocks  \n  \nResidual Connection\n\nSkip Connections  \n  \nResidual Block\n\nSkip Connection Blocks  \n  \nAverage Pooling\n\nPooling Operations  \n  \nLocal Response Normalization\n\nNormalization  \n  \nAuxiliary Classifier\n\nMiscellaneous Components  \n  \nInception Module\n\nImage Model Blocks  \n  \nConcatenated Skip Connection\n\nSkip Connections  \n  \nResNet\n\nConvolutional Neural Networks  \n  \nGlobal Average Pooling\n\nPooling Operations  \n  \nDense Block\n\nImage Model Blocks  \n  \nGrouped Convolution\n\nConvolutions  \n  \nKaiming Initialization\n\nInitialization  \n  \n1x1 Convolution\n\nConvolutions  \n  \nReLU\n\nActivation Functions  \n  \nDropout\n\nRegularization  \n  \nDense Connections\n\nFeedforward Networks  \n  \nMax Pooling\n\nPooling Operations  \n  \nSoftmax\n\nOutput Functions  \n  \nAlexNet\n\nConvolutional Neural Networks  \n  \nGoogLeNet\n\nConvolutional Neural Networks  \n  \nDenseNet\n\nConvolutional Neural Networks  \n  \nConvolution\n\nConvolutions  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task quantization list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task × attach task quantization add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task quantization add method × attach method batch normalization BOTTLENECK residual block residual connection residual block average POOLING local response normalization auxiliary classifier INCEPTION module CONCATENATED SKIP connection RESNET global average POOLING dense block group CONVOLUTION kaiming INITIALIZATION 1x1 convolution RELU dropout dense connection max POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method batch NORMALIZATION BOTTLENECK RESIDUAL BLOCK residual connection residual BLOCK average POOLING local response NORMALIZATION auxiliary CLASSIFIER INCEPTION module CONCATENATED connection RESNET GLOBAL average POOLING dense BLOCK group CONVOLUTION KAIMING INITIALIZATION 1x1 convolution RELU dropout dense CONNECTIONS MAX POOLING SOFTMAX ALEXNET GOOGLENET DENSENET CONVOLUTION edit dataset add remove dataset introduce paper add remove other dataset use paper ImageNet paper introduce new dataset _ _ add new dataset save Efficient Convolution Operator ICCV 2019 • Marcelo Gennari Nascimento • Roger Fawcett Victor Adrian Prisacariu Quantization popular way increase speed lower memory usage Convolution Neural Networks CNNs label training datum available network weight activation quantize 1-bit same can say scenario label training datum available quantize pre-trained model current approach show good loss accuracy 8-bit quantization introduce DSConv flexible quantized convolution operator replace single-precision operation expensive integer counterpart maintain probability distribution kernel weight output test model plug-and-play replacement standard convolution popular neural network architecture ResNet DenseNet GoogLeNet AlexNet VGG-Net demonstrate state-of-the-art result less 1 loss accuracy retrain use 4-bit quantization show distillation-based adaptation stage unlabelled datum can improve result read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove quantization dataset _ _ edit imagenet result Paper _ _ edit add remove _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type batch normalization normalization bottleneck Residual Block skip Connection Blocks Residual connection Skip Connections Residual Block skip Connection Blocks Average Pooling Pooling Operations local Response Normalization normalization Auxiliary Classifier Miscellaneous Components Inception Module Image Model Blocks Concatenated Skip connection Skip Connections ResNet Convolutional Neural Networks Global Average Pooling Pooling Operations Dense Block Image Model Blocks Grouped Convolution convolutions kaime initialization initialization 1x1 Convolution Convolutions relu Activation Functions regularization Dense Connections Feedforward Networks Max Pooling Pooling Operations Softmax Output Functions AlexNet Convolutional Neural Networks GoogLeNet Convolutional Neural Networks DenseNet Convolutional Neural Networks convolution convolution contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Metric",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "MAX",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ALEXNET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DENSENET",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Linear",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ICCV",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Marcelo Gennari",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Nascimento",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Roger Fawcett",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adrian Prisacariu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "neural network",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GoogLeNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "AlexNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "VGG-Net",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ImageNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Concatenated Skip Connection",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ResNet",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dense Block  ",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Grouped Convolution  Convolutions",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ReLU  Activation Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Softmax  Output Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Convolutional Neural Networks",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "ImageNet   paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the scenario",
              "property": "when label",
              "value": "training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "introduce",
              "value": "DSConv",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "test",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "distillation-based adaptation stage",
              "property": "can improve",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "machine learning",
                "internet of things",
                "deep learning",
                "natural language processing",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2668410362675786,
                0.09896954987198114,
                0.27236777544021606,
                0.18081902898848057,
                0.05852732993662357,
                0.06764410436153412,
                0.03876231610774994,
                0.016068918630480766
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.35212486423552036,
                0.2920630844309926,
                0.13506511878222227,
                0.065984639339149,
                0.07275313138961792,
                0.045883440878242254,
                0.011095483787357807,
                0.025030274409800768
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.24692200031131506,
                0.22839650698006153,
                0.261474234983325,
                0.1306574083864689,
                0.050379553809762,
                0.016356945037841797,
                0.03653158061206341,
                0.0292817372828722
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "computer vision",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.27719002589583397,
                0.20975345559418201,
                0.1852069767192006,
                0.07818364351987839,
                0.07954248413443565,
                0.08761176560074091,
                0.06524304114282131,
                0.017268581315875053
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3746554674580693,
                0.22429421450942755,
                0.17696329997852445,
                0.06887668650597334,
                0.08836345840245485,
                0.030804456677287817,
                0.012053466401994228,
                0.023988965433090925
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3492646589875221,
                0.2034083236940205,
                0.18095654621720314,
                0.12506238743662834,
                0.06583806918933988,
                0.04356989311054349,
                0.009340261109173298,
                0.022559878416359425
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.38211968820542097,
                0.20986603572964668,
                0.17163959611207247,
                0.06933960691094398,
                0.04749210411682725,
                0.07330490741878748,
                0.012814713642001152,
                0.033423435874283314
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.37926317006349564,
                0.19165954180061817,
                0.1497139548882842,
                0.11079111509025097,
                0.05537470243871212,
                0.06861344631761312,
                0.01738884672522545,
                0.027195206843316555
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "internet of things",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.6263732486404479,
                0.24705401132814586,
                0.038986049592494965,
                0.039754245430231094,
                0.018983399029821157,
                0.008033248595893383,
                0.011123870266601443,
                0.009691898245364428
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.42791916616261005,
                0.42567391647025943,
                0.05322565673850477,
                0.019092107191681862,
                0.02159051294438541,
                0.017775981919839978,
                0.025564270094037056,
                0.009158421074971557
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3569994284771383,
                0.36026700027287006,
                0.062254322692751884,
                0.0940168397501111,
                0.04426709283143282,
                0.050978414714336395,
                0.009667323902249336,
                0.02154967049136758
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.5407535042613745,
                0.2865408482030034,
                0.06718112714588642,
                0.01584777422249317,
                0.03486715257167816,
                0.028664967976510525,
                0.0168811974581331,
                0.009263449348509312
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.25077254325151443,
                0.24542272370308638,
                0.1786219570785761,
                0.11635238770395517,
                0.07334604673087597,
                0.06896488927304745,
                0.05063504260033369,
                0.015884358435869217
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9915897250175476,
              "spans": [
                {
                  "approx_length": 61,
                  "score": 0.9915897250175476,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8948657860358556,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 144,
                  "score": 0.9982118010520935,
                  "spanid": 3
                },
                {
                  "approx_length": 238,
                  "score": 0.9937748908996582,
                  "spanid": 4
                },
                {
                  "approx_length": 200,
                  "score": 0.9993357062339783,
                  "spanid": 5
                },
                {
                  "approx_length": 299,
                  "score": 0.998818576335907,
                  "spanid": 6
                },
                {
                  "approx_length": 282,
                  "score": 0.9924042820930481,
                  "spanid": 7
                },
                {
                  "approx_length": 241,
                  "score": 0.9939625263214111,
                  "spanid": 8
                },
                {
                  "approx_length": 169,
                  "score": 0.9993694424629211,
                  "spanid": 9
                },
                {
                  "approx_length": 215,
                  "score": 0.9972627758979797,
                  "spanid": 10
                },
                {
                  "approx_length": 201,
                  "score": 0.9990112781524658,
                  "spanid": 11
                },
                {
                  "approx_length": 234,
                  "score": 0.9945089221000671,
                  "spanid": 12
                },
                {
                  "approx_length": 205,
                  "score": 0.996544599533081,
                  "spanid": 13
                },
                {
                  "approx_length": 205,
                  "score": 0.9975277185440063,
                  "spanid": 14
                },
                {
                  "approx_length": 334,
                  "score": 0.8084074258804321,
                  "spanid": 15
                },
                {
                  "approx_length": 300,
                  "score": 0.9861253499984741,
                  "spanid": 16
                },
                {
                  "approx_length": 290,
                  "score": 0.9990061521530151,
                  "spanid": 18
                },
                {
                  "approx_length": 202,
                  "score": 0.9942792654037476,
                  "spanid": 20
                },
                {
                  "approx_length": 293,
                  "score": 0.9972748756408691,
                  "spanid": 21
                },
                {
                  "approx_length": 582,
                  "score": 0.998123824596405,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9841867685317993,
                  "spanid": 23
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.08079369366168976,
              "spans": [
                {
                  "approx_length": 367,
                  "score": 0.9876413345336914,
                  "spanid": 17
                },
                {
                  "approx_length": 261,
                  "score": 0.9514073133468628,
                  "spanid": 19
                }
              ]
            }
          ],
          "summary": [
            " DSConv :  Efficient Convolution Operator . Efficient convolution Operator is",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Handbook of Methods will be published in April 2015 .",
            " Metric value :  Uses extra training data Data evaluated on Submit Add a new evaluation result row . New task name :  Top - level area :  Adversarial Audio Computer Code Computer Vision Graphs Knowledge",
            " Markdown description description (optional ;   $ \\LaTeX $  enabled ) enabled . You can edit this . Add a new method name (e . g .  Rectified Linear Unit) or a",
            " ImageNet Paper introduces a new dataset? Add or remove datasets introduced in this paper . Save DSConv :  Efficient Convolution Operator .",
            " Quantization is a popular way of increasing the speed and memory usage of Convolution Neural Networks . DSConv is a flexible quantized convolution operator that replaces single precision operations with their far less expensive integer counterparts",
            " Submit results from this paper to get state - of - the - art GitHub badges and help the community compare results to other papers . Submit your code now .",
            " a free resource with all data licensed under CC - BY- BY-SA .  Terms Privacy Cookies policy .  Use of the site includes the content of this article ."
          ],
          "text_suggester": [
            {
              "input": "1x1",
              "weight": 28
            },
            {
              "input": "1x1 convolution convolutions",
              "weight": 1
            },
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a flexible quantized convolution operator",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 21
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 21
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a popular way",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 40
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "activations",
              "weight": 1
            },
            {
              "input": "add a new category",
              "weight": 37
            },
            {
              "input": "add remove mark official",
              "weight": 59
            },
            {
              "input": "adrian prisacariu",
              "weight": 9
            },
            {
              "input": "alexnet",
              "weight": 1
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "auxiliary classifier",
              "weight": 1
            },
            {
              "input": "average",
              "weight": 3
            },
            {
              "input": "average pooling",
              "weight": 1
            },
            {
              "input": "batch",
              "weight": 8
            },
            {
              "input": "batch normalization",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "block",
              "weight": 11
            },
            {
              "input": "blocks",
              "weight": 5
            },
            {
              "input": "blocks concatenated skip connection",
              "weight": 1
            },
            {
              "input": "both the kernel weights",
              "weight": 1
            },
            {
              "input": "bottleneck residual block",
              "weight": 1
            },
            {
              "input": "cnns",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 19
            },
            {
              "input": "concatenated skip connection",
              "weight": 9
            },
            {
              "input": "connection",
              "weight": 7
            },
            {
              "input": "connection blocks residual connection",
              "weight": 1
            },
            {
              "input": "connections",
              "weight": 17
            },
            {
              "input": "convolution",
              "weight": 14
            },
            {
              "input": "convolution convolutions",
              "weight": 1
            },
            {
              "input": "convolution neural networks",
              "weight": 1
            },
            {
              "input": "convolutional neural networks",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 11
            },
            {
              "input": "create a new account",
              "weight": 49
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 38
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 12
            },
            {
              "input": "dense",
              "weight": 3
            },
            {
              "input": "dense block",
              "weight": 1
            },
            {
              "input": "densenet",
              "weight": 1
            },
            {
              "input": "dsconv",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 96
            },
            {
              "input": "efficient convolution operator",
              "weight": 1
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feedforward networks",
              "weight": 1
            },
            {
              "input": "first",
              "weight": 9
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "functions",
              "weight": 14
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "global average pooling",
              "weight": 1
            },
            {
              "input": "global average pooling pooling operations",
              "weight": 1
            },
            {
              "input": "googlenet",
              "weight": 1
            },
            {
              "input": "iccv",
              "weight": 1
            },
            {
              "input": "image model",
              "weight": 1
            },
            {
              "input": "imagenet paper",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 16
            },
            {
              "input": "inception module",
              "weight": 1
            },
            {
              "input": "introduce",
              "weight": 12
            },
            {
              "input": "kaiming initialization",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "local",
              "weight": 5
            },
            {
              "input": "local response normalization",
              "weight": 1
            },
            {
              "input": "marcelo gennari",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "max pooling",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 38
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 19
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "miscellaneous components",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 18
            },
            {
              "input": "most popular neural network architectures",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 13
            },
            {
              "input": "nascimento",
              "weight": 1
            },
            {
              "input": "network weights",
              "weight": 1
            },
            {
              "input": "new",
              "weight": 13
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 86
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "normalization",
              "weight": 38
            },
            {
              "input": "official",
              "weight": 17
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "operations",
              "weight": 15
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "our model",
              "weight": 1
            },
            {
              "input": "output functions",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 19
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "pooling",
              "weight": 15
            },
            {
              "input": "pooling operations",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "quantization",
              "weight": 19
            },
            {
              "input": "regularization dense connections",
              "weight": 1
            },
            {
              "input": "relu activation functions",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 12
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "residual",
              "weight": 12
            },
            {
              "input": "residual block",
              "weight": 1
            },
            {
              "input": "resnet",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 38
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "roger fawcett",
              "weight": 1
            },
            {
              "input": "skip",
              "weight": 13
            },
            {
              "input": "skip connections",
              "weight": 1
            },
            {
              "input": "softmax",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 21
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "standard convolution",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 7
            },
            {
              "input": "task",
              "weight": 19
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 21
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 40
            },
            {
              "input": "the memory usage",
              "weight": 1
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the outputs",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the probability distributions",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the scenario",
              "weight": 1
            },
            {
              "input": "the speed",
              "weight": 1
            },
            {
              "input": "their far less expensive integer counterparts",
              "weight": 1
            },
            {
              "input": "this paper",
              "weight": 78
            },
            {
              "input": "training",
              "weight": 12
            },
            {
              "input": "training data",
              "weight": 1
            },
            {
              "input": "unlabelled data",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 10
            },
            {
              "input": "victor adrian prisacariu",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/dsconv-efficient-convolution-operator-1",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.039870257178146074,
        "_index": "cache_index",
        "_id": "cacheid_a5f195d3035778deae0cdc7d8ad2478b",
        "_type": "_doc",
        "highlight": {
          "content": [
            "*   * Browse State-of-the-Art \n  * <b>Datasets</b> \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals",
            "informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and <b>datasets</b>",
            "<b>Dataset</b>:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric",
            "×\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nImageNet\n\nPaper introduces a new <b>dataset</b>?"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0049202303085409075,
        "see_also": [
          {
            "doc_id": "cacheid_11ec0a7da71d03e416a09461c39d657d",
            "source_doc_id": "entity:user/1488:en",
            "title": "søren hansen"
          },
          {
            "doc_id": "cacheid_5151e91a297a0799bad40d54a0d2900d",
            "source_doc_id": "entity:user/788:en",
            "title": "spyridon syrrakos"
          },
          {
            "doc_id": "cacheid_df5f4987d12fbb96645fe8cc2de6ac4c",
            "source_doc_id": "entity:user/1025:en",
            "title": "jonas luft"
          },
          {
            "doc_id": "cacheid_15d1b0d8dfaee23cdfe5d0211614894a",
            "source_doc_id": "entity:user/1851:en",
            "title": "luisa serra"
          },
          {
            "doc_id": "cacheid_00a916083f8ac389e5869ba1ffd14b44",
            "source_doc_id": "entity:user/806:en",
            "title": "marcello pelillo"
          }
        ],
        "semantic_content": " . code implementations yet .  Submit your code now Tasks  _  _ Edit Add Remove  *   *   *   *  QUANTIZATION Datasets  _  _ Edit  *   *   *  ImageNet Results from the Paper  _  _ Edit Add Remove  *   *   *",
        "short_answer": [
          {
            "score": 0.08274656534194946,
            "start": 99,
            "end": 111,
            "answer": "QUANTIZATION"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n·\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020·6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI’ll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we’ll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write “import matplotlib.pyplot as plt”\nyou can use this library in the future simply as “plt”.\n\nNow let’s finally get our dataset in our working environment. We’ll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(“ <data path>”)_\n\n> Here “read_csv” is to read .csv files, you can use “read_excel” to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven’t really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run “df1.isnull().sum()” to get a quick\noverview of the missing records in your data_ ) the first thing you’ll notice\nis that not all data attributes are complete. You’ll notice “nan” in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n“ _df1.dropna()_ ” will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the “ _.fillna()_ ” function. “fillna()”\nalso lets you fill the missing value with the _preceding or succeeding value_\nby “bfill” and “ffill” parameters respectively.\n\nI mentioned that we’ll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute “Colour”\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15–20% of the data for testing purposes\n> and the rest for training.\n\nIt’s important to test your final model to get an idea of how good or bad your\nmodel is and it’s essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we’ll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I’d like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don’t already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‘on the rocks’ 🥃\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020·6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15–20 datum testing purpose rest training ’ important test final model idea good bad model ’ essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ’d like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock 🥃 Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We’ll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you’ll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " “  _ . dropna (  )   _    ” will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15–20%  of the data for testing purposes and the rest for training . It’s important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‘on the rocks’"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020·6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "· editors",
              "weight": 0
            },
            {
              "input": "“bfill",
              "weight": 0
            },
            {
              "input": "“colour",
              "weight": 0
            },
            {
              "input": "“ffill” parameters",
              "weight": 0
            },
            {
              "input": "“fillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.03368779924008902,
        "_index": "cache_index",
        "_id": "cacheid_183d7ea27ff58b571873adea323f779e",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let’s finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0045477034843233064,
        "see_also": [
          {
            "doc_id": "cacheid_3d5d579667b6758071da0a900e7a04a9",
            "source_doc_id": "entity:user/2008:en",
            "title": "hakim boulahya"
          },
          {
            "doc_id": "cacheid_e05f312b8cd6f63a806f30106b6618c1",
            "source_doc_id": "entity:user/402:en",
            "title": "patrick sieglerlathrop"
          },
          {
            "doc_id": "cacheid_25f5dcdb0e53bc406880a59a9dd069e0",
            "source_doc_id": "entity:user/1708:en",
            "title": "daniel dagostini"
          },
          {
            "doc_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‘on the rocks’ 🥃 Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app",
        "short_answer": [
          {
            "score": 0.033722374588251114,
            "start": 119,
            "end": 175,
            "answer": "Towards Data Science About Help Legal Get the Medium app"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n·\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020·6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI’ll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we’ll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write “import matplotlib.pyplot as plt”\nyou can use this library in the future simply as “plt”.\n\nNow let’s finally get our dataset in our working environment. We’ll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(“ <data path>”)_\n\n> Here “read_csv” is to read .csv files, you can use “read_excel” to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven’t really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run “df1.isnull().sum()” to get a quick\noverview of the missing records in your data_ ) the first thing you’ll notice\nis that not all data attributes are complete. You’ll notice “nan” in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n“ _df1.dropna()_ ” will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the “ _.fillna()_ ” function. “fillna()”\nalso lets you fill the missing value with the _preceding or succeeding value_\nby “bfill” and “ffill” parameters respectively.\n\nI mentioned that we’ll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute “Colour”\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15–20% of the data for testing purposes\n> and the rest for training.\n\nIt’s important to test your final model to get an idea of how good or bad your\nmodel is and it’s essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we’ll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I’d like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don’t already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‘on the rocks’ 🥃\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020·6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15–20 datum testing purpose rest training ’ important test final model idea good bad model ’ essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ’d like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock 🥃 Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We’ll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you’ll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " “  _ . dropna (  )   _    ” will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15–20%  of the data for testing purposes and the rest for training . It’s important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‘on the rocks’"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020·6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "· editors",
              "weight": 0
            },
            {
              "input": "“bfill",
              "weight": 0
            },
            {
              "input": "“colour",
              "weight": 0
            },
            {
              "input": "“ffill” parameters",
              "weight": 0
            },
            {
              "input": "“fillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.03368779924008902,
        "_index": "cache_index",
        "_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let’s finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0045477034843233064,
        "see_also": [
          {
            "doc_id": "cacheid_e05f312b8cd6f63a806f30106b6618c1",
            "source_doc_id": "entity:user/402:en",
            "title": "patrick sieglerlathrop"
          },
          {
            "doc_id": "cacheid_25f5dcdb0e53bc406880a59a9dd069e0",
            "source_doc_id": "entity:user/1708:en",
            "title": "daniel dagostini"
          },
          {
            "doc_id": "cacheid_183d7ea27ff58b571873adea323f779e",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_6368689ce10f1620a67409b0b15aa230",
            "source_doc_id": "https://cs.stackexchange.com/questions/70395/what-is-the-effect-of-hidden-layer-size",
            "title": "machine learning - What is the Effect of Hidden Layer Size? - Computer Science\nStack Exchange\n\n"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‘on the rocks’ 🥃 Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app",
        "short_answer": [
          {
            "score": 0.033722374588251114,
            "start": 119,
            "end": 175,
            "answer": "Towards Data Science About Help Legal Get the Medium app"
          }
        ]
      },
      {
        "_source": {
          "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n",
          "lemma_title": "begin Data Science project Apurva Puri Jul 2020 Towards Data Science",
          "content": "Get started\n\nOpen in app\n\nSign in\n\nGet started\n\nFollow\n\n557K Followers\n\n·\n\nEditors' PicksFeaturesExploreContribute\n\nAbout\n\nGet started\n\nOpen in app\n\n  Where to begin your Data Science project\n\n   Data preprocessing decoded for beginners.\n\nApurva Puri\n\nJul 10, 2020·6 min read\n\nSo now that we know a few basics for data science, it is important that you\nput the theoretical knowledge and start with beginner level projects to\nenhance your skills.\n\nThe first step in any data science project is data preprocessing. The raw data\nyou get from various sources is not in a form that one can directly apply\nalgorithms on it. It needs to be cleaned, missing data needs to be addressed,\ndata needs to be transformed so that algorithms can be applied to it.\n\nI’ll be talking about simple data sets that consist of only categorical and\nnumerical data.\n\nPhoto by Mika Baumeister on Unsplash\n\nWe need to find a dataset to work on. I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/datasets\n  * https://catalog.data.gov/dataset\n  * https://datasetsearch.research.google.com/\n  * https://archive.ics.uci.edu/ml/index.php\n  * https://data.gov.in/\n\nBesides these available datasets, one can also make their own datasets by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.\n\nWith data in your hand, open your preferred working environment (I use Jupyter\nNotebooks) and start by importing libraries.\n\n _For starters we’ll import_   _Pandas _, it helps to organize and\nmanipulate data efficiently and is very useful when it comes to data analysis.\nNext, we import_   _NumPy _, which helps with manipulating numerical data.\nAdd_   _matplotlib.pyplot _for plotting simple graphs._\n\n> One easy way to use these libraries is to keep a shortcut for them while\n> importing.\n\nFor example, while importing if you write “import matplotlib.pyplot as plt”\nyou can use this library in the future simply as “plt”.\n\nNow let’s finally get our dataset in our working environment. We’ll be\naccessing our data as a  DataFrame . DataFrame is an object of Pandas, you\ncan visualise a DataFrame as a spreadsheet.\n\nSay you want to name your DataFrame df1, so you can load your dataset onto df1\nas:\n\n _df1=pandas.read_csv(“ <data path>”)_\n\n> Here “read_csv” is to read .csv files, you can use “read_excel” to read .xls\n> files. Similarly, Pandas provides you tools to read .html, .json, .sql\n> files.\n\nSo this was just the introductory part, we haven’t really done any\nmodifications to our data. Now we begin the interesting part.\n\nWhen you begin to observe your data ( _run “df1.isnull().sum()” to get a quick\noverview of the missing records in your data_ ) the first thing you’ll notice\nis that not all data attributes are complete. You’ll notice “nan” in many\nplaces. This right here is your missing data. Any data you work on will always\nhave missing values. There are a few techniques to tackle this issue.\n\nThe naive method would be to  drop the rows that contain any missing value. \nYou generally will be working on datasets containing thousands of tuples, so\nremoving a few hundreds should not make a difference, right?\n\n“ _df1.dropna()_ ” will drop all the rows containing any missing value.\n\nBut what if the rows you are deleting represent some crucial information about\nthe data? So we try and avoid deleting any entries.\n\n> Restrict dropping rows only when missing values account for less than 1% of\n> the data.\n\nAnother approach we take is by filling up the missing values. One way to do so\nis by using the  Imputer class of sklearn library . The Scikit Learn or\nsklearn library in python consists of a lot of useful tools for machine\nlearning and statistical modelling. This lets you fill the missing values with\nthe _mean (mode/median)_ of the existing values.\n\nA similar thing can be achieved using the “ _.fillna()_ ” function. “fillna()”\nalso lets you fill the missing value with the _preceding or succeeding value_\nby “bfill” and “ffill” parameters respectively.\n\nI mentioned that we’ll be dealing with categorical and numerical data.\n\n> The various machine learning algorithms require inputs and outputs to be\n> numbers.\n\nWe will import  LabelEncoder class from sklearn.preprocessing . This will\nvery quickly assign a number to each categorical variable.\n\nSay you have 4 different variables- Green, Yellow, Blue and Red. So using the\nabove method, your code will map each of these variables to 0, 1, 2 and 3\nrespectively.\n\nUsing LabelEncoder has a limitation- when you set Colour as one of the\nvariables in your model, the model will interpret that Yellow(1) is more\nimportant than Green(0).\n\n> It will give weightage to the variables according to the number they are\n> assigned.\n\nThis works perfectly when our categorical variables are similar to say Small,\nMedium, Large because Small<Medium<Large.\n\n> Hence for variables that do show some precedence, LabelEncoder works fine.\n\nTo tackle the problem in case of the attribute Colours, we will introduce\n_Dummy Variables_. In Dummy Variables we have one column for each categorical\nvariable. Each column will have only two values- 0 or 1.\n\nIntroducing Dummy Variables for attribute “Colour”\n\nWhen you create dummy variables and input them in a model, you ensure that\neach of these variables is getting equal importance. This can be achieved\nusing the  OneHotEncoder class in sklearn.preprocessing. \n\nNow that we are done with most of the preprocessing we can go ahead and divide\nour data into training and testing datasets.\n\n> A general rule of thumb is to keep 15–20% of the data for testing purposes\n> and the rest for training.\n\nIt’s important to test your final model to get an idea of how good or bad your\nmodel is and it’s essential to not test your model on the same data that you\nare training it on. We again have the sklearn library to rescue. The\n train_test_split class of sklearn.cross_validation  will make two random\nsubsets of the existing dataset.\n\nOne last thing we’ll do before applying a suitable algorithm- _feature\nscaling_. A majority of the algorithms like K-means, SVM, linear regression,\nlogistic regression, etc are very sensitive to the scale of the attributes,\nthat is they require all the data to be on the same scale. Many distance-based\nmodels use Euclidean distance, if attributes are on different scales then one\nof the attributes will tend to dominate the distance. Even if the appropriate\nalgorithm is not based on distance, scaling helps the algorithm converge\nfaster. I’d like to add here that tree-based algorithms are not affected much\nby feature scaling.\n\nSo there are two ways to bring down all the attributes to the same scale-\n normalisation and standardisation \n\nNormalisation scales the data from 0 to 1, using a pretty simple formula:\n\nThis can be done by importing  MinMaxScalar class from\nsklearn.preprocessing. \n\nIn standardisation, we use the mean and standard deviation of the attribute to\nscale our data.\n\nThe scaled data has mean 0 and standard deviation 1. There is no particular\nrange that the resultant data is restricted to.\n\nFor standardisation, import  StandardScaler class from\nsklearn.preprocessing .\n\nIt is advisable to split your data BEFORE feature scaling. You fit the scaler\non training data and use it to transform the testing data.\n\nSo with this, your data is ready to be used to build models. Remember to\npractice preprocessing thoroughly, this stage takes a lot of time.\n\nIf you have any suggestions or questions, you can reach out to me here.\n\n   Apurva Puri\n\nI like data science, painting and I sometimes cook. I also happen to be a\nfeminist. https://www.linkedin.com/in/apurva-puri-40124a157/\n\nFollow\n\n133\n\n   Sign up for The Variable\n\n    By Towards Data Science\n\nEvery Thursday, the Variable delivers the very best of Towards Data Science:\nfrom hands-on tutorials and cutting-edge research to original features you\ndon't want to miss. Take a look.\n\nGet this newsletter\n\nBy signing up, you will create a Medium account if you don’t already have one.\nReview our Privacy Policy for more information about our privacy practices.\n\n  Check your inbox   \nMedium sent you an email at  to complete your subscription.\n\n133\n\n133\n\n  * Data Science\n  * Machine Learning\n  * Data Analysis\n  * Data Preprocessing\n  * Beginner\n\n   More from Towards Data Science\n\nFollow\n\nYour home for data science. A Medium publication sharing concepts, ideas and\ncodes.\n\nRead more from Towards Data Science\n\n   More From Medium\n\n   11 Python Built-in Functions You Should Know\n\nChristopher Tao in Towards Data Science\n\n   Top 10 Python Libraries for Data Science in 2021\n\nTerence Shin in Towards Data Science\n\n   Building a sonar sensor array with Arduino and Python\n\nAlberto Naranjo in Towards Data Science\n\n   How to Extract the Text from PDFs Using Python and the Google Cloud Vision\nAPI\n\nSilvia Zeamer in Towards Data Science\n\n   Jupyter has a perfect code editor\n\nDimitris Poulopoulos in Towards Data Science\n\n   The Making of AI Snake Oil\n\nAdnan Haider in Towards Data Science\n\n   Multi-Agent Deep Reinforcement Learning in 13 Lines of Code Using\nPettingZoo\n\nJustin Terry in Towards Data Science\n\n   Machine Learning ‘on the rocks’ 🥃\n\nGerasimos Plegas in Towards Data Science\n\nAbout\n\nHelp\n\nLegal\n\nGet the Medium app\n\n",
          "lemma_content": "start open app sign start follow 557 K Followers editor picksfeaturesexplorecontribute start open app begin Data Science project Data preprocessing decode beginner Apurva Puri Jul 10 2020·6 min read know few basic datum science important put theoretical knowledge start beginner level project enhance skill first step datum science project data preprocessing raw datum get various source form can apply algorithm need clean miss datum need address datum need transform algorithm can apply will talk simple data set consist only categorical numerical datum Photo Mika Baumeister Unsplash need find dataset work will list few resource can check https://www.kaggle.com dataset https://catalog.data.gov dataset https://datasetsearch.research.google.com/ https://archive.ics.uci.edu ml https://data.gov.in/ available dataset can make own dataset scrape datum web python inbuilt library help process datum hand open preferred work environment use Jupyter Notebooks start import library _ starter will import _ Pandas _ help organize manipulate datum useful come datum analysis import _ _ NumPy _ help manipulate numerical datum add _ _ matplotlib.pyplot _ plot simple graph _ one easy way use library keep shortcut import example import write import matplotlib.pyplot plt can use library future plt let dataset work environment will access datum DataFrame DataFrame object Pandas can visualise DataFrame spreadsheet say want name DataFrame df1 can load dataset df1 _ df1 = pandas.read_csv data path _ read_csv read file can use read_excel read file Pandas provide tool read .json file introductory part do modification datum begin interesting part begin observe datum _ run df1.isnull quick overview miss record datum _ first thing will notice datum attribute complete will notice nan many place miss datum datum work will miss value few technique tackle issue naive method would drop row contain miss value will work dataset contain thousand tuple remove few hundred should make difference right _ df1.dropna _ will drop row contain miss value row delete represent crucial information datum try avoid delete entry restrict drop row miss value account less 1 datum approach take fill miss value one way use Imputer class sklearn library Scikit learn sklearn library python consist lot useful tool machine learning statistical modelling let fill miss value _ mean mode median _ exist value similar thing can achieve use _ _ function fillna let fill miss value _ precede succeed value _ bfill ffill parameter mention will deal categorical numerical datum various machine learning algorithms require input output number will import LabelEncoder class sklearn.preprocesse will assign number categorical variable say 4 different variables- Green Yellow Blue Red use above method code will map variable 0 1 2 3 use LabelEncoder limitation- set Colour one variable model model will interpret Yellow 1 important Green 0 will give weightage variable accord number assign work categorical variable similar say Small medium large small medium large variable show precedence LabelEncoder work tackle problem case attribute Colours will introduce _ Dummy Variables _ Dummy variable one column categorical variable column will two 0 1 introduce dummy variable attribute colour create dummy variable input model ensure variable get equal importance can achieve use onehotencoder class sklearn.preprocessing do most preprocessing can go divide datum training testing dataset general rule thumb keep 15–20 datum testing purpose rest training ’ important test final model idea good bad model ’ essential test model same datum train sklearn library rescue train_test_split class sklearn.cross_validation will make two random subset exist dataset one last thing will apply suitable algorithm- _ feature scale _ majority algorithm K-means SVM linear regression logistic regression sensitive scale attribute require datum same scale many distance-based model use Euclidean distance attribute different scale one attribute will tend dominate distance appropriate algorithm base distance scale help algorithm converge ’d like add tree-based algorithm affect feature scale two way bring attribute same scale- normalisation standardisation Normalisation scale datum 0 1 use simple formula can do import MinMaxScalar class sklearn.preprocesse standardisation use mean standard deviation attribute scale datum scaled datum mean 0 standard deviation 1 particular range resultant datum restrict standardisation import StandardScaler class sklearn.preprocesse advisable split datum feature scale fit scaler training datum use transform testing datum data ready use build model remember practice preprocessing stage take lot time suggestion question can reach Apurva Puri like datum science painting cook happen feminist https://www.linkedin.com apurva-puri-40124a157/ follow 133 sign variable Towards Data Science Thursday variable deliver good Towards Data Science hands-on tutorial cutting-edge research original feature want miss take look newsletter sign will create Medium account one review Privacy Policy more information privacy practice check inbox medium send email complete subscription 133 133 data science Machine Learning Data Analysis data preprocessing beginner Towards Data Science follow home datum science Medium publication sharing concept idea code read Towards Data Science Medium 11 Python Built-in function Should know Christopher Tao Towards Data Science Top 10 Python Libraries Data Science 2021 Terence Shin Towards Data Science build sonar sensor array Arduino Python Alberto Naranjo Towards Data Science extract Text pdf use Python Google Cloud Vision API Silvia Zeamer Towards Data Science Jupyter perfect code editor Dimitris Poulopoulos Towards Data Science making AI Snake Oil Adnan Haider Towards Data Science Multi-Agent Deep Reinforcement learn 13 line Code use PettingZoo Justin Terry Towards Data Science Machine Learning rock 🥃 Gerasimos Plegas Towards Data Science help legal Medium app",
          "kg_generic": [
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Apurva Puri  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Jul 10",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Mika Baumeister",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://catalog.data.gov",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://datasetsearch.research.google.com/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://archive.ics.uci.edu",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://data.gov.in/",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "python",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter Notebooks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandas",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DataFrame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "machine learning algorithms",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Colour",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "LabelEncoder",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "K-means",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "SVM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Euclidean distance",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "https://www.linkedin.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Variable",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Terence Shin",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Arduino",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Silvia Zeamer",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jupyter",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Adnan Haider",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PettingZoo",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Justin",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Towards Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data preprocessing",
              "property": "decode for",
              "value": "beginner",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "few basic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "know",
              "value": "basic for datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "put",
              "value": "theoretical knowledge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "get from",
              "value": "various source",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can directly apply",
              "value": "algorithm",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one",
              "property": "can also make",
              "value": "own dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "inbuilt",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "Jupyter Notebooks",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "come to",
              "value": "datum analysis",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "import",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "write",
              "value": "import",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "library",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can visualise",
              "value": "DataFrame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can load",
              "value": "dataset onto df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "read_excel",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Pandas",
              "property": "provide",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "begin",
              "value": "interesting part",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_",
              "property": "run",
              "value": "df1.isnull",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will notice",
              "value": "nan",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "contain",
              "value": "thousand of tuple",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "few hundred",
              "property": "make",
              "value": "difference",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ df1.dropna ( ) _",
              "property": "will drop",
              "value": "the row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the row",
              "property": "contain",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "delete represent",
              "value": "crucial information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "row",
              "property": "only when miss",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "python",
              "property": "consist of",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similar thing",
              "property": "achieve use",
              "value": "\" _ .fillna ( ) _ \" function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fill",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "machine learning algorithms",
              "property": "require",
              "value": "input",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will import",
              "value": "LabelEncoder class",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "set",
              "value": "Colour",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "weightage",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will give",
              "value": "the variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the variable",
              "property": "accord to",
              "value": "the number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will introduce",
              "value": "_ Dummy Variables _",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "dummy variable",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "  train_test_split class",
              "property": "will make",
              "value": "two random subset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "suitable algorithm- _ feature",
              "property": "scale",
              "value": "_",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "require",
              "value": "the datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many distance-based model",
              "property": "use",
              "value": "Euclidean distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "appropriate algorithm",
              "property": "base on",
              "value": "distance",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "normalisation and standardisation    Normalisation",
              "property": "scale",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "mean and standard deviation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "fit",
              "value": "scaler on training datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "stage",
              "property": "take",
              "value": "lot of time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "like",
              "value": "datum science",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "Medium account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "medium",
              "property": "send",
              "value": "email",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "Should know",
              "value": "Christopher Tao",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pdf",
              "property": "use",
              "value": "Python",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Reinforcement",
              "property": "learn in",
              "value": "13 line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "PettingZoo",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Code",
              "property": "use",
              "value": "Justin Terry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.310967150144279,
                0.21716110035777092,
                0.13738683052361012,
                0.17102461494505405,
                0.05602000281214714,
                0.047368207946419716,
                0.04377549979835749,
                0.01629648730158806
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2830949863418937,
                0.21704732440412045,
                0.18770897574722767,
                0.13606735691428185,
                0.05943256709724665,
                0.05146315600723028,
                0.017434975132346153,
                0.04775076545774937
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.311472050845623,
                0.23256210424005985,
                0.07928709592670202,
                0.15021300874650478,
                0.09044186398386955,
                0.06210090406239033,
                0.05475530307739973,
                0.019167721271514893
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.14854837581515312,
                0.27860944624990225,
                0.22047019051387906,
                0.10441907495260239,
                0.12019194848835468,
                0.07155361119657755,
                0.024968774989247322,
                0.03123862762004137
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31310281716287136,
                0.20797098986804485,
                0.10597821418195963,
                0.04376057907938957,
                0.0686134323477745,
                0.12425295822322369,
                0.085479237139225,
                0.050841729156672955
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "machine learning",
                "computer vision"
              ],
              "scores": [
                0.30981375090777874,
                0.22489075548946857,
                0.1368550006300211,
                0.065422966144979,
                0.032912418246269226,
                0.08995629474520683,
                0.10677535831928253,
                0.03337351977825165
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39683534437790513,
                0.19224699959158897,
                0.09803074318915606,
                0.06504962407052517,
                0.07781242113560438,
                0.11087783053517342,
                0.02339600957930088,
                0.03575096372514963
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24437756650149822,
                0.2558829225599766,
                0.14862842671573162,
                0.13288091123104095,
                0.08392701111733913,
                0.06250732112675905,
                0.02960433065891266,
                0.04219152219593525
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.7970818625763059,
                0.057227422716096044,
                0.058362404583022,
                0.024442085064947605,
                0.02325124479830265,
                0.021405492909252644,
                0.006678326986730099,
                0.011551134986802936
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5200754879042506,
                0.15364927938207984,
                0.06800784496590495,
                0.06077608605846763,
                0.1053435793146491,
                0.04367787344381213,
                0.03235421050339937,
                0.01611548475921154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22017323598265648,
                0.13648344948887825,
                0.18107747752219439,
                0.14346510730683804,
                0.16239936091005802,
                0.08430606219917536,
                0.024993866682052612,
                0.04710142035037279
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25545278936624527,
                0.18372841645032167,
                0.22417804691940546,
                0.09632569923996925,
                0.09437116980552673,
                0.06514267064630985,
                0.05894722603261471,
                0.021853916347026825
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5688561201095581,
                0.14336295379325747,
                0.0922159356996417,
                0.07007153611630201,
                0.046126993373036385,
                0.04214075952768326,
                0.010704529471695423,
                0.02652130462229252
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2525917738676071,
                0.24561712052673101,
                0.1890852488577366,
                0.0887689758092165,
                0.0903322184458375,
                0.06419548857957125,
                0.05439789034426212,
                0.015011414885520935
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.351884450763464,
                0.1538881901651621,
                0.1742266369983554,
                0.07484326511621475,
                0.10838210675865412,
                0.07283448427915573,
                0.04501738399267197,
                0.018923524767160416
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.46185446716845036,
                0.15438699163496494,
                0.12492558266967535,
                0.08998766634613276,
                0.0656138313934207,
                0.04967951029539108,
                0.015538597479462624,
                0.03801332972943783
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "deep learning",
                "neuromorphic computing",
                "natural language processing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.27184304408729076,
                0.12480379454791546,
                0.19297714158892632,
                0.18268766812980175,
                0.029991714283823967,
                0.09859209507703781,
                0.06291799061000347,
                0.03618644271045923
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8681435189209878,
                0.03899910650216043,
                0.043431839207187295,
                0.020578877069056034,
                0.012171713868156075,
                0.006525571807287633,
                0.003078295150771737,
                0.007071040105074644
              ]
            }
          ],
          "sentiment": [
            {
              "label": "POSITIVE",
              "score": 0.9656835794448853,
              "spans": [
                {
                  "approx_length": 100,
                  "score": 0.9656835794448853,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.2876030676292651,
              "spans": [
                {
                  "approx_length": 340,
                  "score": 0.7793125510215759,
                  "spanid": 0
                },
                {
                  "approx_length": 258,
                  "score": 0.9879376888275146,
                  "spanid": 5
                },
                {
                  "approx_length": 262,
                  "score": 0.7804586887359619,
                  "spanid": 9
                },
                {
                  "approx_length": 276,
                  "score": 0.999335527420044,
                  "spanid": 17
                },
                {
                  "approx_length": 290,
                  "score": 0.9929057359695435,
                  "spanid": 18
                },
                {
                  "approx_length": 328,
                  "score": 0.9985118508338928,
                  "spanid": 23
                },
                {
                  "approx_length": 253,
                  "score": 0.9840919375419617,
                  "spanid": 27
                },
                {
                  "approx_length": 305,
                  "score": 0.9994293451309204,
                  "spanid": 28
                },
                {
                  "approx_length": 352,
                  "score": 0.9738619327545166,
                  "spanid": 30
                },
                {
                  "approx_length": 377,
                  "score": 0.9950559735298157,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6786476156928323,
              "spans": [
                {
                  "approx_length": 320,
                  "score": 0.998051643371582,
                  "spanid": 1
                },
                {
                  "approx_length": 313,
                  "score": 0.9959000945091248,
                  "spanid": 2
                },
                {
                  "approx_length": 216,
                  "score": 0.9856579303741455,
                  "spanid": 3
                },
                {
                  "approx_length": 274,
                  "score": 0.9362325072288513,
                  "spanid": 4
                },
                {
                  "approx_length": 281,
                  "score": 0.9949460029602051,
                  "spanid": 6
                },
                {
                  "approx_length": 296,
                  "score": 0.996052086353302,
                  "spanid": 7
                },
                {
                  "approx_length": 202,
                  "score": 0.9974945783615112,
                  "spanid": 8
                },
                {
                  "approx_length": 260,
                  "score": 0.998965859413147,
                  "spanid": 10
                },
                {
                  "approx_length": 317,
                  "score": 0.999443531036377,
                  "spanid": 11
                },
                {
                  "approx_length": 279,
                  "score": 0.9988569617271423,
                  "spanid": 12
                },
                {
                  "approx_length": 284,
                  "score": 0.9761013388633728,
                  "spanid": 13
                },
                {
                  "approx_length": 242,
                  "score": 0.9969353079795837,
                  "spanid": 14
                },
                {
                  "approx_length": 343,
                  "score": 0.9983651041984558,
                  "spanid": 15
                },
                {
                  "approx_length": 277,
                  "score": 0.9917423129081726,
                  "spanid": 16
                },
                {
                  "approx_length": 332,
                  "score": 0.894308865070343,
                  "spanid": 19
                },
                {
                  "approx_length": 294,
                  "score": 0.9978940486907959,
                  "spanid": 20
                },
                {
                  "approx_length": 296,
                  "score": 0.9913294315338135,
                  "spanid": 21
                },
                {
                  "approx_length": 293,
                  "score": 0.7614796161651611,
                  "spanid": 22
                },
                {
                  "approx_length": 352,
                  "score": 0.9970987439155579,
                  "spanid": 24
                },
                {
                  "approx_length": 329,
                  "score": 0.9952457547187805,
                  "spanid": 25
                },
                {
                  "approx_length": 300,
                  "score": 0.9963453412055969,
                  "spanid": 26
                },
                {
                  "approx_length": 306,
                  "score": 0.9943589568138123,
                  "spanid": 29
                },
                {
                  "approx_length": 172,
                  "score": 0.9025653004646301,
                  "spanid": 32
                }
              ]
            }
          ],
          "summary": [
            " Apurva Puri: Where to begin your Data Science project  . Apur",
            " Data preprocessing is the first step in any data science project is data preprocessing . The raw data you get from various sources is not in a form that one can directly apply algorithms on it . It needs to be cleaned",
            " Inbuilt python has inbuilt libraries to help you with this process . One easy way to use these libraries is to keep a shortcut for them while importing . We’ll be accessing our data as a DataFrame .",
            " Pandas provides you tools to read  . csv files and excels files . The first thing you’ll notice is that not all data attributes are complete . There are a few techniques to tackle this issue .",
            " “  _ . dropna (  )   _    ” will drop all the rows containing any missing value . But what if the rows you are deleting represent some crucial information about the data?",
            " Using LabelEncoder has a limitation -  when you set Colour as one of the variables in your model,  the model will interpret that Yellow ( 1 ) is more important than Green ( 0) The model will then",
            " A general rule of thumb is to keep 15–20%  of the data for testing purposes and the rest for training . It’s important to test your final model to get an idea of how good or bad",
            " Tree - based algorithms are not affected much by feature scaling . So there are two ways to bring down all the attributes to the same scale -  normalisation and standardisation . Normalisation scales the data from 0 to 1",
            " The Variable delivers the very best of the best of Towards Data Science . From hands - on tutorials and cutting - edge research to original features you don't want to miss . Follow 133 Sign up for The Variable by Towards Data",
            " Deep Reinforcement Learning in 13 Lines of Code in 13 lines of Code using PettingZoo . Justin Terry in Towards Data Science Machine Learning ‘on the rocks’"
          ],
          "text_suggester": [
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "your data science project",
              "weight": 0
            },
            {
              "input": "13 lines",
              "weight": 0
            },
            {
              "input": "2020·6 min",
              "weight": 11
            },
            {
              "input": "557k followers",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataframe",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a difference",
              "weight": 0
            },
            {
              "input": "a feminist",
              "weight": 0
            },
            {
              "input": "a few basics",
              "weight": 0
            },
            {
              "input": "a few hundred",
              "weight": 3
            },
            {
              "input": "a few hundreds",
              "weight": 0
            },
            {
              "input": "a few resources",
              "weight": 0
            },
            {
              "input": "a few techniques",
              "weight": 0
            },
            {
              "input": "a form",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 8
            },
            {
              "input": "a majority",
              "weight": 0
            },
            {
              "input": "a medium account",
              "weight": 0
            },
            {
              "input": "a medium publication",
              "weight": 0
            },
            {
              "input": "a model",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a perfect code editor",
              "weight": 0
            },
            {
              "input": "a pretty simple formula",
              "weight": 0
            },
            {
              "input": "a quick overview",
              "weight": 0
            },
            {
              "input": "a shortcut",
              "weight": 0
            },
            {
              "input": "a similar thing",
              "weight": 0
            },
            {
              "input": "a sonar sensor array",
              "weight": 0
            },
            {
              "input": "a spreadsheet",
              "weight": 0
            },
            {
              "input": "adnan haider",
              "weight": 0
            },
            {
              "input": "ai snake oil",
              "weight": 0
            },
            {
              "input": "alberto naranjo",
              "weight": 0
            },
            {
              "input": "algorithm",
              "weight": 7
            },
            {
              "input": "algorithm can be apply",
              "weight": 10
            },
            {
              "input": "algorithms",
              "weight": 0
            },
            {
              "input": "all the attributes",
              "weight": 0
            },
            {
              "input": "all the data",
              "weight": 0
            },
            {
              "input": "all the rows",
              "weight": 0
            },
            {
              "input": "an email",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "another approach",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any data science project",
              "weight": 0
            },
            {
              "input": "any entries",
              "weight": 0
            },
            {
              "input": "any missing value",
              "weight": 0
            },
            {
              "input": "any modifications",
              "weight": 0
            },
            {
              "input": "any suggestions",
              "weight": 0
            },
            {
              "input": "app",
              "weight": 22
            },
            {
              "input": "apply",
              "weight": 2
            },
            {
              "input": "apurva puri",
              "weight": 0
            },
            {
              "input": "arduino",
              "weight": 0
            },
            {
              "input": "attribute",
              "weight": 7
            },
            {
              "input": "attributes",
              "weight": 0
            },
            {
              "input": "begin",
              "weight": 5
            },
            {
              "input": "beginner",
              "weight": 7
            },
            {
              "input": "beginner level projects",
              "weight": 0
            },
            {
              "input": "beginners",
              "weight": 0
            },
            {
              "input": "blue",
              "weight": 0
            },
            {
              "input": "but what",
              "weight": 0
            },
            {
              "input": "categorical",
              "weight": 6
            },
            {
              "input": "categorical and numerical data",
              "weight": 0
            },
            {
              "input": "christopher tao",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 7
            },
            {
              "input": "code",
              "weight": 1
            },
            {
              "input": "codes",
              "weight": 0
            },
            {
              "input": "concepts",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 6
            },
            {
              "input": "create a medium account",
              "weight": 20
            },
            {
              "input": "data",
              "weight": 3
            },
            {
              "input": "data analysis",
              "weight": 0
            },
            {
              "input": "data preprocessing",
              "weight": 18
            },
            {
              "input": "data science machine learning",
              "weight": 0
            },
            {
              "input": "dataframe",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 4
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 29
            },
            {
              "input": "different scale then one",
              "weight": 59
            },
            {
              "input": "different scales",
              "weight": 0
            },
            {
              "input": "dimitris poulopoulos",
              "weight": 0
            },
            {
              "input": "drop",
              "weight": 2
            },
            {
              "input": "dummy variables",
              "weight": 0
            },
            {
              "input": "each categorical variable",
              "weight": 8
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "equal importance",
              "weight": 0
            },
            {
              "input": "euclidean distance",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 4
            },
            {
              "input": "few",
              "weight": 9
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "fill",
              "weight": 6
            },
            {
              "input": "fill the miss value",
              "weight": 17
            },
            {
              "input": "follow",
              "weight": 9
            },
            {
              "input": "gerasimos plegas",
              "weight": 0
            },
            {
              "input": "google cloud vision api",
              "weight": 41
            },
            {
              "input": "green",
              "weight": 0
            },
            {
              "input": "help",
              "weight": 2
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 7
            },
            {
              "input": "important",
              "weight": 3
            },
            {
              "input": "inputs",
              "weight": 0
            },
            {
              "input": "jul 10",
              "weight": 3
            },
            {
              "input": "jupyter",
              "weight": 0
            },
            {
              "input": "jupyter notebooks",
              "weight": 0
            },
            {
              "input": "just the introductory part",
              "weight": 0
            },
            {
              "input": "justin terry",
              "weight": 0
            },
            {
              "input": "labelencoder",
              "weight": 0
            },
            {
              "input": "labelencoder class",
              "weight": 0
            },
            {
              "input": "let",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 14
            },
            {
              "input": "linear regression",
              "weight": 0
            },
            {
              "input": "list a few resource",
              "weight": 26
            },
            {
              "input": "logistic regression",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 6
            },
            {
              "input": "make two random subset",
              "weight": 39
            },
            {
              "input": "many places",
              "weight": 0
            },
            {
              "input": "mean",
              "weight": 8
            },
            {
              "input": "medium",
              "weight": 7
            },
            {
              "input": "mika baumeister",
              "weight": 0
            },
            {
              "input": "minmaxscalar class",
              "weight": 0
            },
            {
              "input": "miss",
              "weight": 3
            },
            {
              "input": "missing values",
              "weight": 0
            },
            {
              "input": "model",
              "weight": 4
            },
            {
              "input": "models",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "most of the preprocessing",
              "weight": 16
            },
            {
              "input": "need",
              "weight": 2
            },
            {
              "input": "newsletter by sign",
              "weight": 16
            },
            {
              "input": "no particular range",
              "weight": 0
            },
            {
              "input": "normalisation and standardisation normalisation",
              "weight": 0
            },
            {
              "input": "not all data attributes",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 3
            },
            {
              "input": "numbers",
              "weight": 0
            },
            {
              "input": "numerical",
              "weight": 5
            },
            {
              "input": "numerical data",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 40
            },
            {
              "input": "one column",
              "weight": 0
            },
            {
              "input": "one easy way",
              "weight": 0
            },
            {
              "input": "one last thing",
              "weight": 0
            },
            {
              "input": "one of the variable",
              "weight": 57
            },
            {
              "input": "one way",
              "weight": 0
            },
            {
              "input": "only categorical and numerical data",
              "weight": 0
            },
            {
              "input": "only two",
              "weight": 3
            },
            {
              "input": "open",
              "weight": 3
            },
            {
              "input": "original features",
              "weight": 0
            },
            {
              "input": "our categorical variables",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our privacy policy",
              "weight": 0
            },
            {
              "input": "our privacy practices",
              "weight": 0
            },
            {
              "input": "our working environment",
              "weight": 0
            },
            {
              "input": "outputs",
              "weight": 0
            },
            {
              "input": "pandas",
              "weight": 0
            },
            {
              "input": "pdfs",
              "weight": 0
            },
            {
              "input": "pettingzoo",
              "weight": 0
            },
            {
              "input": "photo",
              "weight": 0
            },
            {
              "input": "preprocessing",
              "weight": 7
            },
            {
              "input": "project",
              "weight": 5
            },
            {
              "input": "python",
              "weight": 29
            },
            {
              "input": "questions",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "red",
              "weight": 0
            },
            {
              "input": "require all the datum",
              "weight": 37
            },
            {
              "input": "resultant datum be restrict",
              "weight": 42
            },
            {
              "input": "row",
              "weight": 4
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 5
            },
            {
              "input": "say",
              "weight": 3
            },
            {
              "input": "scale",
              "weight": 6
            },
            {
              "input": "scaled datum have mean 0",
              "weight": 75
            },
            {
              "input": "science",
              "weight": 3
            },
            {
              "input": "scraping data",
              "weight": 0
            },
            {
              "input": "sensitive to the scale",
              "weight": 14
            },
            {
              "input": "set colour as one",
              "weight": 67
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in get",
              "weight": 3
            },
            {
              "input": "silvia zeamer",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 4
            },
            {
              "input": "simple data sets",
              "weight": 0
            },
            {
              "input": "simple graphs",
              "weight": 0
            },
            {
              "input": "sklearn",
              "weight": 5
            },
            {
              "input": "sklearn library",
              "weight": 0
            },
            {
              "input": "some crucial information",
              "weight": 0
            },
            {
              "input": "some precedence",
              "weight": 0
            },
            {
              "input": "standard deviation",
              "weight": 0
            },
            {
              "input": "standardisation",
              "weight": 14
            },
            {
              "input": "standardscaler class",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 5
            },
            {
              "input": "starters",
              "weight": 0
            },
            {
              "input": "statistical modelling",
              "weight": 0
            },
            {
              "input": "svm",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 2
            },
            {
              "input": "terence shin",
              "weight": 0
            },
            {
              "input": "testing",
              "weight": 5
            },
            {
              "input": "testing purposes",
              "weight": 0
            },
            {
              "input": "the imputer class",
              "weight": 0
            },
            {
              "input": "the onehotencoder class",
              "weight": 0
            },
            {
              "input": "the above method",
              "weight": 0
            },
            {
              "input": "the algorithm",
              "weight": 0
            },
            {
              "input": "the algorithms",
              "weight": 0
            },
            {
              "input": "the appropriate algorithm",
              "weight": 0
            },
            {
              "input": "the attribute",
              "weight": 0
            },
            {
              "input": "the attribute colours",
              "weight": 0
            },
            {
              "input": "the attributes",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the distance",
              "weight": 0
            },
            {
              "input": "the existing dataset",
              "weight": 0
            },
            {
              "input": "the existing values",
              "weight": 0
            },
            {
              "input": "the first step",
              "weight": 0
            },
            {
              "input": "the first thing",
              "weight": 0
            },
            {
              "input": "the future",
              "weight": 0
            },
            {
              "input": "the google cloud vision api",
              "weight": 3
            },
            {
              "input": "the interesting part",
              "weight": 0
            },
            {
              "input": "the making",
              "weight": 0
            },
            {
              "input": "the making of ai snake oil",
              "weight": 3
            },
            {
              "input": "the mean and standard deviation",
              "weight": 0
            },
            {
              "input": "the medium",
              "weight": 0
            },
            {
              "input": "the missing records",
              "weight": 0
            },
            {
              "input": "the missing value",
              "weight": 0
            },
            {
              "input": "the missing values",
              "weight": 0
            },
            {
              "input": "the model",
              "weight": 0
            },
            {
              "input": "the naive method",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 0
            },
            {
              "input": "the preprocessing",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the raw data",
              "weight": 0
            },
            {
              "input": "the rest",
              "weight": 0
            },
            {
              "input": "the resultant data",
              "weight": 0
            },
            {
              "input": "the rocks",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the same data",
              "weight": 0
            },
            {
              "input": "the same scale",
              "weight": 0
            },
            {
              "input": "the scale",
              "weight": 0
            },
            {
              "input": "the scaled data",
              "weight": 0
            },
            {
              "input": "the scaler",
              "weight": 0
            },
            {
              "input": "the scikit",
              "weight": 0
            },
            {
              "input": "the sklearn library",
              "weight": 0
            },
            {
              "input": "the testing data",
              "weight": 0
            },
            {
              "input": "the text",
              "weight": 0
            },
            {
              "input": "the theoretical knowledge",
              "weight": 0
            },
            {
              "input": "the variable",
              "weight": 8
            },
            {
              "input": "the variables",
              "weight": 0
            },
            {
              "input": "the web",
              "weight": 0
            },
            {
              "input": "their own datasets",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these available datasets",
              "weight": 0
            },
            {
              "input": "these libraries",
              "weight": 0
            },
            {
              "input": "these variables",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "thing",
              "weight": 3
            },
            {
              "input": "this issue",
              "weight": 0
            },
            {
              "input": "this library",
              "weight": 0
            },
            {
              "input": "this newsletter",
              "weight": 0
            },
            {
              "input": "this process",
              "weight": 0
            },
            {
              "input": "this stage",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top 10 python libraries",
              "weight": 0
            },
            {
              "input": "towards",
              "weight": 2
            },
            {
              "input": "towards data science",
              "weight": 62
            },
            {
              "input": "training",
              "weight": 7
            },
            {
              "input": "training and testing datasets",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 0
            },
            {
              "input": "transform so that algorithm",
              "weight": 14
            },
            {
              "input": "tuples",
              "weight": 0
            },
            {
              "input": "two random subsets",
              "weight": 0
            },
            {
              "input": "two way to bring",
              "weight": 39
            },
            {
              "input": "two ways",
              "weight": 0
            },
            {
              "input": "unsplash",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 2
            },
            {
              "input": "useful tools",
              "weight": 0
            },
            {
              "input": "using labelencoder",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 7
            },
            {
              "input": "variable",
              "weight": 14
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "various sources",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 7
            },
            {
              "input": "work",
              "weight": 2
            },
            {
              "input": "yellow",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your code",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your dataframe",
              "weight": 0
            },
            {
              "input": "your dataset",
              "weight": 0
            },
            {
              "input": "your final model",
              "weight": 0
            },
            {
              "input": "your hand",
              "weight": 0
            },
            {
              "input": "your home",
              "weight": 0
            },
            {
              "input": "your inbox",
              "weight": 0
            },
            {
              "input": "your missing data",
              "weight": 0
            },
            {
              "input": "your model",
              "weight": 0
            },
            {
              "input": "your preferred working environment",
              "weight": 0
            },
            {
              "input": "your skills",
              "weight": 0
            },
            {
              "input": "your subscription",
              "weight": 0
            },
            {
              "input": "· editors",
              "weight": 0
            },
            {
              "input": "“bfill",
              "weight": 0
            },
            {
              "input": "“colour",
              "weight": 0
            },
            {
              "input": "“ffill” parameters",
              "weight": 0
            },
            {
              "input": "“fillna",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.03368779924008902,
        "_index": "cache_index",
        "_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
        "_type": "_doc",
        "highlight": {
          "content": [
            "Photo by Mika Baumeister on Unsplash\n\nWe need to find a <b>dataset</b> to work on.",
            "I’ll be listing a few resources that you\ncan check out\n\n  * https://www.kaggle.com/<b>datasets</b>\n  * https",
            "/ml/index.php\n  * https://data.gov.in/\n\nBesides these available <b>datasets</b>, one can also make their own",
            "<b>datasets</b> by\nscraping data from the web. python has inbuilt libraries to help you with this\nprocess.",
            "Now let’s finally get our <b>dataset</b> in our working environment."
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0045477034843233064,
        "see_also": [
          {
            "doc_id": "cacheid_25f5dcdb0e53bc406880a59a9dd069e0",
            "source_doc_id": "entity:user/1708:en",
            "title": "daniel dagostini"
          },
          {
            "doc_id": "cacheid_183d7ea27ff58b571873adea323f779e",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=---------1-----------------------&gi=1b96703ac127",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_d141ecebd5d2a3a3829dc651f74f5847",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=682cb0aba042",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_6368689ce10f1620a67409b0b15aa230",
            "source_doc_id": "https://cs.stackexchange.com/questions/70395/what-is-the-effect-of-hidden-layer-size",
            "title": "machine learning - What is the Effect of Hidden Layer Size? - Computer Science\nStack Exchange\n\n"
          },
          {
            "doc_id": "cacheid_a329ab6482da63c647ea2b0a074ed623",
            "source_doc_id": "entity:user/1006:en",
            "title": "sara rijo"
          }
        ],
        "semantic_content": " . of Code Using PettingZoo Justin Terry in Towards Data Science Machine Learning ‘on the rocks’ 🥃 Gerasimos Plegas in Towards Data Science About Help Legal Get the Medium app",
        "short_answer": [
          {
            "score": 0.033722374588251114,
            "start": 119,
            "end": 175,
            "answer": "Towards Data Science About Help Legal Get the Medium app"
          }
        ]
      },
      {
        "_source": {
          "title": "Creating an Infographic with infogram | R-bloggers\n\n",
          "lemma_title": "create Infographic infogram R-bloggers",
          "content": "  R-bloggers\n\n   R news and tutorials contributed by hundreds of R bloggers\n\n  * Home\n  * About\n  * RSS\n  * add your blog!\n  * Learn R\n  * R jobs\n    * Submit a new job (it's free)\n    * Browse latest jobs (also free)\n  * Contact us\n\n  Creating an Infographic with infogram\n\nPosted on April 19, 2016 by Paul Oldham's Analytics Blog in R bloggers | 0\nComments\n\n[This article was first published on  Paul Oldham's Analytics Blog , and\nkindly contributed to R-bloggers]. (You can report issue about the content on\nthis page here)\n\n* * *\n\nWant to share your content on R-bloggers? click here if you have a blog, or\nhere if you don't.\n\nShareTweet\n\nIn this article we will use RStudio to prepare patent data for visualisation\nin an infographic using the online software tool infogram.\n\nInfographics are a popular way of presenting data in a way that is easy for a\nreader to understand without reading a long report. Infographics are well\nsuited to presenting summaries of data with simple messages about key\nfindings. A good infographic can encourage the audience to read a detailed\nreport and is a tool for engagement with audiences during presentations of the\nfindings of patent research.\n\nSome patent offices have already been creating infographics as part of their\nreports to policy makers and other clients. The Instituto Nacional de\nPropiedade Industrial (INPI) in Brazil produces regular two page Technology\nRadar (Radar Tecnologico) consisting of charts and maps that briefly summarise\nmore detailed research on subjects such as Nanotechnology in Waste Management.\nWIPO Patent Landscape Reports, which go into depth on patent activity for a\nparticular area, are accompanied by one page infographics that have proved\nvery popular such as the infographic accompanying a recent report on assistive\ndevices.\n\nA growing number of companies are offering online infographic software\nservices such as infogr.am,easel.ly piktochart.com, canva.com or venngage.com\nto mention only a selection of the offerings out there. The Cool Infographics\nwebsite provides a useful overview of available tools.\n\nOne feature of many of these services is that they are based on a freemium\nmodel. Creating graphics is free but the ability to export files and the\navailable formats for export of your masterpiece (e.g. high resolution or\n.pdf) often depend on upgrading to a monthly account at varying prices. In\nthis chapter we test drive infogr.am as a chart friendly service, albeit with\nexport options that depend on a paid account.\n\nThis article is divided into two sections.\n\n  1. In part 1 we focus on using RStudio to prepare patent data for visualisation in infographics software using the `dplyr`, `tidyr` and `stringr` packages. This involves dealing with common problems with patent data such as concatenated fields, white space and creating counts of data fields. Part 1 is intended for those starting out using R and assumes no prior knowledge of R.\n  2. In part 2 we produce an infographic from the data using infogr.am.\n\nThis article is now a chapter in the WIPO Manual on Open Source Patent\nAnalytics. You can read the chapter in electronic book format here and find\nall the materials including presentations at the WIPO Analytics Github\nhomepage.\n\n   Getting Started\n\nTo start with we need to ensure that RStudio and R for your operating system\nare installed by following the instructions on the RStudio website here. Do\nnot forget to follow the link to also install R for your operating system.\n\nWhen working in RStudio it is good practice to work with projects. This will\nkeep all of the files for a project in the same folder. To create a project go\nto File, New Project and create a project. Call the project something like\ninfographic. Any file you create and save for the project will now be listed\nunder the Files tab in RStudio.\n\nR works using packages (libraries) and there are around 7,490 of them for a\nwhole range of purposes. We will use just a few of them. To install a package\nwe use the following. Copy and paste the code into the Console and press\nenter.\n\n    \n    \n    install.packages(\"tidyverse\")    the group of packages you will need\n\nPackages can also be installed by selecting the Packages tab and typing the\nname of the package.\n\nTo load the packages (libraries) use the following or check the tick box in\nthe Packages pane.\n\n    \n    \n    library(readr)\n    library(dplyr)\n    library(tidyr)\n    library(stringr)\n    library(ggplot2)\n\nWe are now ready to go.\n\n   Load a .csv file using `readr`\n\nWe will work with the `pizza_medium_clean` dataset in the online Github Manual\nrepository. If manually downloading a file remember to click on the file name\nand select `Raw` to download the actual file.\n\nWe can use the easy to use `read_csv()` function from the `readr` package to\nquickly read in our pizza data directly from the Github repository. Note the\n`raw` at the beginning of the filename.\n\n    \n    \n    library(readr)\n    pizza <- read_csv(\"https://github.com/wipo-analytics/opensource-patent-analytics/blob/master/2_datasets/pizza_medium_clean/pizza.csv?raw=true\")\n\n`readr` will display a warning for the file arising from its efforts to parse\npublication dates on import. We will ignore this as we will not be using this\nfield.\n\nAs an alternative to importing directly from Github download the file and in\nRStudio use `File > Import Dataset > From .csv`. If you experience problems\nwith direct import of a file the File > Import Dataset approach will give you\na range of easy to use controls for figuring this out (e.g. where .csv is\nactually a tab separated file).\n\n   Viewing Data\n\nWe can view data in a variety of ways.\n\n  1. In the console:\n\n    \n    \n    pizza\n\n  \n\n    \n    \n         A tibble: 9,996 x 31\n          applicants_cleaned    applicants_clean… applicants_orga… applicants_original\n          <chr>                 <chr>             <chr>            <chr>              \n        1 <NA>                  People            <NA>             <NA>               \n        2 Ventimeglia Jamie Jo… People            <NA>             Ventimeglia Jamie …\n        3 Cordova Robert; Mart… People            <NA>             Cordova Robert;Mar…\n        4 Lazarillo De Tormes … Corporate         Lazarillo De To… LAZARILLO DE TORME…\n        5 <NA>                  People            <NA>             <NA>               \n        6 Depoortere, Thomas    People            <NA>             DEPOORTERE, Thomas \n        7 Frisco Findus Ag      Corporate         Frisco Findus Ag FRISCO-FINDUS AG   \n        8 Bicycle Tools Incorp… Corporate         Bicycle Tools I… Bicycle Tools Inco…\n        9 Castiglioni, Carlo    People            <NA>             CASTIGLIONI, CARLO \n       10 <NA>                  People            <NA>             <NA>               \n         ... with 9,986 more rows, and 27 more variables: inventors_cleaned <chr>,\n           inventors_original <chr>, ipc_class <chr>, ipc_codes <chr>,\n           ipc_names <chr>, ipc_original <chr>, ipc_subclass_codes <chr>,\n           ipc_subclass_detail <chr>, ipc_subclass_names <chr>,\n           priority_country_code <chr>, priority_country_code_names <chr>,\n           priority_data_original <chr>, priority_date <chr>,\n           publication_country_code <chr>, publication_country_name <chr>,\n           publication_date <chr>, publication_date_original <chr>,\n           publication_day <int>, publication_month <int>, publication_number <chr>,\n           publication_number_espacenet_links <chr>, publication_year <int>,\n           title_cleaned <chr>, title_nlp_cleaned <chr>,\n           title_nlp_multiword_phrases <chr>, title_nlp_raw <chr>,\n           title_original <chr>\n\n  2. In Environment click on the blue arrow to see in the environment. Keep clicking to open a new window with the data.\n\n  3. Use the `View()` command (for data.frames and tables)\n\n    \n    \n    View(pizza)\n\nIf possible use the View() command or environment. The difficulty with the\nconsole is that large amounts of data will simply stream past.\n\n   Identifying Types of Object\n\nWe often want to know what type of object we are working with and more details\nabout the object so we know what to do later. Here are some of the most common\ncommands for obtaining information about objects.\n\n    \n    \n    class(pizza)     type of object\n    names(pizza)     names of variables\n    str(pizza)     structure of object\n    dim(pizza)     dimensions of the object\n\nThe most useful command in this list is `str()` because this allows us to\naccess the structure of the object and see its type.\n\n    \n    \n    str(pizza, max.level = 1)\n\n`str()` is particularly useful because we can see the names of the fields\n(vectors) and their type. Most patent data is a character vector with dates\nforming integers.\n\n   Working with Data\n\nWe will often want to select aspects of our data to focus on a specific set of\ncolumns or to create a graph. We might also want to add information, notably\nnumeric counts.\n\nThe `dplyr` package provides a set of very handy functions for selecting,\nadding and counting data. The `tidyr` and `stringr` packages are sister\npackages that contain a range of other useful functions for working with our\ndata. We have covered some of these in other chapters on graphing using R but\nwill go through them quickly and then pull them together into a function that\nwe can use across our dataset.\n\n    Select\n\nIn this case we will start by using the `select()` function to limit the data\nto specific columns. We can do this using their names or their numeric\nposition (best for large number of columns e.g. 1:31). In `dplyr`, unlike most\nR packages, existing character columns do not require `\"\"`.\n\n    \n    \n    library(dplyr)\n    pizza_number <- select(pizza, publication_number, publication_year)\n\nWe now have a new data.frame that contains two columns. One with the year and\none with the publication number. Note that we have created a new object called\npizza_number using `<-` and that after `select()` we have named our original\ndata and the columns we want. A fundamental feature of select is that it will\ndrop columns that we do not name. So it is best to create a new object using\n`<-` if you want to keep your original data for later work.\n\n    Adding data with `mutate()`\n\n`mutate()` is a `dplyr` function that allows us to add data based on existing\ndata in our data frame, for example to perform a calculation. In the case of\npatent data we normally lack a numeric field to use for counts. We can however\nassign a value to our publication field by using sum() and the number 1 as\nfollows.\n\n    \n    \n    library(dplyr)\n    pizza_number <- mutate(pizza_number, n = sum(publication_number = 1))\n\nWhen we view `pizza_number` we now have a value of 1 in the column `n` for\neach publication number.\n\nNote that in patent data a priority, application, publication or family number\nmay occur multiple times and we would want to reduce the dataset to distinct\nrecords. For that we would use `n_distinct(pizza_number$publication_number)`\nfrom `dplyr` or `unique(pizza_number$publication_number)` from base R. Because\nthe publication numbers are unique we can proceed.\n\n    Counting data using `count()`\n\nAt the moment, we have multiple instances of the same year (where a patent\npublication occurs in that year). We now want to calculate how many of our\ndocuments were published in each year. To do that we will use the `dplyr`\nfunction `count()`. We will use the publication_year and add `wt =` (for\nweight) with `n` as the value to count.\n\n    \n    \n    library(dplyr)\n    pizza_total <- count(pizza_number, publication_year, wt = n)\n    pizza_total\n\n  \n\n    \n    \n         A tibble: 58 x 2\n          publication_year    nn\n                     <int> <dbl>\n        1             1940    1.\n        2             1954    1.\n        3             1956    1.\n        4             1957    1.\n        5             1959    1.\n        6             1962    1.\n        7             1964    2.\n        8             1966    1.\n        9             1967    1.\n       10             1968    8.\n         ... with 48 more rows\n\nWhen we now examine pizza_total, we will see the publication year and a summed\nvalue for the records in that year.\n\nThis raises the question of how we know that R has calculated the count\ncorrectly. We already know that there are 9996 records in the pizza dataset.\nTo check our count is correct we can simply use sum and select the column we\nwant to sum using `$`.\n\n    \n    \n    library(dplyr)\n    sum(pizza_total$nn)\n\n  \n\n    \n    \n       [1] 9996\n\nSo, all is good and we can move on. The `$` sign is one of the main ways of\nsubsetting to tell R that we want to work with a specific column (the others\nare “[” and “[[”).\n\n    Rename a field with `rename()`\n\nNext we will use `rename()` from `dplyr` to rename the fields. Note that\nunderstanding which field require quote marks can take some effort. In this\ncase renaming the character vector publication_year as “pubyear” requires\nquotes while renaming the numeric vector “n” does not.\n\n    \n    \n    library(dplyr)\n    pizza_total <- rename(pizza_total, pubyear = publication_year, publications = nn) %>% \n        print()\n\n  \n\n    \n    \n         A tibble: 58 x 2\n          pubyear publications\n            <int>        <dbl>\n        1    1940           1.\n        2    1954           1.\n        3    1956           1.\n        4    1957           1.\n        5    1959           1.\n        6    1962           1.\n        7    1964           2.\n        8    1966           1.\n        9    1967           1.\n       10    1968           8.\n         ... with 48 more rows\n\n    Make a quickplot with `qplot()`\n\nUsing the `qplot()` function in `ggplot2` we can now draw a quick line graph.\nNote that qplot() is unusual in R because the data (pizza_total) appears after\nthe coordinates. We will specify that we want a line using `geom =` (if geom\nis left out it will be a scatter plot). This will give us an idea of what our\nplot might look like in our infographic and actions we might want to take on\nthe data.\n\n    \n    \n    library(ggplot2)\n    qplot(x = pubyear, y = publications, data = pizza_total, geom = \"line\")\n\nThe plot reveals a data cliff in recent years. This normally reflects a lack\nof data for the last 2-3 years as recent documents feed through the system en\nroute to publication.\n\nIt is a good idea to remove the data cliff by cutting the data 2-3 years prior\nto the present. In some cases two years is sufficient, but 3 years is a good\nrule of thumb.\n\nWe also have long tail of data with limited data from 1940 until the late\n1970s. Depending on our purposes with the analysis we might want to keep this\ndata (for historical analysis) or to focus in on a more recent period.\n\nWe will limit our data to specific values using the `dplyr` function\n`filter()`.\n\n    Filter data using `filter()`\n\nIn contrast with `select()` which works with columns, `filter()` in `dplyr`\nworks with rows. In this case we need to filter on the values in the pubyear\ncolumn. To remove the data prior to 1990 we will use the greater than or equal\nto operator `>=` on the pubyear column and we will use the less than or equal\nto `<=` operator on the values after 2012.\n\nOne strength of `filter()` in `dplyr` is that it is easy to filter on multiple\nvalues in the same expression (unlike the very similar filter function in base\nR). The use of `filter()` will also remove the 30 records where the year is\nrecorded as NA (Not Available). We will write this file to disk using the\nsimple `write_csv()` from `readr`. To use `write_csv()` we first name our data\n(`pizza_total`) and then provide a file name with a .csv extension. In this\ncase and other examples below we have used a descriptive file name bearing in\nmind that Windows systems have limitations on the length and type of\ncharacters that can be used in file names.\n\n    \n    \n    library(dplyr)\n    library(readr)\n    pizza_total <- filter(pizza_total, pubyear >= 1990, pubyear <= 2012)\n    write_csv(pizza_total, \"pizza_total_1990_2012.csv\")\n    pizza_total\n\n  \n\n    \n    \n         A tibble: 23 x 2\n          pubyear publications\n            <int>        <dbl>\n        1    1990         139.\n        2    1991         154.\n        3    1992         212.\n        4    1993         201.\n        5    1994         162.\n        6    1995         173.\n        7    1996         180.\n        8    1997         186.\n        9    1998         212.\n       10    1999         290.\n         ... with 13 more rows\n\nWhen we print pizza_total to the console we will see that the data now covers\nthe period 1990-2012. When using `filter()` on values in this way it is\nimportant to remember to apply this filter to any subsequent operations on the\ndata (such as applicants) so that it matches the same data period.\n\nTo see our .csv file we can head over to the Files tab and, assuming that we\nhave created a project, the file will now appear in the list of project files.\nClicking on the file name will display the raw unformatted data in RStudio.\n\n   Simplify code with pipes `%>%`\n\nSo far we have handled the code one line at a time. But, one of the great\nstrengths of using a programming language is that we can run multiple lines of\ncode together. There are two basic ways that we can do this.\n\nWe will create a new temporary object `df` to demonstrate this.\n\n  1. The standard way\n\n    \n    \n    library(dplyr)\n    library(ggplot2)\n    df <- select(pizza, publication_number, publication_year)\n    df <- mutate(df, n = sum(publication_number = 1))\n    df <- count(df, publication_year, wt = n)\n    df <- rename(df, pubyear = publication_year, publications = nn)\n    df <- filter(df, pubyear >= 1990, pubyear <= 2012)\n    qplot(x = pubyear, y = publications, data = df, geom = \"line\")\n\nThe code we have just created is six lines long. If we select all of this code\nand run it in one go it will produce our graph.\n\nOne feature of this code is that each time we run a function on the object\ntotal we name it at the start of each function (e.g. mutate(df…)) and then we\noverwrite the object.\n\nWe can save quite a lot of typing and reduce the complexity of the code using\nthe pipe operator introduced by the the `magrittr` package and then adopted in\nHadley Wickham’s data wrangling and tidying packages.\n\n  2. Using pipes `%>%`\n\nPipes are now a very popular way of writing R code because they simplify\nwriting R code and speed it up. The most popular pipe is `%>%` which means\n“this” then “that”. In this case we are going to create a new temporary object\n`df1` by first applying select to pizza, then mutate, count, rename and\nfilter. Note that we only name our dataset once (in `select()`) and we do not\nneed to keep overwriting the object.\n\n    \n    \n    library(dplyr)\n    library(ggplot2)\n    df1 <- select(pizza, publication_number, publication_year) %>% mutate(n = sum(publication_number = 1)) %>% \n        count(publication_year, wt = n) %>% rename(pubyear = publication_year, publications = nn) %>% \n        filter(pubyear >= 1990, pubyear <= 2012) %>% qplot(x = pubyear, y = publications, \n        data = ., geom = \"line\") %>% print()\n\nIn the standard code we typed `df` nine times to arrive at the same result.\nUsing pipes we typed df1 once. Of greater importance is that the use of pipes\nsimplifies the structure of R code by introducing a basic “this” then “that”\nlogic which makes it easier to understand.\n\nOne point to note about this code is that `qplot()` requires us to name our\ndata (in this case `df1`). However, `df1` is actually the final output of the\ncode and does not exist as an input object before the final line is run. So,\nif we attempt to use `data = df1` in `qplot()` we will receive an error\nmessage. The way around this is to use `.` in place of our data object. That\nway `qplot()` will know we want to graph the outputs of the earlier code.\nFinally, we need to add an explicit call to `print()` to display the graph\n(without this the code will work but we will not see the graph).\n\nIf we now inspect the structure of the df1 object (using `str(df1)`) in the\nconsole, it will be a list. The reason for this is that it is an object with\nmixed components, including a data.frame with our data plus additional data\nsetting out the contents of the plot. As there is no direct link between R and\nour infographics software this will create problems for us later because the\ninfographics software won’t know how to interpret the list object. So, it is\ngenerally a good idea to use a straight data.frame by excluding the call to\n`qplot` and adding it later when needed as follows.\n\n    \n    \n    library(dplyr)\n    library(ggplot2)\n    df2 <- select(pizza, publication_number, publication_year) %>% mutate(n = sum(publication_number = 1)) %>% \n        count(publication_year, wt = n) %>% rename(pubyear = publication_year, publications = nn) %>% \n        filter(pubyear >= 1990, pubyear <= 2012) %>% print()\n\n  \n\n    \n    \n         A tibble: 23 x 2\n          pubyear publications\n            <int>        <dbl>\n        1    1990         139.\n        2    1991         154.\n        3    1992         212.\n        4    1993         201.\n        5    1994         162.\n        6    1995         173.\n        7    1996         180.\n        8    1997         186.\n        9    1998         212.\n       10    1999         290.\n         ... with 13 more rows\n\nNote that in this case the only change is that we need to explicitly include\nthe reference to the df2 data frame as the data argument in the call to\n`qplot()`.\n\n    \n    \n    library(ggplot2)\n    qplot(x = pubyear, y = publications, data = df2, geom = \"line\")\n\n   Harmonising data\n\nOne challenge with creating multiple tables from a baseline dataset is keeping\ntrack of subdatasets. At the moment we have two basic objects we will be\nworking with:\n\n  1. `pizza` \\- our raw dataset\n  2. `pizza_total` \\- created via `pizza_number` limited to 1990_2012.\n\nIn the remainder of the chapter we will want to create some additional\ndatasets from our pizza dataset. These are:\n\n  1. Country trends\n  2. Applicants\n  3. International Patent Classification (IPC) Class\n  4. Phrases\n  5. Google\n  6. Google IPC\n  7. Google phrases\n\nWe need to make sure that any data that we generate from our raw dataset\nmatches the period for the `pizza_total` dataset. If we do not do this there\nis a risk that we will generate subdatasets with counts for the raw pizza\ndataset.\n\nTo handle this we will use `filter()` to create a new baseline dataset with an\nunambiguous name.\n\n    \n    \n    library(dplyr)\n    pizza_1990_2012 <- rename(pizza, pubyear = publication_year) %>% filter(pubyear >= \n        1990, pubyear <= 2012)\n    pizza_1990_2012\n\n  \n\n    \n    \n         A tibble: 8,262 x 31\n          applicants_cleaned  applicants_clean… applicants_organ… applicants_original \n          <chr>               <chr>             <chr>             <chr>               \n        1 <NA>                People            <NA>              <NA>                \n        2 Lazarillo De Torme… Corporate         Lazarillo De Tor… LAZARILLO DE TORMES…\n        3 <NA>                People            <NA>              <NA>                \n        4 Depoortere, Thomas  People            <NA>              DEPOORTERE, Thomas  \n        5 Frisco Findus Ag    Corporate         Frisco Findus Ag  FRISCO-FINDUS AG    \n        6 Bicycle Tools Inco… Corporate         Bicycle Tools In… Bicycle Tools Incor…\n        7 Castiglioni, Carlo  People            <NA>              CASTIGLIONI, CARLO  \n        8 <NA>                People            <NA>              <NA>                \n        9 Bujalski, Wlodzimi… People            <NA>              BUJALSKI, WLODZIMIE…\n       10 Ehrno Flexible A/S… Corporate; People Ehrno Flexible A… \"EHRNO FLEXIBLE A/S…\n         ... with 8,252 more rows, and 27 more variables: inventors_cleaned <chr>,\n           inventors_original <chr>, ipc_class <chr>, ipc_codes <chr>,\n           ipc_names <chr>, ipc_original <chr>, ipc_subclass_codes <chr>,\n           ipc_subclass_detail <chr>, ipc_subclass_names <chr>,\n           priority_country_code <chr>, priority_country_code_names <chr>,\n           priority_data_original <chr>, priority_date <chr>,\n           publication_country_code <chr>, publication_country_name <chr>,\n           publication_date <chr>, publication_date_original <chr>,\n           publication_day <int>, publication_month <int>, publication_number <chr>,\n           publication_number_espacenet_links <chr>, pubyear <int>,\n           title_cleaned <chr>, title_nlp_cleaned <chr>,\n           title_nlp_multiword_phrases <chr>, title_nlp_raw <chr>,\n           title_original <chr>\n\nIn this case we start with a call to `rename()` to make this consistent with\nour pizza_total table and then use a pipe to filter the data on the year. Note\nhere that when filtering raw data on a set of values it is important to\ninspect it first to check that the field is clean (e.g. not concatenated). If\nfor some reason your data is concatenated (which happens quite a lot with\npatent data) then lookup `?tidyr::separate_rows`.\n\nWe are now in a position to create our country trends table.\n\n   Country Trends using `spread()`\n\nThere are two basic data formats: long and wide. Our pizza dataset is in long\nformat because each column is a variable (e.g. `publication_country`) and each\nrow in `publication_country` contains a country name. This is the most common\nand useful data format.\n\nHowever, in some cases, such as `infogr.am` our visualisation software will\nexpect the data to be in wide format. In this case each country name would\nbecome a variable (column name) with the years forming the rows and the number\nof records per year the observations. The key to this is the `tidyr()`\nfunction `spread()`.\n\nAs above we will start off by using `select()` to create a table with the\nfields that we want. We will then use `mutate()` to add a numeric field and\nthen count up that data. To illustrate the process run this code (we will not\ncreate an object).\n\n    \n    \n    library(dplyr)\n    select(pizza_1990_2012, publication_country_name, publication_number, pubyear) %>% \n        mutate(n = sum(publication_number = 1)) %>% count(publication_country_name, pubyear, \n        wt = n) %>% print()\n\n  \n\n    \n    \n         A tibble: 223 x 3\n          publication_country_name pubyear    nn\n          <chr>                      <int> <dbl>\n        1 Canada                      1990   19.\n        2 Canada                      1991   49.\n        3 Canada                      1992   66.\n        4 Canada                      1993   59.\n        5 Canada                      1994   50.\n        6 Canada                      1995   39.\n        7 Canada                      1996   36.\n        8 Canada                      1997   45.\n        9 Canada                      1998   46.\n       10 Canada                      1999   47.\n         ... with 213 more rows\n\nWhen we run this code we will see the results in long format. We now want to\ntake our `publication_country_name` column and spread it to form columns with\n`nn` as the values.\n\nIn using spread note that it takes a data argument (`pizza_1990_2012`), a key\n(`publication_country_name`), and value column (`nn`) (created from\n`count()`). We are using pipes so the data only needs to be named in the first\nline. For additional arguments see `?spread()`.\n\n    \n    \n    library(dplyr)\n    library(tidyr)\n    country_totals <- select(pizza_1990_2012, publication_country_name, publication_number, \n        pubyear) %>% mutate(n = sum(publication_number = 1)) %>% count(publication_country_name, \n        pubyear, wt = n) %>% spread(publication_country_name, nn)\n    country_totals\n\n  \n\n    \n    \n         A tibble: 23 x 17\n          pubyear Canada China `Eurasian Patent… `European Paten… Germany Israel Japan\n            <int>  <dbl> <dbl>             <dbl>            <dbl>   <dbl>  <dbl> <dbl>\n        1    1990    19.   NA                NA               22.      2.    NA    NA \n        2    1991    49.   NA                NA               29.      2.    NA    NA \n        3    1992    66.   NA                NA               36.      2.     1.   NA \n        4    1993    59.   NA                NA               29.      2.    NA    NA \n        5    1994    50.   NA                NA               26.      5.    NA    NA \n        6    1995    39.   NA                NA               29.      2.     1.   NA \n        7    1996    36.    1.               NA               27.      1.     1.   NA \n        8    1997    45.   NA                NA               34.      1.    NA    NA \n        9    1998    46.   NA                NA               36.      1.    NA    17.\n       10    1999    47.    2.                2.              60.      4.    NA    26.\n         ... with 13 more rows, and 9 more variables: `Korea, Republic of` <dbl>,\n           Mexico <dbl>, `Patent Co-operation Treaty` <dbl>, Portugal <dbl>, `Russian\n           Federation` <dbl>, Singapore <dbl>, `South Africa` <dbl>, Spain <dbl>,\n           `United States of America` <dbl>\n\nWe now have data in wide format.\n\nIn some cases, such as infogr.am, visualisation software may expect the\ncountry names to be the name of rows and the column names to be years . We can\nmodify our call to `spread()` by replacing the `publication_country_name` with\n`pubyear`. Then we will write the data to disk for use in our infographic.\n\n    \n    \n    library(dplyr)\n    library(readr)\n    country_totals <- select(pizza_1990_2012, publication_country_name, publication_number, pubyear) %>%\n      mutate(n = sum(publication_number = 1)) %>% \n      count(publication_country_name, pubyear, wt = n) %>%   note n\n      spread(pubyear, nn)   note nn\n    country_totals\n\n  \n\n    \n    \n         A tibble: 16 x 24\n          publication_country… `1990` `1991` `1992` `1993` `1994` `1995` `1996` `1997`\n          <chr>                 <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n        1 Canada                  19.    49.    66.    59.    50.    39.    36.    45.\n        2 China                   NA     NA     NA     NA     NA     NA      1.    NA \n        3 Eurasian Patent Org…    NA     NA     NA     NA     NA     NA     NA     NA \n        4 European Patent Off…    22.    29.    36.    29.    26.    29.    27.    34.\n        5 Germany                  2.     2.     2.     2.     5.     2.     1.     1.\n        6 Israel                  NA     NA      1.    NA     NA      1.     1.    NA \n        7 Japan                   NA     NA     NA     NA     NA     NA     NA     NA \n        8 Korea, Republic of      NA     NA     NA      1.    NA     NA      1.     1.\n        9 Mexico                  NA     NA     NA     NA     NA     NA     NA     NA \n       10 Patent Co-operation…     8.    13.    31.    16.    20.    22.    23.    26.\n       11 Portugal                NA     NA     NA     NA     NA     NA     NA     NA \n       12 Russian Federation      NA     NA     NA     NA     NA     NA     NA      5.\n       13 Singapore               NA     NA     NA     NA     NA     NA     NA     NA \n       14 South Africa             2.     3.     3.     3.     3.     1.     9.     7.\n       15 Spain                   NA     NA     NA     NA     NA     NA     NA     NA \n       16 United States of Am…    86.    58.    73.    91.    58.    79.    81.    67.\n         ... with 15 more variables: `1998` <dbl>, `1999` <dbl>, `2000` <dbl>,\n           `2001` <dbl>, `2002` <dbl>, `2003` <dbl>, `2004` <dbl>, `2005` <dbl>,\n           `2006` <dbl>, `2007` <dbl>, `2008` <dbl>, `2009` <dbl>, `2010` <dbl>,\n           `2011` <dbl>, `2012` <dbl>\n\n  \n\n    \n    \n    write_csv(country_totals, \"pizza_country_1990_2012.csv\")\n\nTo restore the data to long format we would need to use `gather()` as the\ncounterpart to `spread()`. `gather()` takes a dataset, a key for the name of\nthe column we want to gather the countries into, a value for the numeric count\n(in this case n), and finally the positions of the columns to gather in. Note\nhere that we need to look up the column positions in `country_totals` (e.g.\nusing `View()`) or count the columns using `ncol(country_totals)`.\n\n    \n    \n    library(dplyr)\n    gather(country_totals, year, n, 2:24) %>% print()\n\n  \n\n    \n    \n         A tibble: 368 x 3\n          publication_country_name     year      n\n          <chr>                        <chr> <dbl>\n        1 Canada                       1990    19.\n        2 China                        1990    NA \n        3 Eurasian Patent Organization 1990    NA \n        4 European Patent Office       1990    22.\n        5 Germany                      1990     2.\n        6 Israel                       1990    NA \n        7 Japan                        1990    NA \n        8 Korea, Republic of           1990    NA \n        9 Mexico                       1990    NA \n       10 Patent Co-operation Treaty   1990     8.\n         ... with 358 more rows\n\nThe combination of spread and gather work really well to prepare data in\nformats that are expected by other software. However, one of the main issues\nwe encounter with patent data is that our data is not tidy because various\nfields are concatenated.\n\n   Tidying data - Separating and Gathering\n\nIn patent data we often see concatenated fields with a separator (normally a\n`;`). These are typically applicant names, inventor names, International\nPatent Classification (IPC) codes, or document numbers (priority numbers,\nfamily numbers). We need to `tidy` this data prior to data cleaning (such as\ncleaning names) or to prepare for analysis and visualisation. For more on the\nconcept of tidy data read Hadley Wickham’s Tidy Data article. The new R for\nData Science book by Garrett Grolemund and Hadley Wickham (see Chapter 12) is\nalso strongly recommended.\n\nTo tidy patent data we will typically need to do two things.\n\n  1. Separate the data so that each cell contains a unique data point (e.g. a name, code or publication number). This normally involves separating data into columns.\n\n  2. Gathering the data back in. This involves transforming the data in the columns we have created into rows.\n\nSeparating data into columns is very easy in tools such as Excel. However,\ngathering the data back into separate rows is remarkably difficult. Happily,\nthis is very easy to do in R with the `tidyr` package.\n\nThe `tidyr` package contains three functions that are very useful when working\nwith patent data. When dealing with concatenated fields in columns the key\nfunction is `separate_rows`.\n\nHere we will work with the `applicants_cleaned` field in the pizza dataset.\nThis field contains concatenated names with a `;` as the separator. For\nexample, on lines 1_9 there are single applicant names or NA values. However,\non lines 10 and line 59 we see:\n\nEhrno Flexible A/S; Stergaard, Ole  \nFarrell Brian; Mcnulty John; Vishoot Lisa\n\nThe problem here is that when we are dealing with thousands of lines of\napplicant names we don’t know how many names might be concatenated into each\ncell as a basis for separating the data into columns. Once we had split the\ncolumns (for example using Text to Columns in Excel) we would then need to\nwork out how to gather the columns into rows. The `separate_rows()` function\nfrom `tidyr` makes light work of this problem. To use the function we name the\ndataset, the column we want to separate into rows and the separator (sep).\n\n    \n    \n    library(dplyr)\n    library(tidyr)\n    pizza1 <- separate_rows(pizza_1990_2012, applicants_cleaned, sep = \";\")\n    pizza1\n\n  \n\n    \n    \n         A tibble: 12,729 x 31\n          applicants_cleaned applicants_cleane… applicants_organ… applicants_original \n          <chr>              <chr>              <chr>             <chr>               \n        1 <NA>               People             <NA>              <NA>                \n        2 Lazarillo De Torm… Corporate          Lazarillo De Tor… LAZARILLO DE TORMES…\n        3 <NA>               People             <NA>              <NA>                \n        4 Depoortere, Thomas People             <NA>              DEPOORTERE, Thomas  \n        5 Frisco Findus Ag   Corporate          Frisco Findus Ag  FRISCO-FINDUS AG    \n        6 Bicycle Tools Inc… Corporate          Bicycle Tools In… Bicycle Tools Incor…\n        7 Castiglioni, Carlo People             <NA>              CASTIGLIONI, CARLO  \n        8 <NA>               People             <NA>              <NA>                \n        9 Bujalski, Wlodzim… People             <NA>              BUJALSKI, WLODZIMIE…\n       10 Ehrno Flexible A/S Corporate; People  Ehrno Flexible A… \"EHRNO FLEXIBLE A/S…\n         ... with 12,719 more rows, and 27 more variables: inventors_cleaned <chr>,\n           inventors_original <chr>, ipc_class <chr>, ipc_codes <chr>,\n           ipc_names <chr>, ipc_original <chr>, ipc_subclass_codes <chr>,\n           ipc_subclass_detail <chr>, ipc_subclass_names <chr>,\n           priority_country_code <chr>, priority_country_code_names <chr>,\n           priority_data_original <chr>, priority_date <chr>,\n           publication_country_code <chr>, publication_country_name <chr>,\n           publication_date <chr>, publication_date_original <chr>,\n           publication_day <int>, publication_month <int>, publication_number <chr>,\n           publication_number_espacenet_links <chr>, pubyear <int>,\n           title_cleaned <chr>, title_nlp_cleaned <chr>,\n           title_nlp_multiword_phrases <chr>, title_nlp_raw <chr>,\n           title_original <chr>\n\nOur original dataset contained 8,262 rows. Our new dataset split on applicant\nnames contains 12,729 rows. The function has moved our target column from\ncolumn 1 to column 31 in the data frame. We can easily move it back to\ninspect.\n\n    \n    \n    library(dplyr)\n    pizza1 <- select(pizza1, 31, 1:30)\n\n`separate_rows()` has done a great job but one of the problems with\nconcatenated names is extra white space around the separator. We will deal\nwith this next.\n\n    Trimming with `stringr`\n\nIf we inspect the bottom of the column by subsetting into it using `$` we will\nsee that a lot of the names have a leading whitespace space. This results from\nthe separate exercise where the `;` is actually `;space`. Take a look at the\nlast few rows of the data using `tail()`.\n\n    \n    \n    tail(pizza1$applicants_cleaned, 20)\n\n  \n\n    \n    \n        [1] \"Yahoo! Inc\"                        \"Clarcor Inc\"                      \n        [3] \"Holden Jeffrey A\"                  \" Vengroff Darren E\"               \n        [5] \"Casper Jeffrey L\"                  \" Erickson Braden J\"               \n        [7] \" Oppenheimer Alan A\"               \" Ray Madonna M\"                   \n        [9] \" Weber Jean L\"                     \"Pandey Neena\"                     \n       [11] \" Sharma Sudhanshu\"                 \" Verizon Patent And Licensing Inc\"\n       [13] \"Pandey Neena\"                      \" Sharma Sudhanshu\"                \n       [15] \"Brown Michael\"                     \" Urban Scott\"                     \n       [17] \"Brown Michael\"                     \" Urban Scott\"                     \n       [19] \"Cole Lorin R\"                      \" Middleton Scott W\"\n\nThis is a big issue because any counts that we make later on using the\napplicants_cleaned field will treat “Oppenheimer Alan A” and \" Oppenheimer\nAlan A\" as separate names when they should be grouped together.\n\nWe can address this in a couple of ways. One approach is to recognise that\nactually our separator is not a simple `\";\"` but `\";space\"` in our call to\n`separate_rows()`. In that case the call to `separate_rows()` would actually\nbe `sep = \"; \"`. We will add a line of code to illustrate the impact of this\nchange.\n\n    \n    \n    tmp <- separate_rows(pizza_1990_2012, applicants_cleaned, sep = \"; \")\n    tail(tmp$applicants_cleaned, 20)\n\n  \n\n    \n    \n        [1] \"Yahoo! Inc\"                       \"Clarcor Inc\"                     \n        [3] \"Holden Jeffrey A\"                 \"Vengroff Darren E\"               \n        [5] \"Casper Jeffrey L\"                 \"Erickson Braden J\"               \n        [7] \"Oppenheimer Alan A\"               \"Ray Madonna M\"                   \n        [9] \"Weber Jean L\"                     \"Pandey Neena\"                    \n       [11] \"Sharma Sudhanshu\"                 \"Verizon Patent And Licensing Inc\"\n       [13] \"Pandey Neena\"                     \"Sharma Sudhanshu\"                \n       [15] \"Brown Michael\"                    \"Urban Scott\"                     \n       [17] \"Brown Michael\"                    \"Urban Scott\"                     \n       [19] \"Cole Lorin R\"                     \"Middleton Scott W\"\n\nAnother way to address this, is to use the `str_trim()` function from the\n`stringr` package.\n\nWe can address this problem using a function from the `stringr` package\n`str_trim()`. We have a choice with `str_trim()` on whether to trim the\nwhitespace on the right, left or both. Here we will choose both.\n\nBecause we are seeking to modify an existing column (not to create a new\nvector or data.frame) we will use `$` to select the column and as the data for\nthe `str_trim()` function. That will apply the function to the applicants\ncolumn in pizza1.\n\n    \n    \n    library(stringr)\n    pizza1$applicants_cleaned <- str_trim(pizza1$applicants_cleaned, side = \"both\")\n    tail(pizza1$applicants_cleaned, 20)\n\n  \n\n    \n    \n        [1] \"Yahoo! Inc\"                       \"Clarcor Inc\"                     \n        [3] \"Holden Jeffrey A\"                 \"Vengroff Darren E\"               \n        [5] \"Casper Jeffrey L\"                 \"Erickson Braden J\"               \n        [7] \"Oppenheimer Alan A\"               \"Ray Madonna M\"                   \n        [9] \"Weber Jean L\"                     \"Pandey Neena\"                    \n       [11] \"Sharma Sudhanshu\"                 \"Verizon Patent And Licensing Inc\"\n       [13] \"Pandey Neena\"                     \"Sharma Sudhanshu\"                \n       [15] \"Brown Michael\"                    \"Urban Scott\"                     \n       [17] \"Brown Michael\"                    \"Urban Scott\"                     \n       [19] \"Cole Lorin R\"                     \"Middleton Scott W\"\n\nNote that when using `str_trim()` we use subsetting to modify the applicants\ncolumn in place. There is possibly a more efficient way of doing this with\npipes but this appears difficult because the data.frame needs to exist for\n`str_trim()` to act on in place or we end up with a vector of applicant names\nrather than a data.frame. A solution to this problem is provided on Stack\nOverflow1.\n\nIn practice, the most efficient solution in this case is to recognise that the\nseparator for `separate_rows` is `\";space\"`. However, that will not always be\ntrue making the tools in `stringr` invaluable. To learn more about string\nmanipulation in R try Chapter 14 of R for Data Science by Garrett Grolemund\nand Hadley Wickham.\n\nWe can tie the steps so far together using pipes into the following simpler\ncode that we will become the applicants table for use in the infographic. We\nwill add a call to rename and rename applicants_cleaned to tidy up.\n\n    \n    \n    library(dplyr)\n    library(tidyr)\n    library(stringr)\n    applicants <- rename(pizza, pubyear = publication_year) %>% filter(pubyear >= 1990, \n        pubyear <= 2012) %>% separate_rows(applicants_cleaned, sep = \"; \") %>% rename(applicants = applicants_cleaned) %>% \n        select(31, 1:30)    moves separated column to the beginning\n    applicants\n\n  \n\n    \n    \n         A tibble: 12,729 x 31\n          title_original applicants applicants_clea… applicants_orga… applicants_orig…\n          <chr>          <chr>      <chr>            <chr>            <chr>           \n        1 PIZZA          <NA>       People           <NA>             <NA>            \n        2 IMPROVED PIZZA Lazarillo… Corporate        Lazarillo De To… LAZARILLO DE TO…\n        3 Pizza separat… <NA>       People           <NA>             <NA>            \n        4 Pizza separat… Depoorter… People           <NA>             DEPOORTERE, Tho…\n        5 PIZZA PREPARA… Frisco Fi… Corporate        Frisco Findus Ag FRISCO-FINDUS AG\n        6 Pizza Cutter   Bicycle T… Corporate        Bicycle Tools I… Bicycle Tools I…\n        7 PIZZA BOX      Castiglio… People           <NA>             CASTIGLIONI, CA…\n        8 PIZZA BOX      <NA>       People           <NA>             <NA>            \n        9 MORE ATTRACTI… Bujalski,… People           <NA>             BUJALSKI, WLODZ…\n       10 PIZZA PACKAGI… Ehrno Fle… Corporate; Peop… Ehrno Flexible … \"EHRNO FLEXIBLE…\n         ... with 12,719 more rows, and 26 more variables: inventors_cleaned <chr>,\n           inventors_original <chr>, ipc_class <chr>, ipc_codes <chr>,\n           ipc_names <chr>, ipc_original <chr>, ipc_subclass_codes <chr>,\n           ipc_subclass_detail <chr>, ipc_subclass_names <chr>,\n           priority_country_code <chr>, priority_country_code_names <chr>,\n           priority_data_original <chr>, priority_date <chr>,\n           publication_country_code <chr>, publication_country_name <chr>,\n           publication_date <chr>, publication_date_original <chr>,\n           publication_day <int>, publication_month <int>, publication_number <chr>,\n           publication_number_espacenet_links <chr>, pubyear <int>,\n           title_cleaned <chr>, title_nlp_cleaned <chr>,\n           title_nlp_multiword_phrases <chr>, title_nlp_raw <chr>\n\nWe will want to create a plot with the applicants data in our infographic\nsoftware. For that we need to introduce a field to count on. We might also\nwant to establish a cut off point based on the number of records per\napplicant.\n\nIn this code we will simply print the applicants ranked in descending order.\nThe second to last line of the code provides a filter on the number of\nrecords. This value can be changed after inspecting the data. The final line\nomits NA values (otherwise the top result) where an applicant name is not\navailable.\n\n    \n    \n    library(tidyr)\n    library(dplyr)\n    applicant_count <- select(applicants, applicants, publication_number) %>% mutate(n = sum(publication_number = 1)) %>% \n        count(applicants, wt = n) %>% arrange(desc(nn)) %>% filter(nn >= 1) %>% na.omit()\n    applicant_count\n\n  \n\n    \n    \n         A tibble: 6,178 x 2\n          applicants                              nn\n          <chr>                                <dbl>\n        1 Graphic Packaging International, Inc  154.\n        2 Kraft Foods Holdings, Inc             132.\n        3 Google Inc                            123.\n        4 Microsoft Corporation                  88.\n        5 The Pillsbury Company                  83.\n        6 General Mills, Inc                     77.\n        7 Nestec                                 77.\n        8 The Procter & Gamble Company           59.\n        9 Pizza Hut, Inc                         57.\n       10 Yahoo! Inc                             54.\n         ... with 6,168 more rows\n\nIf we inspect applicant count using `View(applicant_count)` we have 6,178\nrows. That is far too many to display in an infographic. So, next we will\nfilter the data on the value for the top ten (54). Then we will write the data\nto a .csv file using the simple `write_csv()` from `readr`.\n\n    \n    \n    library(dplyr)\n    library(tidyr)\n    library(readr)\n    applicant_count <- select(applicants, applicants, publication_number) %>% mutate(n = sum(publication_number = 1)) %>% \n        count(applicants, wt = n) %>% arrange(desc(nn)) %>% filter(nn >= 54) %>% na.omit()\n    applicant_count\n\n  \n\n    \n    \n         A tibble: 10 x 2\n          applicants                              nn\n          <chr>                                <dbl>\n        1 Graphic Packaging International, Inc  154.\n        2 Kraft Foods Holdings, Inc             132.\n        3 Google Inc                            123.\n        4 Microsoft Corporation                  88.\n        5 The Pillsbury Company                  83.\n        6 General Mills, Inc                     77.\n        7 Nestec                                 77.\n        8 The Procter & Gamble Company           59.\n        9 Pizza Hut, Inc                         57.\n       10 Yahoo! Inc                             54.\n\n  \n\n    \n    \n    write_csv(applicant_count, \"pizza_applicants_1990_2012.csv\")\n\nWhen we inspect `applicant_count` we will see that Graphic Packaging\nInternational is the top result with 154 results with Google ranking third\nwith 123 results followed by Microsoft. This could suggest that Google and\nMicrosoft are suddenly entering the market for online pizza sales or pizza\nmaking software or, as is more likely, that there are uses other uses of the\nword pizza in patent data that we are not aware of.\n\nAs part of our infographic we will want to explore this intriguing result in\nmore detail. We can do this by creating a subdataset for Google using\n`filter()`.\n\n   Selecting applicants using `filter()`\n\nAs we saw above, while `select()` functions with columns, `filter()` from\n`dplyr` works with rows. Here we will filter the data to select the rows in\nthe applicants column that contain Google Inc. and then write that to a .csv\nfor use in our infographic. Note the use of double `==` and the quotes around\n“Google Inc”.\n\n    \n    \n    library(dplyr)\n    library(readr)\n    google <- filter(applicants, applicants == \"Google Inc\")\n    google\n\n  \n\n    \n    \n         A tibble: 123 x 31\n          title_original applicants applicants_clea… applicants_orga… applicants_orig…\n          <chr>          <chr>      <chr>            <chr>            <chr>           \n        1 Location base… Google Inc Corporate; Peop… Google Inc       Hafsteinsson Gu…\n        2 AUTHORITATIVE… Google Inc Corporate        Google Inc       GOOGLE INC.     \n        3 Location-Base… Google Inc Corporate; Peop… Google Inc       GOOGLE INC.;HAF…\n        4 Controlling t… Google Inc Corporate; Peop… Google Inc       GOOGLE, INC.;BE…\n        5 METHOD AND SY… Google Inc Corporate        Google Inc       GOOGLE INC.     \n        6 Routing queri… Google Inc Corporate        Google Inc       GOOGLE INC.     \n        7 METHODS AND S… Google Inc Corporate        Google Inc       GOOGLE INC.     \n        8 Aspect-based … Google Inc Corporate; Peop… Google Inc       Reis George;Goo…\n        9 Interpreting … Google Inc Corporate        Google Inc       GOOGLE INC.     \n       10 Interpreting … Google Inc Corporate        Google Inc       GOOGLE INC.     \n         ... with 113 more rows, and 26 more variables: inventors_cleaned <chr>,\n           inventors_original <chr>, ipc_class <chr>, ipc_codes <chr>,\n           ipc_names <chr>, ipc_original <chr>, ipc_subclass_codes <chr>,\n           ipc_subclass_detail <chr>, ipc_subclass_names <chr>,\n           priority_country_code <chr>, priority_country_code_names <chr>,\n           priority_data_original <chr>, priority_date <chr>,\n           publication_country_code <chr>, publication_country_name <chr>,\n           publication_date <chr>, publication_date_original <chr>,\n           publication_day <int>, publication_month <int>, publication_number <chr>,\n           publication_number_espacenet_links <chr>, pubyear <int>,\n           title_cleaned <chr>, title_nlp_cleaned <chr>,\n           title_nlp_multiword_phrases <chr>, title_nlp_raw <chr>\n\n  \n\n    \n    \n    write_csv(google, \"google_1990_2012.csv\")\n\nNote that the correct result for the period 1990 to 2012 for Google is 123\nrecords from 191 records across the whole pizza dataset. The correct result\nwill be achieved only where you use the filtered, separated and trimmed data\nwe created in the applicants data frame.\n\n   Generating IPC Tables\n\nIn the next step we will want to generate two tables containing International\nPatent Classification (IPC) data. IPC codes and the Cooperative Patent\nClassification (CPC, not present in this dataset) provide information on the\ntechnologies involved in a patent document. The IPC is hierarchical and\nproceeds from the general class level to the detailed group and subgroup\nlevel. Experience reveals that the majority of patent documents receive more\nthan one IPC code to more fully describe the technological aspects of patent\ndocuments.\n\nThe pizza dataset contains IPC codes on the class and the subclass level in\nconcatenated fields. One important consideration in using IPC data is that the\ndescriptions are long and can be difficult for non-specialists to grasp. This\ncan make visualising the data difficult and often requires manual efforts to\nedit labels for display.\n\nWe now want to generate three IPC tables.\n\n  1. A general IPC table for the pizza dataset\n  2. A general IPC table for the Google dataset\n  3. A more detailed IPC subclass table for the Google dataset\n\nFor ease of presentation in an infographic we will use the `ipc_class` field.\nFor many patent analytics purposes this will be too general. However it has\nthe advantage of being easy to visualise.\n\nTo generate the table we can use a generic function based on the code\ndeveloped for dealing with the applicants data. We will call the function\npatent_count().\n\n  \n\n    \n    \n    patent_count <- function(data, col, count_col, sep, n_results) {\n        p_count <- dplyr::select(data, !!col, !!count_col) %>% tidyr::separate_rows(col, \n            sep = sep) %>% dplyr::mutate(`:=`(!!col, stringr::str_trim(.[[col]], side = \"both\"))) %>% \n            dplyr::mutate(n = sum(count_col = 1)) %>% dplyr::group_by(`:=`(!!col, .[[col]])) %>% \n            dplyr::tally(sort = TRUE) %>% dplyr::rename(records = nn) %>% na.omit() %>% \n            head(n_results)\n    }\n\nThe `patent_count()` function is based on the the code we developed for\napplicants. It contains variations to make it work as a function. The function\ntakes four arguments:\n\n  1. col = the concatenated column that we want to split and gather back in\n  2. col_count = a column for generating counts (in this dataset the publication_number)\n  3. n_results = the number of results we want to see in the new table (typically 10 or 20 for visualisation). This is equivalent to the number of rows that you want to see.\n  4. sep = the separator to use to separate the data in col. With patent data this is almost always “;” (as `;space`.\n\nTo generate the `ipc_class` data we can do the following and then write the\nfile to .csv. Note that we have set the number of results `n_results` to 10.\n\n    \n    \n    pizza_ipc_class <- patent_count(data = pizza_1990_2012, col = \"ipc_class\", count_col = \"publication_number\", \n        n_results = 10, sep = \";\")\n    pizza_ipc_class\n\n  \n\n    \n    \n         A tibble: 10 x 2\n          ipc_class                                           records\n          <chr>                                                 <dbl>\n        1 A21: Baking                                           2233.\n        2 A23: Foods Or Foodstuffs                              1843.\n        3 B65: Conveying                                        1383.\n        4 G06: Computing                                        1326.\n        5 A47: Furniture                                         932.\n        6 H04: Electric Communication Technique                  747.\n        7 H05: Electric Techniques Not Otherwise Provided For    613.\n        8 F24: Heating                                           512.\n        9 A61: Medical Or Veterinary Science                     318.\n       10 G07: Checking                                          226.\n\n  \n\n    \n    \n    write_csv(pizza_ipc_class, \"pizza_ipcclass_1990_2012.csv\")\n\nNote that this dataset is based on the main `pizza_1990_2012` dataset\n(including cases where no applicant name is available). The reason we have not\nused the applicants dataset is because that dataset will duplicate the IPC\nfield for each split of an applicant name. As a result it will over count the\nIPCs by the number of applicants on a document name. As this suggests, it is\nimportant to be careful when working with data that has been tidied because of\nthe impact on other counts.\n\nThis problem does not apply in the case of our Google data because the only\napplicant listed in that data is Google (excluding co-applicants). We can\ntherefore safely use the Google dataset to identify the IPC codes.\n\n    \n    \n    google_ipc_class <- patent_count(data = google, col = \"ipc_class\", count_col = \"publication_number\", \n        n_results = 10, sep = \";\")\n    google_ipc_class\n\n  \n\n    \n    \n         A tibble: 7 x 2\n         ipc_class                             records\n         <chr>                                   <dbl>\n       1 G06: Computing                           105.\n       2 H04: Electric Communication Technique     17.\n       3 G01: Measuring                            14.\n       4 G09: Educating                            11.\n       5 G10: Musical Instruments                   7.\n       6 A63: Sports                                1.\n       7 G08: Signalling                            1.\n\n  \n\n    \n    \n    write_csv(google_ipc_class, \"google_ipcclass_1990_2012.csv\")\n\nThere are only 7 classes and as we might expect they are dominated by\ncomputing. We might want to dig into this in a little more detail and so let’s\nalso create an IPC subclass field.\n\n    \n    \n    google_ipc_subclass <- patent_count(data = google, col = \"ipc_subclass_detail\", count_col = \"publication_number\", \n        n_results = 10, sep = \";\")\n    google_ipc_subclass\n\n  \n\n    \n    \n         A tibble: 10 x 2\n          ipc_subclass_detail                                                  records\n          <chr>                                                                  <dbl>\n        1 G06F: Electric Digital Data Processing                                   89.\n        2 G06Q: Data Processing Systems Or Methods, Specially Adapted For Adm…     24.\n        3 G01C: Measuring Distances, Levels Or Bearings                            14.\n        4 G09B: Educational Or Demonstration Appliances                             9.\n        5 G10L: Speech Analysis Or Synthesis                                        7.\n        6 H04W: Wireless Communication Networks                                     7.\n        7 G09G: Arrangements Or Circuits For Control Of Indicating Devices Us…      5.\n        8 H04B: Transmission                                                        4.\n        9 H04L: Transmission Of Digital Information, E.G. Telegraphic Communi…      4.\n       10 H04M: Telephonic Communication                                            4.\n\n  \n\n    \n    \n    write_csv(google_ipc_subclass, \"google_ipcsubclass_1990_2012.csv\")\n\nWe now have the data on technology areas that we need to understand our data.\nThe next and final step is to generate data from the text fields.\n\n    Phrases Tables\n\nWe will be using data from words and phrases in the titles of patent documents\nfor use in a word cloud in our infographic. It is possible to generate this\ntype of data in R directly using the `tm` and `NLP` packages. Our pizza\ndataset already contains a title field broken down into phrases using\nVantagepoint software and so we will use that. We will use the field\n`title_nlp_multiword_phrases` as phrases are generally more informative than\nindividual words. Once again we will use our general `patent_count()` function\nalthough experimentation may be needed to identify the number of phrases that\nvisualise well in a word cloud.\n\n    \n    \n    pizza_phrases <- patent_count(data = pizza_1990_2012, col = \"title_nlp_multiword_phrases\", \n        count_col = \"publication_number\", n_results = 15, sep = \";\")\n    pizza_phrases\n\n  \n\n    \n    \n         A tibble: 15 x 2\n          title_nlp_multiword_phrases records\n          <chr>                         <dbl>\n        1 Food Product                   179.\n        2 Microwave Ovens                137.\n        3 Making Same                     48.\n        4 conveyor Oven                   46.\n        5 Crust Pizza                     44.\n        6 microwave Heating               41.\n        7 Bakery Product                  40.\n        8 pizza Box                       40.\n        9 Microwave Cooking               39.\n       10 Pizza Oven                      37.\n       11 pizza Dough                     35.\n       12 Cook Food                       34.\n       13 Baked Product                   33.\n       14 Related Method                  32.\n       15 Food Item                       29.\n\n  \n\n    \n    \n    write_csv(pizza_phrases, \"pizza_phrases_1990_2012.csv\")\n\nNow we do the same with the Google data.\n\n    \n    \n    google_phrases <- patent_count(data = google, col = \"title_nlp_multiword_phrases\", \n        count_col = \"publication_number\", n_results = 15, sep = \";\")\n    google_phrases\n\n  \n\n    \n    \n         A tibble: 15 x 2\n          title_nlp_multiword_phrases           records\n          <chr>                                   <dbl>\n        1 Digital Map System                        10.\n        2 conversion Path Performance Measures       9.\n        3 Mobile Device                              8.\n        4 Search Results                             8.\n        5 Geographical Relevance                     4.\n        6 Local Search Results                       4.\n        7 Location Prominence                        4.\n        8 Network Speech Recognizers                 4.\n        9 Processing Queries                         4.\n       10 Search Query                               4.\n       11 aspect-Based Sentiment Summarization       3.\n       12 authoritative Document Identification      3.\n       13 Business Listings Search                   3.\n       14 Content Providers                          3.\n       15 indexing Documents                         3.\n\n  \n\n    \n    \n    write_csv(google_phrases, \"google_phrases_1990_2012.csv\")\n\nWe now have the following .csv files.\n\n  1. `pizza_total_1990_2012`\n  2. `pizza_country_1990_2012`\n  3. `pizza_applicants_1990_2012`\n  4. `pizza_ipcclass_1990_2012`\n  5. `pizza_phrases_1990_2012`\n  6. `Google_1990_2012`\n  7. `Google_ipclass_1990_2012`\n  8. `Google_ipcsubclass_1990_2012`\n  9. `Google_phrases-1990_2012`\n\n   Creating an infographic in infogr.am\n\nIf you are starting this chapter here then download the datasets we will be\nusing as a single zip file from the Manual repository here and then unzip the\nfile.\n\nWe first need to sign up for a free account with infogr.am\n\nWe will then see a page with some sample infographics to provide ideas to get\nyou started.\n\n  \nClick on one of the infograms with a graph such as Trends in Something and\nthen click inside the graph box itself and select the edit button in the top\nright.\n\nThis will open up a data panel with the toy data displayed.\n\nWe want to replace this data by choosing the upload button and selecting our\n`pizza_country_1990_2012.csv` file.\n\nWe now have a decent looking graph for our country trends data where we can\nsee the number of records per country and year by hovering over the relevant\ndata points. While some of the countries with low frequency data are crunched\nat the bottom (and would be better displayed in a separate graph), hovering\nover the data or over a country name will display the relevant country\nactivity. We will therefore live with this.\n\nWe now want to start adding story elements by clicking on the edit button in\nthe title. Next we can start adding new boxes using the menu icons on the\nright. Here we have changed the title, added a simple body text for the data\ncredit and then a quote from someone describing themselves as the Head of\nPizza Analytics.\n\nNext we need to start digging into the data using our IPC, applicants and\nphrases data.\n\nTo work with our IPC class data we will add a bar chart and load the data. To\ndo this select the graph icon in the right and then Bar. Once again we will\nchoose edit and then load our `pizza_ipcclass_1990_2012` dataset. Then we can\nadd a descriptive text box. We can then continue to add elements as follows:\n\n  1. applicants bar chart\n  2. pizza phrases by selecting graph and word cloud\n  3. Google ipc-subclass\n  4. Google word cloud.\n\nOne useful approach to developing an infographic is to start by adding the\nimages and then add titles and text boxes to raise key points. In infogram new\ntext boxes appear below existing boxes but can be repositioned by dragging and\ndropping boxes onto each other.\n\nOne nice feature of infogram is that it is easy to share the infographic with\nothers through a url, an embed code or on facebook or via twitter.\n\nAt the end of the infographic it is a good idea to provide a link where the\nreader can obtain more information, such as the full report or the underlying\ndata. In this case we will add a link to the Tableau workbook on pizza patent\nactivity that we developed in an earlier chapter.\n\nOur final infographic should look something like this.\n\n    Round Up\n\nIn this chapter we have concentrated on using R to tidy patent data in order\nto create an online infographic using free software. Using our trusty pizza\npatent data from WIPO Patentscope we walked through the process of wrangling\nand tidying patent data first using short lines of code that we then combined\ninto a reusable function. As this introduction to tidying data in R has\nhopefully revealed, R and packages such as `dplyr`, `tidyr` and `stringr`\nprovide very useful tools for working with patent data, and they are free and\nwell supported.\n\nIn the final part of the chapter we used the data we had generated in RStudio\nto create an infographic using infogr.am that we then shared online. Infogram\nis just one of a number of online infographic services and it is well worth\ntrying other services such as easel.ly to find a service that meets your\nneeds.\n\nAs regular users of R will already know, it is already possible to produce all\nof these graphics (such as word clouds) directly in R using tools such as\n`ggplot2`, `plotly` and word clouds using packages such as `wordcloud`. Some\nof these topics have been covered in other chapters and for more on text\nmining and word clouds in R see this recent article on R-bloggers. None of the\ninfographic services we viewed appeared to offer an API that would enable a\ndirect connection with R. There also seems to be a gap in R’s packages where\ninfographics might sit with this 2015 R-bloggers article providing a walk\nthrough on how to create a basic infographic.\n\n* * *\n\n  1. http://stackoverflow.com/questions/25975827/how-to-feed-the-result-of-a-pipe-chain-magrittr-to-an-object↩\n\n    _Related_\n\nShareTweet\n\nTo  leave a comment  for the author, please follow the link and comment on\ntheir blog:  Paul Oldham's Analytics Blog .\n\n* * *\n\nR-bloggers.com offers  daily e-mail updates  about R news and tutorials\nabout learning R and many other topics. Click here if you're looking to post\nor find an R/data-science job.\n\n* * *\n\nWant to share your content on R-bloggers? click here if you have a blog, or\nhere if you don't.\n\n<- Previous post\n\nNext post ->\n\n  \n\n> R bloggers Facebook page\n\n     Most viewed posts (weekly)\n\n  * 5 Ways to Subset a Data Frame in R\n  * How to write the first for loop in R\n  * Introducing our new book, Tidy Modeling with R\n  * How to Explore Data: {DataExplorer} Package\n  * R – Sorting a data frame by the contents of a column\n\n     Sponsors\n\n     Recent Posts\n\n  * Multi-Armed Bandit with Thompson Sampling\n  * ‘Run for RLadies’ online event\n  * 100 Time Series Data Mining Questions - Part 4\n  * Whose dream is this? When and how to use the Keras Functional API\n  * Moving on as Head of Solutions and AI at Draper and Dash\n  * Permutations in R\n  * Sequential satisficing\n  * A Frosty Deal?\n  * R – Risk and Compliance Survey: we need your help!\n  * VirtuEARL: Speaker interview\n  * D&D’s Data Science Platform (DSP) – making healthcare analytics easier\n  * Gold-Mining Week 2 (2020)\n  * High School Swimming State-Off Tournament Championship California (1) vs. Texas (2)\n  * Introducing our new book, Tidy Modeling with R\n  * Learning Data Science with RStudio Cloud: A Student’s Perspective\n\n      Jobs for R-users\n\n  * Junior Data Scientist / Quantitative economist\n  * Senior Quantitative Analyst\n  * R programmer\n  * Data Scientist – CGIAR Excellence in Agronomy (Ref No: DDG-R4D/DS/1/CG/EA/06/20)\n  * Data Analytics Auditor, Future of Audit Lead @ London or Newcastle\n\n      python-bloggers.com (python/data-science news)\n\n  * Technical documentation\n  * Sequential satisficing\n  * Python Musings  4: Why you shouldn’t use Google Forms for getting Data- Simulating Spam Attacks with Selenium\n  * Building a Chatbot with Google DialogFlow\n  * Big Data Ignite 2020 Webinar Series\n  * How to Create Dummy Pandas Data Frames\n  * LanguageTool: Grammar and Spell Checker in Python\n\n Full list of contributing R-bloggers \n\n     Archives\n\nArchives Select Month September 2020  (109) August 2020  (178) July 2020\n(226) June 2020  (203) May 2020  (285) April 2020  (291) March 2020  (246)\nFebruary 2020  (218) January 2020  (213) December 2019  (215) November 2019\n(193) October 2019  (216) September 2019  (211) August 2019  (256) July 2019\n(228) June 2019  (218) May 2019  (250) April 2019  (275) March 2019  (295)\nFebruary 2019  (255) January 2019  (281) December 2018  (252) November 2018\n(285) October 2018  (308) September 2018  (291) August 2018  (270) July 2018\n(333) June 2018  (298) May 2018  (321) April 2018  (301) March 2018  (291)\nFebruary 2018  (241) January 2018  (330) December 2017  (261) November 2017\n(270) October 2017  (290) September 2017  (294) August 2017  (340) July 2017\n(283) June 2017  (317) May 2017  (349) April 2017  (324) March 2017  (365)\nFebruary 2017  (317) January 2017  (367) December 2016  (347) November 2016\n(294) October 2016  (306) September 2016  (254) August 2016  (287) July 2016\n(326) June 2016  (263) May 2016  (292) April 2016  (260) March 2016  (302)\nFebruary 2016  (268) January 2016  (337) December 2015  (304) November 2015\n(234) October 2015  (259) September 2015  (238) August 2015  (264) July 2015\n(243) June 2015  (213) May 2015  (235) April 2015  (211) March 2015  (259)\nFebruary 2015  (212) January 2015  (245) December 2014  (236) November 2014\n(221) October 2014  (218) September 2014  (259) August 2014  (217) July 2014\n(235) June 2014  (241) May 2014  (243) April 2014  (260) March 2014  (289)\nFebruary 2014  (269) January 2014  (263) December 2013  (264) November 2013\n(241) October 2013  (234) September 2013  (215) August 2013  (224) July 2013\n(254) June 2013  (272) May 2013  (260) April 2013  (279) March 2013  (277)\nFebruary 2013  (294) January 2013  (343) December 2012  (308) November 2012\n(277) October 2012  (308) September 2012  (270) August 2012  (263) July 2012\n(247) June 2012  (298) May 2012  (287) April 2012  (295) March 2012  (304)\nFebruary 2012  (264) January 2012  (280) December 2011  (251) November 2011\n(261) October 2011  (281) September 2011  (187) August 2011  (258) July 2011\n(219) June 2011  (225) May 2011  (239) April 2011  (268) March 2011  (249)\nFebruary 2011  (205) January 2011  (209) December 2010  (188) November 2010\n(172) October 2010  (219) September 2010  (185) August 2010  (203) July 2010\n(175) June 2010  (167) May 2010  (164) April 2010  (152) March 2010  (165)\nFebruary 2010  (135) January 2010  (121) December 2009  (126) November 2009\n(66) October 2009  (87) September 2009  (65) August 2009  (56) July 2009  (64)\nJune 2009  (54) May 2009  (35) April 2009  (38) March 2009  (40) February 2009\n(33) January 2009  (42) December 2008  (16) November 2008  (14) October 2008\n(10) September 2008  (8) August 2008  (11) July 2008  (7) June 2008  (8) May\n2008  (8) April 2008  (4) March 2008  (5) February 2008  (6) January 2008\n(10) December 2007  (3) November 2007  (5) October 2007  (9) September 2007\n(7) August 2007  (21) July 2007  (9) June 2007  (3) May 2007  (3) April 2007\n(1) March 2007  (5) February 2007  (4) November 2006  (1) October 2006  (2)\nAugust 2006  (3) July 2006  (1) June 2006  (1) May 2006  (3) April 2006  (1)\nMarch 2006  (1) February 2006  (5) January 2006  (1) October 2005  (1)\nSeptember 2005  (3) May 2005  (1)\n\n     Other sites\n\n  * Jobs for R-users\n  * SAS blogs\n\nCopyright (C) 2020 | MH Corporate basic by MH Themes\n\n  _Never miss an update!_  \n Subscribe to R-bloggers  to receive  \ne-mails with the latest R posts.  \n(You will not see this message again.)\n\nSubmit\n\nClick here to close (This popup will not appear again)\n\n",
          "lemma_content": "r-blogger r news tutorial contribute hundred r blogger home rss add blog learn r r job submit new job free browse late job free contact create Infographic infogram post April 19 2016 Paul Oldham Analytics Blog R blogger 0 comment article publish Paul Oldham Analytics Blog contribute R-bloggers can report issue content page want share content R-bloggers click blog ShareTweet article will use RStudio prepare patent datum visualisation infographic use online software tool infogram infographic popular way present datum way easy reader understand read long report infographic suited present summary datum simple message key finding good infographic can encourage audience read detailed report tool engagement audience presentation finding patent research patent office create infographic part report policy maker other client Instituto Nacional Propiedade Industrial INPI Brazil produce regular two page Technology Radar Radar Tecnologico consist chart map summarise detailed research subject such Nanotechnology Waste Management WIPO Patent Landscape Reports go depth patent activity particular area accompany one page infographic prove popular such infographic accompany recent report assistive device grow number company offer online infographic software service such infogr.am easel.ly piktochart.com canva.com venngage.com mention selection offering Cool Infographics website provide useful overview available tool one feature many service base freemium model create graphic free ability export file available format export masterpiece high resolution depend upgrade monthly account vary price chapter test drive infogr.am chart friendly service export option depend pay account article divide two section 1 part 1 focus use RStudio prepare patent datum visualisation infographic software use dplyr tidyr stringr package involve deal common problem patent datum such concatenated field white space create count data field part 1 intend start use r assume prior knowledge R. 2 part 2 produce infographic datum use infogr.am article chapter WIPO Manual Open Source Patent Analytics can read chapter electronic book format find material include presentation WIPO Analytics Github homepage get start start need ensure RStudio r operating system instal follow instruction RStudio website forget follow link install r operating system work RStudio good practice work project will keep file project same folder create project go file New Project create project call project infographic file create save project will list file tab RStudio r work use package library 7 490 whole range purpose will use few install package use following copy paste code Console press enter install.packages \"tidyverse group package will need package can instal select Packages tab type name package load package library use follow check tick box Packages pane library readr library dplyr library tidyr library stringr library ggplot2 ready go Load .csv file use readr will work pizza_medium_clean dataset online Github Manual repository download file remember click file name select raw download actual file can use easy use read_csv function readr package read pizza datum Github repository note raw beginning filename library readr pizza read_csv \"https://github.com wipo-analytic opensource-patent-analytic blob master/2_dataset pizza_medium_clean pizza.csv?raw true readr will display warning file arise effort parse publication date import will ignore will use field alternative import Github download file rstudio use file Import dataset experience problem direct import file File Import Dataset approach will give range easy use control figure .csv tab separate file Viewing Data can view datum variety way 1 console pizza tibble 9 996 31 applicants_cleane applicants_clean applicants_orga applicants_original chr chr chr chr 1 NA People NA NA 2 Ventimeglia Jamie Jo People NA Ventimeglia Jamie 3 Cordova Robert Mart People NA Cordova Robert;Mar 4 Lazarillo De Tormes corporate Lazarillo De LAZARILLO DE TORME 5 NA People NA NA 6 Depoortere Thomas People NA DEPOORTERE Thomas 7 Frisco Findus Ag corporate Frisco Findus Ag frisco-findus AG 8 Bicycle Tools Incorp corporate bicycle Tools bicycle Tools Inco 9 Castiglioni Carlo People NA CASTIGLIONI CARLO 10 NA People NA na 9 986 more row 27 more variable inventors_cleane chr inventors_original chr ipc_class chr ipc_codes chr ipc_names chr ipc_original chr chr ipc_subclass_detail chr ipc_subclass_names chr priority_country_code chr priority_country_code_name chr priority_data_original chr priority_date chr publication_country_code chr publication_country_name chr publication_date chr publication_date_original chr publication_day int publication_month int publication_number chr publication_number_espacenet_links chr publication_year int title_cleaned chr title_nlp_cleaned chr title_nlp_multiword_phrases chr title_nlp_raw chr title_original chr 2 Environment click blue arrow see environment keep click open new window datum 3 use view command data.frame table View pizza possible use view command environment difficulty console large amount datum will stream past identify type object want know type object work more detail object know common command obtain information object class pizza type object name pizza name variable str pizza structure object dim pizza dimension object useful command list str allow access structure object see type str pizza max.level 1 str useful can see name field vector type Most patent datum character vector date form integer work datum will want select aspect datum focus specific set column create graph may want add information numeric count dplyr package provide set handy function select add count datum tidyr stringr package sister package contain range other useful function work datum cover other chapter graph use r will go pull function can use dataset select case will start use select function limit datum specific column can use name numeric position good large number column 1:31 dplyr most r package exist character column require library dplyr pizza_number select pizza publication_number publication_year new data.frame contain two column one year one publication number note create new object call pizza_number use select name original datum column want fundamental feature select will drop column name good create new object use want keep original datum later work add datum mutate mutate dplyr function allow add datum base exist datum data frame example perform calculation case patent datum lack numeric field use count can assign value publication field use sum number 1 follow library dplyr pizza_number mutate pizza_number n sum publication_number 1 view pizza_number value 1 column publication number note patent datum priority application publication family number may occur multiple time would want reduce dataset distinct record would use n_distinct pizza_number$publication_number dplyr unique pizza_number$publication_number base R. publication number unique can proceed Counting datum use count moment multiple instance same year patent publication occur year want calculate many document publish year will use dplyr function count will use publication_year add wt weight value count library dplyr pizza_total count pizza_number publication_year wt n pizza_total tibble 58 2 publication_year nn int dbl 1 1940 1 2 1954 1 3 1956 1 4 1957 1 5 1959 1 6 1962 1 7 1964 2 8 1966 1 9 1967 1 10 1968 8 48 more row examine pizza_total will see publication year sum value record year raise question know r calculate count know 9996 record pizza dataset check count correct can use sum select column want sum use library dplyr sum pizza_total$nn 1 9996 good can move sign one main way subsetting tell r want work specific column other rename field rename will use rename dplyr rename field note understanding field require quote mark can take effort case rename character vector publication_year pubyear require quote rename numeric vector library dplyr pizza_total rename pubyear publication_year publication nn print tibble 58 2 pubyear publication int dbl 1 1940 1 2 1954 1 3 1956 1 4 1957 1 5 1959 1 6 1962 1 7 1964 2 8 1966 1 9 1967 1 10 1968 8 48 more row make quickplot qplot use qplot function ggplot2 can draw quick line graph note qplot unusual r datum pizza_total appear coordinate will specify want line use geom geom leave will scatter plot will give idea plot may look infographic action may want take datum library ggplot2 qplot pubyear y = publication datum = pizza_total geom = line plot reveal data cliff recent year reflect lack datum last 2-3 year recent document feed system route publication good idea remove datum cliff cut datum 2-3 year present case two year sufficient 3 year good rule thumb long tail datum limited datum 1940 late 1970 depend purpose analysis may want keep datum historical analysis focus recent period will limit datum specific value use dplyr function filter Filter datum use filter contrast select work column filter dplyr work row case need filter value pubyear column remove datum 1990 will use great equal operator pubyear column will use less equal operator value 2012 one strength filter dplyr easy filter multiple value same expression similar filter function base r use filter will remove 30 record year record NA available will write file disk use simple write_csv readr use write_csv name datum provide file name .csv extension case other example use descriptive file name bearing mind Windows system limitation length type character can use file name library dplyr library readr pizza_total filter pizza_total pubyear 1990 pubyear 2012 write_csv pizza_total pizza_total_1990_2012.csv pizza_total tibble 23 2 pubyear publication int dbl 1 1990 139 2 1991 154 3 1992 212 4 1993 201 5 1994 162 6 1995 173 7 1996 180 8 1997 186 9 1998 212 10 1999 290 13 more row print console will see datum cover period 1990-2012 use filter value way important remember apply filter subsequent operation datum such applicant match same datum period see .csv file can head file tab assume create project file will appear list project file click file name will display raw unformatted datum RStudio simplify code pipe handle code one line time one great strength use programming language can run multiple line code two basic way can will create new temporary object df demonstrate 1 standard way library dplyr library ggplot2 df select pizza publication_number publication_year df mutate df n sum publication_number 1 df count df publication_year wt n df rename df pubyear publication_year publication nn df filter df pubyear 1990 pubyear 2012 qplot pubyear y = publication datum df geom = line code create six line long select code run one go will produce graph one feature code time run function object total name start function mutate df overwrite object can save lot typing reduce complexity code use pipe operator introduce magrittr package adopt Hadley Wickham datum wrangling tidying package 2 use pipe pipe popular way writing r code simplify write r code speed popular pipe mean case go create new temporary object df1 apply select pizza mutate count rename filter note name dataset select need keep overwrite object library dplyr library ggplot2 df1 select pizza publication_number publication_year mutate n sum publication_number 1 count publication_year wt n rename pubyear publication_year publication nn filter pubyear 1990 pubyear 2012 qplot pubyear y = publication data = . geom = line print standard code type df nine time arrive same result use pipe type df1 great importance use pipe simplify structure r code introduce basic logic make easy understand one point note code qplot require name datum case df1 df1 final output code exist input object final line run attempt use data df1 qplot will receive error message way use place data object way qplot will know want graph output early code need add explicit call print display graph code will work will see graph inspect structure df1 object use str df1 console will list reason object mixed component include data.frame datum additional datum set content plot direct link r infographic software will create problem infographic software will know interpret list object good idea use straight data.frame exclude call qplot add need follow library dplyr library ggplot2 df2 select pizza publication_number publication_year mutate n sum publication_number 1 count publication_year wt n rename pubyear publication_year publication nn filter pubyear 1990 pubyear 2012 print tibble 23 2 pubyear publication int dbl 1 1990 139 2 1991 154 3 1992 212 4 1993 201 5 1994 162 6 1995 173 7 1996 180 8 1997 186 9 1998 212 10 1999 290 13 more row note case only change need include reference df2 data frame data argument call qplot library ggplot2 qplot pubyear y = publication datum df2 geom = line Harmonising datum one challenge create multiple table baseline dataset keep track subdataset moment two basic object will work 1 pizza raw dataset 2 pizza_total create pizza_number limit 1990_2012 remainder chapter will want create additional dataset pizza dataset 1 country trend 2 applicant 3 International Patent Classification IPC Class 4 phrase 5 Google 6 Google IPC 7 Google phrase need make sure datum generate raw dataset match period pizza_total dataset risk will generate subdataset count raw pizza dataset handle will use filter create new baseline dataset unambiguous name library dplyr pizza_1990_2012 rename pizza pubyear publication_year filter pubyear 1990 pubyear 2012 pizza_1990_2012 tibble 8 262 31 applicants_cleane applicants_clean applicants_organ applicants_original chr chr chr chr 1 NA People NA NA 2 Lazarillo De Torme corporate Lazarillo De Tor LAZARILLO DE TORMES 3 NA People NA NA 4 Depoortere Thomas People NA DEPOORTERE Thomas 5 Frisco Findus Ag corporate Frisco Findus Ag frisco-findus AG 6 Bicycle Tools Inco corporate bicycle tool bicycle Tools Incor 7 Castiglioni Carlo People NA CASTIGLIONI CARLO 8 na People NA NA 9 Bujalski Wlodzimi People NA BUJALSKI WLODZIMIE 10 Ehrno Flexible A s corporate People Ehrno Flexible a EHRNO FLEXIBLE A s 8 252 more row 27 more variable inventors_cleane chr inventors_original chr ipc_class chr ipc_codes chr ipc_names chr ipc_original chr chr ipc_subclass_detail chr ipc_subclass_names chr priority_country_code chr priority_country_code_name chr priority_data_original chr priority_date chr publication_country_code chr publication_country_name chr publication_date chr publication_date_original chr publication_day int publication_month int publication_number chr publication_number_espacenet_links chr pubyear int title_cleaned chr title_nlp_cleaned chr title_nlp_multiword_phrases chr title_nlp_raw chr title_original chr case start call rename make consistent pizza_total table use pipe filter datum year note filter raw datum set value important inspect check field clean concatenate reason data concatenate happen lot patent datum lookup tidyr::separate_row position create country trend table Country Trends use spread two basic datum format long wide pizza dataset long format column variable publication_country row publication_country contain country name common useful data format case such infogr.am visualisation software will expect datum wide format case country name would become variable column name year form row number record year observation key tidyr function spread will start use select create table field want will use mutate add numeric field count datum illustrate process run code will create object library dplyr select pizza_1990_2012 publication_country_name publication_number pubyear mutate n sum publication_number 1 count publication_country_name pubyear wt n print tibble 223 3 publication_country_name pubyear nn chr int dbl 1 Canada 1990 19 2 Canada 1991 49 3 Canada 1992 66 4 Canada 1993 59 5 Canada 1994 50 6 Canada 1995 39 7 Canada 1996 36 8 Canada 1997 45 9 Canada 1998 46 10 Canada 1999 47 213 more row run code will see result long format want take publication_country_name column spread form column nn value use spread note take data argument pizza_1990_2012 key publication_country_name value column nn create count use pipe datum need name first line additional argument see spread library dplyr library tidyr country_total select pizza_1990_2012 publication_country_name publication_number pubyear mutate n sum publication_number 1 count publication_country_name pubyear wt n spread publication_country_name nn country_totals tibble 23 17 pubyear Canada China Eurasian Patent european Paten Germany Israel Japan int dbl dbl dbl dbl dbl dbl dbl 1 1990 19 NA NA 22 2 NA na 2 1991 49 NA NA 29 2 NA NA 3 1992 66 NA NA 36 2 1 NA 4 1993 59 NA NA 29 2 NA NA 5 1994 50 NA NA 26 5 NA NA 6 1995 39 NA NA 29 2 1 NA 7 1996 36 1 NA 27 1 1 na 8 1997 45 NA NA 34 1 NA NA 9 1998 46 NA NA 36 1 NA 17 10 1999 47 2 2 60 4 NA 26 13 more row 9 more variable Korea Republic dbl Mexico dbl Patent Co-operation Treaty dbl Portugal dbl Russian Federation dbl Singapore dbl South Africa dbl Spain dbl United States America dbl datum wide format case such infogr.am visualisation software may expect country name name row column name year can modify call spread replace publication_country_name pubyear will write datum disk use infographic library dplyr library readr country_total select pizza_1990_2012 publication_country_name publication_number pubyear mutate n sum publication_number 1 count publication_country_name pubyear wt n note spread pubyear nn note nn country_totals tibble 16 24 publication_country 1990 1991 1992 1993 1994 1995 1996 1997 chr dbl dbl dbl dbl dbl dbl dbl dbl 1 Canada 19 49 66 59 50 39 36 45 2 China NA NA NA NA NA NA 1 NA 3 Eurasian Patent Org NA NA NA NA NA NA NA NA 4 European Patent 22 29 36 29 26 29 27 34 5 Germany 2 2 2 2 5 2 1 1 6 Israel NA NA 1 NA NA 1 1 NA 7 Japan NA NA NA NA NA NA NA NA 8 Korea Republic NA NA NA 1 NA NA 1 1 9 Mexico NA NA NA NA NA NA NA NA 10 Patent Co-operation 8 13 31 16 20 22 23 26 11 Portugal NA NA NA NA NA NA NA NA 12 Russian Federation NA NA NA NA NA NA NA 5 13 Singapore NA NA NA NA NA NA NA NA 14 South Africa 2 3 3 3 3 1 9 7 15 Spain NA NA NA NA NA NA NA NA 16 United States am 86 58 73 91 58 79 81 67 15 more variable 1998 dbl 1999 dbl 2000 dbl 2001 dbl 2002 dbl 2003 dbl 2004 dbl 2005 dbl 2006 dbl 2007 dbl 2008 dbl 2009 dbl 2010 dbl 2011 dbl 2012 dbl write_csv country_total pizza_country_1990_2012.csv restore datum long format would need use gather counterpart spread gather take dataset key name column want gather country value numeric count case n position column gather note need look column position country_total use View count column use ncol country_total library dplyr gather country_total year n 2:24 print tibble 368 3 publication_country_name year n chr chr dbl 1 Canada 1990 19 2 China 1990 NA 3 Eurasian Patent Organization 1990 NA 4 European Patent Office 1990 22 5 Germany 1990 2 6 Israel 1990 NA 7 Japan 1990 NA 8 Korea Republic 1990 NA 9 Mexico 1990 NA 10 Patent Co-operation Treaty 1990 8 358 more row combination spread gather work prepare datum format expect other software one main issue encounter patent datum datum tidy various field concatenate Tidying data separating Gathering patent datum see concatenated field separator applicant name inventor name International Patent Classification IPC code document number priority number family number need tidy datum datum cleaning such clean name prepare analysis visualisation more concept tidy datum read Hadley Wickham Tidy Data article new r Data Science book Garrett Grolemund Hadley Wickham see chapter 12 recommend tidy patent datum will need two thing 1 separate datum cell contain unique data point name code publication number involve separate datum column 2 gather datum involve transform datum column create row separate datum column easy tool such Excel gather datum separate row difficult easy r tidyr package tidyr package contain three function useful work patent datum deal concatenated field column key function will work applicants_cleaned field pizza dataset field contain concatenate name separator example line 1_9 single applicant name na value line 10 line 59 see Ehrno Flexible A s Stergaard Ole Farrell Brian Mcnulty John Vishoot Lisa problem deal thousand line applicant name know many name may concatenate cell basis separate datum column split column example use Text Columns Excel would need work gather column row function tidyr make light work problem use function name dataset column want separate row separator sep library dplyr library tidyr pizza1 separate_rows pizza_1990_2012 applicants_cleaned sep = pizza1 tibble 12 729 31 applicants_cleane applicants_cleane applicants_organ applicants_original chr chr chr chr 1 NA People NA NA 2 Lazarillo De Torm corporate Lazarillo De Tor LAZARILLO DE TORMES 3 NA People NA NA 4 Depoortere Thomas People NA DEPOORTERE Thomas 5 Frisco Findus Ag corporate Frisco Findus Ag frisco-findus AG 6 Bicycle Tools Inc corporate bicycle tool bicycle Tools Incor 7 Castiglioni Carlo People NA CASTIGLIONI CARLO 8 NA People NA NA 9 Bujalski Wlodzim People na BUJALSKI WLODZIMIE 10 Ehrno Flexible A S corporate People Ehrno Flexible a EHRNO FLEXIBLE A s 12 719 more row 27 more variable inventors_cleane chr inventors_original chr ipc_class chr ipc_codes chr ipc_names chr ipc_original chr chr ipc_subclass_detail chr ipc_subclass_names chr priority_country_code chr priority_country_code_name chr priority_data_original chr priority_date chr publication_country_code chr publication_country_name chr publication_date chr publication_date_original chr publication_day int publication_month int publication_number chr publication_number_espacenet_links chr pubyear int title_cleaned chr title_nlp_cleaned chr title_nlp_multiword_phrases chr title_nlp_raw chr title_original chr original dataset contain 8 262 row new dataset split applicant name contain 12 729 row function move target column column 1 column 31 data frame can move inspect library dplyr pizza1 select pizza1 31 1:30 do great job one problem concatenated name extra white space separator will deal next trim stringr inspect the bottom column subsetting use will see lot name leading whitespace space result separate exercise space take look last few row datum use tail tail pizza1$applicants_cleane 20 1 Yahoo Inc Clarcor Inc 3 Holden Jeffrey A Vengroff Darren E 5 Casper Jeffrey L Erickson Braden J 7 Oppenheimer Alan A Ray Madonna M 9 Weber Jean L Pandey Neena 11 Sharma Sudhanshu Verizon Patent Licensing Inc 13 Pandey Neena Sharma Sudhanshu 15 Brown Michael Urban Scott 17 Brown Michael Urban Scott 19 Cole Lorin R Middleton Scott W big issue count make use applicants_cleaned field will treat Oppenheimer Alan A Oppenheimer Alan A separate name should group can address couple way one approach recognise separator simple space call case call would sep = will add line code illustrate impact change tmp separate_rows pizza_1990_2012 applicants_cleaned sep = tail tmp$applicants_cleaned 20 1 Yahoo Inc Clarcor Inc 3 Holden Jeffrey A Vengroff Darren E 5 Casper Jeffrey L Erickson Braden J 7 Oppenheimer Alan A Ray Madonna M 9 Weber Jean L Pandey Neena 11 Sharma Sudhanshu Verizon Patent Licensing Inc 13 Pandey Neena Sharma Sudhanshu 15 Brown Michael Urban Scott 17 Brown Michael Urban Scott 19 Cole Lorin R Middleton Scott W way address use str_trim function stringr package can address problem use function stringr package str_trim choice str_trim trim whitespace right leave will choose seek modify exist column create new vector data.frame will use select column datum str_trim function will apply function applicant column pizza1 library stringr pizza1$applicants_cleane str_trim pizza1$applicants_cleane side tail pizza1$applicants_cleane 20 1 Yahoo Inc Clarcor Inc 3 Holden Jeffrey A Vengroff Darren E 5 Casper Jeffrey L Erickson Braden J 7 Oppenheimer Alan A Ray Madonna M 9 Weber Jean L Pandey Neena 11 Sharma Sudhanshu Verizon Patent Licensing Inc 13 Pandey Neena Sharma Sudhanshu 15 Brown Michael Urban Scott 17 Brown Michael Urban Scott 19 Cole Lorin R Middleton Scott W note use str_trim use subsetting modify applicant column place efficient way do pipe appear difficult data.frame need exist str_trim act place end vector applicant name data.frame solution problem provide Stack Overflow1 practice efficient solution case recognise separator space will true make tool stringr invaluable learn more string manipulation r try chapter 14 R Data Science Garrett Grolemund Hadley Wickham can tie step use pipe following simple code will become applicant table use infographic will add call rename rename applicants_cleaned tidy library dplyr library tidyr library stringr applicant rename pizza pubyear publication_year filter pubyear 1990 pubyear 2012 separate_row applicants_cleane sep = rename applicant applicants_cleane select 31 1:30 move separate column beginning applicant tibble 12 729 31 title_original applicant applicants_clea applicants_orga applicants_orig chr chr chr chr chr 1 pizza na People NA na 2 improved pizza Lazarillo corporate Lazarillo De LAZARILLO DE 3 Pizza separat NA People NA na 4 Pizza separat Depoorter People NA DEPOORTERE Tho 5 pizza PREPARA Frisco Fi corporate Frisco Findus Ag FRISCO-FINDUS AG 6 Pizza Cutter bicycle t corporate bicycle Tools bicycle Tools 7 PIZZA BOX Castiglio People NA CASTIGLIONI CA 8 PIZZA BOX NA People NA na 9 MORE ATTRACTI Bujalski People NA BUJALSKI WLODZ 10 PIZZA PACKAGI Ehrno Fle corporate peop Ehrno flexible EHRNO FLEXIBLE 12 719 more row 26 more variable inventors_cleane chr inventors_original chr ipc_class chr ipc_codes chr ipc_names chr ipc_original chr chr ipc_subclass_detail chr ipc_subclass_names chr priority_country_code chr priority_country_code_name chr priority_data_original chr priority_date chr publication_country_code chr publication_country_name chr publication_date chr publication_date_original chr publication_day int publication_month int publication_number chr publication_number_espacenet_links chr pubyear int title_cleaned chr title_nlp_cleaned chr title_nlp_multiword_phrases chr title_nlp_raw chr will want create plot applicant datum infographic software need introduce field count may want establish cut off point base number record applicant code will print applicant rank descend order second last line code provide filter number record value can change inspect datum final line omit NA value top result applicant name available library tidyr library dplyr applicant_count select applicant applicant publication_number mutate n sum publication_number 1 count applicant wt n arrange desc nn filter nn 1 na.omit applicant_count tibble 6 178 2 applicant nn chr dbl 1 Graphic Packaging International Inc 154 2 Kraft Foods Holdings Inc 132 3 Google Inc 123 4 Microsoft Corporation 88 5 Pillsbury Company 83 6 General Mills Inc 77 7 Nestec 77 8 Procter & Gamble Company 59 9 Pizza Hut Inc 57 10 Yahoo Inc 54 6 168 more row inspect applicant count use View 6 178 row many display infographic will filter datum value top ten 54 will write datum .csv file use simple write_csv readr library dplyr library tidyr library readr applicant_count select applicant applicant publication_number mutate n sum publication_number 1 count applicant wt n arrange desc nn filter nn 54 na.omit applicant_count tibble 10 2 applicant nn chr dbl 1 Graphic Packaging International Inc 154 2 Kraft Foods Holdings Inc 132 3 Google Inc 123 4 Microsoft Corporation 88 5 Pillsbury Company 83 6 General Mills Inc 77 7 Nestec 77 8 Procter & Gamble Company 59 9 Pizza Hut Inc 57 10 Yahoo Inc 54 write_csv pizza_applicants_1990_2012.csv inspect will see Graphic Packaging International top result 154 result Google rank 123 result follow Microsoft could suggest Google Microsoft enter market online pizza sale pizza making software likely use other use word pizza patent datum aware part infographic will want explore intriguing result more detail can create subdataset Google use filter select applicant use filter see select function column filter dplyr work row will filter datum select row applicant column contain Google Inc. write use infographic note use double quote Google Inc library dplyr library readr google filter applicant applicant Google Inc google tibble 123 31 title_original applicant applicants_clea applicants_orga applicants_orig chr chr chr chr chr 1 location base Google Inc Corporate Peop Google Inc Hafsteinsson Gu 2 AUTHORITATIVE Google Inc Corporate Google Inc GOOGLE INC . 3 Location-Base Google Inc Corporate Peop Google Inc GOOGLE 4 control t Google Inc Corporate Peop Google Inc GOOGLE INC.;BE 5 METHOD SY Google Inc Corporate Google Inc GOOGLE INC . 6 routing queri Google Inc Corporate Google Inc GOOGLE INC . 7 method s Google Inc Corporate Google Inc GOOGLE INC . 8 aspect-base Google Inc Corporate Peop Google Inc Reis George;Goo 9 interpret Google Inc Corporate Google Inc GOOGLE INC . 10 interpret Google Inc Corporate Google Inc GOOGLE INC . 113 more row 26 more variable inventors_cleane chr inventors_original chr ipc_class chr ipc_codes chr ipc_names chr ipc_original chr chr ipc_subclass_detail chr ipc_subclass_names chr priority_country_code chr priority_country_code_name chr priority_data_original chr priority_date chr publication_country_code chr publication_country_name chr publication_date chr publication_date_original chr publication_day int publication_month int publication_number chr publication_number_espacenet_links chr pubyear int title_cleaned chr title_nlp_cleaned chr title_nlp_multiword_phrases chr title_nlp_raw chr write_csv google note correct result period 1990 2012 Google 123 record 191 record whole pizza dataset correct result will achieve use filter separate trimmed datum create applicant data frame generate IPC Tables next step will want generate two table contain International Patent Classification IPC datum IPC code Cooperative Patent Classification CPC present dataset provide information technology involve patent document IPC hierarchical proceed general class level detailed group subgroup level experience reveal majority patent document receive more one IPC code describe technological aspect patent document pizza dataset contain IPC code class subclass level concatenated field one important consideration use IPC datum description long can difficult non-specialist grasp can make visualise datum difficult require manual effort edit label display want generate three IPC table 1 general IPC table pizza dataset 2 general IPC table Google dataset 3 detailed IPC subclass table Google dataset ease presentation infographic will use ipc_class field many patent analytic purpose will general advantage easy visualise generate table can use generic function base code develop deal applicant datum will call function patent_count patent_count function datum col count_col sep n_results p_count dplyr::select datum col count_col tidyr::separate_rows col sep sep col stringr::str_trim side dplyr::mutate n sum count_col = 1 dplyr::group_by col sort true dplyr::rename record nn na.omit head n_results patent_count function base code develop applicant contain variation make work function function take four argument 1 col concatenated column want split gather 2 col_count = column generate count dataset publication_number 3 n_result number result want see new table 10 20 visualisation equivalent number row want see 4 sep separator use separate datum col . patent datum space generate ipc_class datum can follow write file .csv note set number result n_result 10 pizza_ipc_class patent_count data pizza_1990_2012 col ipc_class count_col = publication_number n_results 10 sep = pizza_ipc_class tibble 10 2 ipc_class record chr dbl 1 A21 Baking 2233 2 A23 Foods Foodstuffs 1843 3 B65 convey 1383 4 G06 computing 1326 5 A47 furniture 932 6 H04 Electric Communication Technique 747 7 H05 electric technique provide 613 8 F24 Heating 512 9 A61 Medical Veterinary Science 318 10 G07 check 226 write_csv pizza_ipc_class pizza_ipcclass_1990_2012.csv note dataset base main pizza_1990_2012 dataset include case applicant name available reason use applicant dataset dataset will duplicate IPC field split applicant name result will count ipc number applicant document name suggest important careful work datum tidy impact other count problem apply case Google datum only applicant list data Google exclude co-applicant can use Google dataset identify IPC code google_ipc_class patent_count data google col = ipc_class count_col = publication_number n_results 10 sep = google_ipc_class tibble 7 2 ipc_class record chr dbl 1 G06 computing 105 2 H04 Electric Communication technique 17 3 G01 measure 14 4 G09 educate 11 5 G10 Musical Instruments 7 6 A63 sport 1 7 G08 signal 1 write_csv google_ipc_class google_ipcclass_1990_2012.csv 7 class may expect dominate computing may want dig little more detail let create IPC subclass field google_ipc_subclass patent_count data google col = ipc_subclass_detail count_col = publication_number n_results 10 sep = google_ipc_subclass tibble 10 2 ipc_subclass_detail record chr dbl 1 G06F Electric Digital Data Processing 89 2 G06Q Data Processing Systems Methods adapt Adm 24 3 G01C measure Distances Levels Bearings 14 4 G09B Educational Demonstration Appliances 9 5 G10L Speech Analysis Synthesis 7 6 Wireless Communication Networks 7 7 G09 G arrangement Circuits Control indicate Devices Us 5 8 H04B transmission 4 9 H04L transmission Digital Information E.G. Telegraphic Communi 4 10 H04 M Telephonic Communication 4 write_csv google_ipc_subclass google_ipcsubclass_1990_2012.csv datum technology area need understand datum next final step generate datum text field Phrases Tables will use datum word phrase title patent document use word cloud infographic possible generate type datum r use tm NLP package pizza dataset contain title field break phrase use Vantagepoint software will use will use field title_nlp_multiword_phrase phrase informative individual word will use general patent_count function experimentation may need identify number phrase visualise word cloud pizza_phrases patent_count data pizza_1990_2012 col = title_nlp_multiword_phrases count_col = publication_number n_results 15 sep = pizza_phrases tibble 15 2 title_nlp_multiword_phrases record chr dbl 1 Food Product 179 2 Microwave oven 137 3 make Same 48 4 conveyor Oven 46 5 Crust Pizza 44 6 microwave Heating 41 7 Bakery Product 40 8 pizza Box 40 9 Microwave Cooking 39 10 Pizza Oven 37 11 pizza Dough 35 12 Cook Food 34 13 Baked Product 33 14 Related Method 32 15 Food Item 29 write_csv pizza_phrase pizza_phrases_1990_2012.csv same Google datum google_phrases patent_count data google col = title_nlp_multiword_phrases count_col = publication_number n_results 15 sep = google_phrases tibble 15 2 title_nlp_multiword_phrases record chr dbl 1 Digital Map System 10 2 conversion Path Performance Measures 9 3 Mobile Device 8 4 Search result 8 5 Geographical Relevance 4 6 Local Search result 4 7 Location Prominence 4 8 Network Speech Recognizers 4 9 Processing Queries 4 10 Search Query 4 11 aspect-Based Sentiment Summarization 3 12 authoritative Document Identification 3 13 Business Listings Search 3 14 Content Providers 3 15 indexing document 3 write_csv google_phrases google_phrases_1990_2012.csv following file 1 pizza_total_1990_2012 2 pizza_country_1990_2012 3 pizza_applicants_1990_2012 4 pizza_ipcclass_1990_2012 5 pizza_phrases_1990_2012 6 7 Google_ipclass_1990_2012 8 Google_ipcsubclass_1990_2012 9 Google_phrases-1990_2012 create infographic infogr.am start chapter download dataset will use single zip file Manual repository unzip file need sign free account infogr.am will see page sample infographic provide idea start click one infogram graph such Trends click graph box select edit button top right will open data panel toy datum display want replace data choose upload button select pizza_country_1990_2012.csv file decent look graph country trend datum can see number record country year hover relevant data point country low frequency datum crunch the bottom would display separate graph hover datum country name will display relevant country activity will live want start add story element click edit button title can start add new box use menu icon right change title add simple body text data credit quote describe Head Pizza Analytics need start dig datum use IPC applicant phrase datum work IPC class datum will add bar chart load datum select graph icon right Bar will choose edit load pizza_ipcclass_1990_2012 dataset can add descriptive text box can continue add element follow 1 applicant bar chart 2 pizza phrase select graph word cloud 3 Google ipc-subclass 4 Google word cloud one useful approach develop infographic start add image add title text box raise key point infogram new text box appear exist box can reposition drag drop box other one nice feature infogram easy share infographic other url embed code facebook twitter end infographic good idea provide link reader can obtain more information such full report underlie datum case will add link Tableau workbook pizza patent activity develop early chapter final infographic should look Round chapter concentrate use r tidy patent datum order create online infographic use free software use trusty pizza patent datum WIPO Patentscope walk process wrangle tidying patent datum use short line code combine reusable function introduction tidying datum R reveal r package such dplyr tidyr stringr provide useful tool work patent datum free support final part chapter use datum generate RStudio create infographic use infogr.am share Infogram one number online infographic service worth try other service such easel.ly find service meet need regular user r will know possible produce graphic such word cloud r use tool such ggplot2 word cloud use package such wordcloud topic cover other chapter more text mining word cloud r see recent article R-bloggers none infographic service view appear offer api would enable direct connection R. seem gap r package infographic may sit 2015 r-blogger article provide walk create basic infographic 1 http://stackoverflow.com questions/25975827 how-to-feed-the-result-of-a-pipe-chain-magrittr-to-an-object ↩ _ Related _ ShareTweet leave comment author follow link comment blog Paul Oldham Analytics Blog R-bloggers.com offer daily e-mail update r news tutorial learn r many other topic click look post find r data-science job want share content R-bloggers click blog previous post next post - r blogger Facebook page view post weekly 5 Ways subset data frame r write first loop r introduce new book Tidy Modeling r explore Data DataExplorer package r sort data frame content column sponsor recent post multi-arme Bandit Thompson Sampling run rladie online event 100 Time Series Data Mining Questions Part 4 dream use Keras Functional api move Head Solutions AI Draper Dash permutation r sequential satisficing Frosty deal r risk Compliance Survey need help virtuearl Speaker interview D D Data Science Platform DSP make healthcare analytic easy gold-mining week 2 2020 High School Swimming State-Off Tournament Championship California 1 Texas 2 introduce new book Tidy Modeling r Learning Data Science RStudio cloud A Student perspective job r-user Junior Data Scientist Quantitative economist Senior Quantitative Analyst r programmer Data Scientist CGIAR excellence Agronomy Ref no DDG-R4D DS/1 CG EA/06/20 Data Analytics Auditor Future Audit Lead London Newcastle python-bloggers.com python data-science news technical documentation sequential satisficing Python Musings 4 should use Google Forms get data- simulate spam attack selenium build Chatbot Google DialogFlow Big Data Ignite 2020 Webinar Series create Dummy Pandas Data frame LanguageTool grammar spell Checker Python full list contribute R-bloggers Archives Archives Select Month September 2020 109 August 2020 178 July 2020 226 June 2020 203 May 2020 285 April 2020 291 March 2020 246 February 2020 218 January 2020 213 December 2019 215 November 2019 193 October 2019 216 September 2019 211 August 2019 256 July 2019 228 June 2019 218 May 2019 250 April 2019 275 March 2019 295 February 2019 255 January 2019 281 December 2018 252 November 2018 285 October 2018 308 September 2018 291 August 2018 270 July 2018 333 June 2018 298 May 2018 321 April 2018 301 March 2018 291 February 2018 241 January 2018 330 December 2017 261 November 2017 270 October 2017 290 September 2017 294 August 2017 340 July 2017 283 June 2017 317 May 2017 349 April 2017 324 March 2017 365 February 2017 317 January 2017 367 December 2016 347 November 2016 294 October 2016 306 September 2016 254 August 2016 287 July 2016 326 June 2016 263 May 2016 292 April 2016 260 March 2016 302 February 2016 268 January 2016 337 December 2015 304 November 2015 234 October 2015 259 September 2015 238 August 2015 264 July 2015 243 June 2015 213 May 2015 235 April 2015 211 March 2015 259 February 2015 212 January 2015 245 December 2014 236 November 2014 221 October 2014 218 September 2014 259 August 2014 217 July 2014 235 June 2014 241 May 2014 243 April 2014 260 March 2014 289 February 2014 269 January 2014 263 December 2013 264 November 2013 241 October 2013 234 September 2013 215 August 2013 224 July 2013 254 June 2013 272 May 2013 260 April 2013 279 March 2013 277 February 2013 294 January 2013 343 December 2012 308 November 2012 277 October 2012 308 September 2012 270 August 2012 263 July 2012 247 June 2012 298 May 2012 287 April 2012 295 March 2012 304 February 2012 264 January 2012 280 December 2011 251 November 2011 261 October 2011 281 September 2011 187 August 2011 258 July 2011 219 June 2011 225 May 2011 239 April 2011 268 March 2011 249 February 2011 205 January 2011 209 December 2010 188 November 2010 172 October 2010 219 September 2010 185 August 2010 203 July 2010 175 June 2010 167 May 2010 164 April 2010 152 March 2010 165 February 2010 135 January 2010 121 December 2009 126 November 2009 66 October 2009 87 September 2009 65 August 2009 56 July 2009 64 June 2009 54 May 2009 35 April 2009 38 March 2009 40 February 2009 33 January 2009 42 December 2008 16 November 2008 14 October 2008 10 September 2008 8) August 2008 11 July 2008 7 June 2008 8) May 2008 8) April 2008 4 March 2008 5 February 2008 6 January 2008 10 December 2007 3 November 2007 5 October 2007 9 September 2007 7 August 2007 21 July 2007 9 June 2007 May 2007 3 April 2007 1 March 2007 5 February 2007 4 November 2006 1 October 2006 2 August 2006 3 July 2006 1 June 2006 May 2006 3 April 2006 1 March 2006 1 February 2006 5 January 2006 1 October 2005 1 September 2005 May 2005 1 other site Jobs r-user SAS blog copyright c 2020 MH corporate basic MH theme miss update subscribe r-blogger receive e-mail late r post will see message submit click close popup will appear",
          "kg_generic": [
            {
              "subject": "April 19, 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Analytics Blog",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Analytics Blog",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "The Instituto Nacional de Propiedade Industrial (INPI",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Waste Management",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "easel.ly",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "piktochart.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "canva.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "venngage.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "The Cool Infographics website",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "monthly",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "the WIPO Manual on Open Source Patent Analytics",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the WIPO Analytics",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "File",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Files",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Console",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Packages",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Packages",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Packages",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Load",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Github Manual",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Github",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr)     pizza",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "\"https://github.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Github",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "applicants_cleaned    ",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Jamie Jo",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Cordova Robert",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Mart",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Thomas",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Thomas",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Frisco Findus Ag",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Frisco Findus Ag FRISCO-FINDUS AG",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bicycle Tools Inco",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Carlo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CASTIGLIONI",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "View",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "n_distinct",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "that year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "each year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "1940",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1954",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1956",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1957",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1959",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1962",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1964",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1966",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1967",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1968",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the publication year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "that year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Next",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1940",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1954",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1956",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1957",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1959",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1962",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1964",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1966",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1967",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1968",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ggplot2",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "recent years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the last 2-3 years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2-3 years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "two years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "3 years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1940",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the late 1970s",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pubyear",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1991",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1992",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1993",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1994",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1995",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1996",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1997",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1998",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1999",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Files",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "six",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "complexity",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "df1",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "ggplot2)",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1991",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1992",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1993",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1994",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1995",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1996",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1997",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1998",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1999",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "df2",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "df2",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "International Patent Classification",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Depoortere",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Thomas",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Thomas",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Frisco Findus Ag",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Frisco Findus Ag",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "FRISCO-FINDUS AG",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bicycle Tools Inco",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bicycle Tools Incor",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Carlo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Ehrno Flexible",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "pizza_total",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "publication_country_name",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "publication_country_name pubyear    ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1991",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1992",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1993",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1994",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1995",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1996",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1997",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1998",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1999",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "publication_country_name",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "`Eurasian Patent",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "`European Paten",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1991",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1992",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA                NA               ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1993",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1994",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1995",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "7    1996",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "27",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1997",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1998",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "46",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1999",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "`Russian            Federation`",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "South Africa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "years",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "readr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "publication_country_name",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "n       ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA     NA     NA     NA     NA     NA     NA     NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Russian Federation",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NA     NA     NA     NA     NA     NA     NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Singapore               ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NA     NA     NA     NA     NA     NA     NA     NA         14",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "South Africa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "1998",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1999",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2003",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2005",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "country_totals, year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2:24",
              "property": "rel:instanceof",
              "value": "time"
            },
            {
              "subject": "year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Eurasian Patent Organization",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "European Patent Office",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "combination",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "International Patent Classification",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Tidy Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Garrett Grolemund",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Hadley Wickham",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Excel",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Stergaard",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Farrell Brian",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mcnulty John",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Vishoot Lisa",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Excel",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "applicants_cleaned applicants_cleane",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Lazarillo De Tor…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Thomas",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Frisco Findus Ag",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Corporate",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Frisco Findus Ag",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "FRISCO-FINDUS AG",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bicycle Tools Inc",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bicycle Tools Incor",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CARLO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Wlodzim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "WLODZIMIE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "target",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "31",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "1:30",
              "property": "rel:instanceof",
              "value": "time"
            },
            {
              "subject": "subsetting",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yahoo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Clarcor Inc\"",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Ray Madonna M",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Verizon",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "applicants_cleaned",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yahoo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Clarcor Inc",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jeffrey L\"                 ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Ray Madonna M",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Verizon",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "str_trim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "str_trim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yahoo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Clarcor Inc",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Jeffrey L\"                 ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Ray Madonna M",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Verizon",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Pandey Neena",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Sharma Sudhanshu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "str_trim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "str_trim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Stack Overflow1",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Garrett Grolemund",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Hadley Wickham",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "applicants_cleaned",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "tidyr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "1990",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "31, 1:30",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Frisco Findus Ag FRISCO-FINDUS AG",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CASTIGLIONI",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Bujalski",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "WLODZ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Ehrno Fle",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Peop…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "cut off",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "NA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Kraft Foods Holdings",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Microsoft",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "The Pillsbury Company",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "General Mills",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Procter & Gamble",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yahoo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Inc",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "`View(applicant_count",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "tidyr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Kraft Foods Holdings",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Microsoft",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "The Pillsbury Company",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "General Mills",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Procter & Gamble",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Yahoo",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Inc",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "applicant_count",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Graphic Packaging International",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Microsoft",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Microsoft",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "readr)     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Peop…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Peop…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Peop…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "SY…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Peop…",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "GOOGLE",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the period 1990 to 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the Cooperative Patent Classification",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "sep",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "n_results",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "stringr::str_trim",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "count_col",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "count_col",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "10, sep",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Foods Or Foodstuffs",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "1843",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Electric Communication Technique",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "747",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "F24",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Medical Or Veterinary Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "G07",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "10, sep",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Electric Communication Technique",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Musical Instruments",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google_ipc_class",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "10, sep",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Electric Digital Data Processing",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Processing Systems Or Methods",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Wireless Communication Networks",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Vantagepoint",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "pizza_1990_2012",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "15, sep",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Oven",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Box",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "35",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Cook Food",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Method",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "15, sep",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "google_phrases",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "google_phrases_1990_2012.csv",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google_1990_2012`   7",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Manual",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Pizza Analytics",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Next",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IPC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "facebook",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Tableau",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "WIPO Patentscope",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "infogr.am",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Infogram",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "easel.ly",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "`ggplot2`",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "API",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "gap",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "R-bloggers",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "http://stackoverflow.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "↩",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Analytics Blog",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "R-bloggers.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "daily",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Next",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Facebook",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "weekly",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Ways to Subset a Data Frame",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Thompson Sampling",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "the Keras Functional API",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Draper",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "DSP",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Week 2 (2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "State-Off Tournament Championship",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "economist",
              "property": "rel:instanceof",
              "value": "jobtitle"
            },
            {
              "subject": "Auditor",
              "property": "rel:instanceof",
              "value": "jobtitle"
            },
            {
              "subject": "python-bloggers.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Chatbot",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Google",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Webinar Series",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "Python",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "R-bloggers        Archives  Archives Select Month",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "September 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "226)",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "291) March 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "224) July 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2013",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2012",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2011",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2010",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "66) October 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "65)",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "56)",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "35) April 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "38) March 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "33)",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2009",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "10) September 2008",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2008",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2008",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2008",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "10) December 2007",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2007",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2007",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2007",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2006",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2006",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2005",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "SAS",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "MH",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "r news",
              "property": "contribute by",
              "value": "hundred of r blogger",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can report",
              "value": "issue",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "RStudio",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "an infographic",
              "property": "use",
              "value": "online software tool infogram",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "good infographic",
              "property": "can encourage",
              "value": "audience",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "patent office",
              "property": "create",
              "value": "infographic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Instituto Nacional de Propiedade Industrial ( INPI",
              "property": "produce",
              "value": "regular two page Technology Radar",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "WIPO Patent Landscape Reports",
              "property": "accompany by",
              "value": "one page infographic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "infographic",
              "property": "accompany",
              "value": "recent report",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "number of company",
              "property": "offer",
              "value": "online infographic software service",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Cool Infographics website",
              "property": "provide",
              "value": "useful overview",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "test drive",
              "value": "infogr.am",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "article",
              "property": "divide into",
              "value": "two section",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "patent datum for visualisation in infographic software",
              "property": "use",
              "value": "` dplyr",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "produce",
              "value": "infographic",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the datum",
              "property": "use",
              "value": "infogr.am",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can read",
              "value": "chapter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the material",
              "property": "include",
              "value": "presentation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "project",
              "property": "go to",
              "value": "file",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "file",
              "property": "list under",
              "value": "the file tab",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "r work",
              "property": "use",
              "value": "package",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "following",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will need",
              "value": "package",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": ".csv file",
              "property": "use",
              "value": "readr",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will work with",
              "value": "` pizza_medium_clean ` dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "readr",
              "property": "will display",
              "value": "warning",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the file",
              "property": "arise from",
              "value": "-PRON- effort",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Github",
              "property": "download",
              "value": "file",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "experience",
              "value": "problem",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "File > Import Dataset approach",
              "property": "will give",
              "value": "range",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "tab",
              "property": "separate",
              "value": "file",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can view",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Environment",
              "property": "click on",
              "value": "blue arrow",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "large amount",
              "property": "will simply stream",
              "value": "past",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "amount of datum",
              "property": "will simply stream",
              "value": "past",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can see",
              "value": "name",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "character vector with date",
              "property": "form",
              "value": "integer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "package",
              "property": "provide",
              "value": "set",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use across",
              "value": "-PRON- dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "new object",
              "property": "call",
              "value": "pizza_number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will drop",
              "value": "column",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "datum",
              "property": "base on",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "example",
              "property": "perform",
              "value": "calculation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "normally lack",
              "value": "numeric field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can however assign",
              "value": "value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "view",
              "value": "pizza_number",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "would use",
              "value": "n_distinct",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "datum",
              "property": "use",
              "value": "count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "patent publication",
              "property": "occur in",
              "value": "that year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "publication_year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "now examine",
              "value": "pizza_total",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will see",
              "value": "publication year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "r",
              "property": "calculate",
              "value": "count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can simply use",
              "value": "sum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "rename",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "field",
              "property": "require",
              "value": "quote mark",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "understanding",
              "property": "can take",
              "value": "effort",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "this case",
              "property": "rename",
              "value": "character vector",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can now draw",
              "value": "quick line graph",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "datum",
              "property": "appear after",
              "value": "the coordinate",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "want",
              "value": "line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "line",
              "property": "use",
              "value": "geom",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "plot",
              "property": "reveal",
              "value": "data cliff",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "recent document",
              "property": "feed through",
              "value": "the system en route to publication",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will limit",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "specific value",
              "property": "use",
              "value": "` dplyr ` function ` filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Filter datum",
              "property": "use",
              "value": "filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "use",
              "property": "will also remove",
              "value": "30 record",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will write",
              "value": "file",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "disk",
              "property": "use",
              "value": "simple ` write_csv",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "first name",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "print pizza_total to",
              "value": "the console",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "datum",
              "property": "now cover",
              "value": "period",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "match",
              "value": "same datum period",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can head over to",
              "value": "the file tab",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "file",
              "property": "will now appear",
              "value": "the list of project file",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the file name",
              "property": "will display",
              "value": "raw unformatted datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can run",
              "value": "multiple line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can run",
              "value": "line of code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will create",
              "value": "new temporary object",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will produce",
              "value": "graph",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "run",
              "value": "function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "overwrite",
              "value": "object",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can save",
              "value": "a lot",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can save",
              "value": "lot of typing",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the code",
              "property": "use",
              "value": "pipe operator",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pipe operator",
              "property": "introduce by",
              "value": "the ` magrittr ` package",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "simplify write",
              "value": "r code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "only name",
              "value": "dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "type",
              "value": "df ` nine time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "type",
              "value": "df1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "use of pipe",
              "property": "simplify",
              "value": "structure of r code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will receive",
              "value": "error message",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "now inspect",
              "value": "structure",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "additional datum",
              "property": "set out",
              "value": "the content",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "one challenge",
              "property": "keep",
              "value": "track of subdataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "generate from",
              "value": "raw dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "datum",
              "property": "match",
              "value": "period",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will generate",
              "value": "subdataset with count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "start with",
              "value": "a call",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Country Trends",
              "property": "use",
              "value": "spread",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "e.g. ` publication_country",
              "property": "contain",
              "value": "country name",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "visualisation software",
              "property": "will expect",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "country name",
              "property": "would become",
              "value": "variable ( column name",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "year",
              "property": "form",
              "value": "row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "year",
              "property": "form",
              "value": "observation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "process",
              "property": "run",
              "value": "code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "run",
              "value": "code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will see",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "take",
              "value": "data argument",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "visualisation software",
              "property": "may expect",
              "value": "country name",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can modify",
              "value": "call",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will write",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "column",
              "property": "use",
              "value": "ncol",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "encounter with",
              "value": "patent datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "often see",
              "value": "concatenated field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "tidy datum",
              "property": "read",
              "value": "Hadley Wickham ’s Tidy Data article",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "cell",
              "property": "contain",
              "value": "unique data point",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "` tidyr ` package",
              "property": "contain",
              "value": "three function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will work with",
              "value": "` applicants_cleaned ` field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "field",
              "property": "contain concatenate",
              "value": "name",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "many name",
              "property": "concatenate into",
              "value": "each cell",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "example",
              "property": "use",
              "value": "Text",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "` separate_rows ( ) ` function",
              "property": "make",
              "value": "light work",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "name",
              "value": "dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "name",
              "property": "contain",
              "value": "12 , 729 row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "function",
              "property": "move",
              "value": "target column",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "function",
              "property": "move",
              "value": "column from column",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "inspect",
              "value": "the bottom",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the datum",
              "property": "use",
              "value": "tail",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "count",
              "property": "will treat",
              "value": "Oppenheimer Alan A",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will add",
              "value": "line of code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can address",
              "value": "problem",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "problem",
              "property": "use",
              "value": "function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "subsetting",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "end up with",
              "value": "a vector",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "solution",
              "property": "provide on",
              "value": "Stack Overflow1",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can tie",
              "value": "step",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "step",
              "property": "so far together use",
              "value": "pipe",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will become",
              "value": "applicant table for use",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will add",
              "value": "call",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "move",
              "property": "separate",
              "value": "column",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "cut off point",
              "property": "base on",
              "value": "the number of record per applicant",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will simply print",
              "value": "applicant",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "applicant",
              "property": "rank in",
              "value": "order",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the code",
              "property": "provide",
              "value": "filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "final line",
              "property": "omit",
              "value": "NA value",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "inspect",
              "value": "applicant count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "applicant count",
              "property": "use",
              "value": "View ( applicant_count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will filter",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will write",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": ".csv file",
              "property": "use",
              "value": "simple ` write_csv",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "123 result",
              "property": "follow by",
              "value": "Microsoft",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Google",
              "property": "suddenly enter",
              "value": "market",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Google",
              "property": "use",
              "value": "filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "applicant",
              "property": "use",
              "value": "filter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "` select ( ) ` function",
              "property": "work with",
              "value": "row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "function with column",
              "property": "work with",
              "value": "row",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will filter",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will filter",
              "value": "the applicant column",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create in",
              "value": "the applicant data frame",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "two table",
              "property": "contain",
              "value": "International Patent Classification ( IPC ) datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the technology",
              "property": "involve in",
              "value": "a patent document",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "majority of patent document",
              "property": "receive",
              "value": "more than one IPC code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pizza dataset",
              "property": "contain",
              "value": "IPC code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "` ipc_class ` field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "generic function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "generic function",
              "property": "base on",
              "value": "the code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will call",
              "value": "function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will call",
              "value": "patent_count",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "function",
              "property": "base on",
              "value": "the code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "develop for",
              "value": "applicant",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "contain",
              "value": "variation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "function",
              "property": "take",
              "value": "four argument",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "base on",
              "value": "main ` pizza_1990_2012 ` dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "will duplicate",
              "value": "IPC field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will over count",
              "value": "ipc",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "problem",
              "property": "apply in",
              "value": "the case",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "only applicant",
              "property": "list in",
              "value": "that data",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can therefore safely use",
              "value": "Google dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "also create",
              "value": "IPC subclass field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "type of datum in r",
              "property": "directly use",
              "value": "` tm ` and ` NLP ` package",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "pizza dataset",
              "property": "already contain",
              "value": "title field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "title field",
              "property": "break down into",
              "value": "phrase",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "phrase",
              "property": "use",
              "value": "Vantagepoint software",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "field",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will use",
              "value": "function",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "chapter",
              "property": "here then download",
              "value": "dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will then see",
              "value": "page",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can see",
              "value": "number of record per country",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "a country name",
              "property": "will display",
              "value": "relevant country activity",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can start add",
              "value": "new box",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "new box",
              "property": "use",
              "value": "menu icon",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the datum",
              "property": "use",
              "value": "IPC",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will add",
              "value": "bar chart",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "descriptive text box",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "infogram new text box",
              "property": "appear below",
              "value": "box",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "reader",
              "property": "can obtain",
              "value": "more information",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "will add",
              "value": "link",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "develop in",
              "value": "early chapter",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "online infographic",
              "property": "use",
              "value": "free software",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "walk through",
              "value": "the process",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "patent datum",
              "property": "first use",
              "value": "short line",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "patent datum",
              "property": "first use",
              "value": "line of code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "tidyr",
              "property": "provide",
              "value": "useful tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "infographic",
              "property": "use",
              "value": "infogr.am",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "r",
              "property": "use",
              "value": "tool",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "word cloud",
              "property": "use",
              "value": "package",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "word cloud in r",
              "property": "see",
              "value": "recent article",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "infographic",
              "property": "may sit with",
              "value": "2015 r-blogger article",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "2015 r-blogger article",
              "property": "provide",
              "value": "walk",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "need",
              "value": "help",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "IPC",
              "property": "",
              "value": "International Patent Classification",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "IPC",
              "property": "",
              "value": "International Patent Classification",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "IPC",
              "property": "",
              "value": "International Patent Classification",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "DSP",
              "property": "",
              "value": "Data Science Platform",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "c",
              "property": "",
              "value": "copyright",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "internet of things",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing"
              ],
              "scores": [
                0.3216430991888046,
                0.21516131842508912,
                0.09004657343029976,
                0.09195977635681629,
                0.06525515858083963,
                0.10086765326559544,
                0.09945015236735344,
                0.015616199001669884
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.292866051197052,
                0.17223619762808084,
                0.12322198413312435,
                0.1823084857314825,
                0.07116167061030865,
                0.08176201768219471,
                0.05886320769786835,
                0.017580395564436913
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.33665169309824705,
                0.2112204795703292,
                0.13446845673024654,
                0.10215529799461365,
                0.06910662725567818,
                0.06575946137309074,
                0.06140067242085934,
                0.019237393513321877
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2181373294442892,
                0.24993513617664576,
                0.1660130936652422,
                0.21757327020168304,
                0.04686221294105053,
                0.05477633886039257,
                0.039027826860547066,
                0.0076749068684875965
              ]
            },
            {
              "labels": [
                "internet of things",
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3688037805259228,
                0.23268207255750895,
                0.15106245875358582,
                0.10878366744145751,
                0.069792908616364,
                0.03215019963681698,
                0.0283011756837368,
                0.008423833176493645
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3337096245959401,
                0.26130155846476555,
                0.10534776095300913,
                0.1135643613524735,
                0.10647512599825859,
                0.03998991660773754,
                0.013451861217617989,
                0.02615981036797166
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.21763681899756193,
                0.2858933540992439,
                0.20303349290043116,
                0.09232956543564796,
                0.10268022399395704,
                0.04610041622072458,
                0.039388297125697136,
                0.012937866151332855
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.36555398628115654,
                0.24454499874264002,
                0.10511905141174793,
                0.0979009484872222,
                0.05725814402103424,
                0.06535584386438131,
                0.01980607584118843,
                0.04446109663695097
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.23479821346700191,
                0.24228087533265352,
                0.17198491469025612,
                0.10218214988708496,
                0.08973396010696888,
                0.07307062391191721,
                0.059503382071852684,
                0.026446033269166946
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.27033299393951893,
                0.26756770024076104,
                0.1421503871679306,
                0.12894005374982953,
                0.07439907058142126,
                0.07141225412487984,
                0.020931614562869072,
                0.024265886284410954
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22999167442321777,
                0.27578497398644686,
                0.07537057623267174,
                0.15832202695310116,
                0.11328714899718761,
                0.06163371726870537,
                0.026133505627512932,
                0.05947641283273697
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.6858770865947008,
                0.09622328449040651,
                0.04899901896715164,
                0.06678729318082333,
                0.05894078593701124,
                0.016276757000014186,
                0.019440857227891684,
                0.007454868406057358
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.5317067503929138,
                0.16776731191202998,
                0.12003961484879255,
                0.04935081023722887,
                0.06456039007753134,
                0.034914842806756496,
                0.011285237036645412,
                0.02037516376003623
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4580635344609618,
                0.16650685714557767,
                0.14680060930550098,
                0.08026034012436867,
                0.06969520542770624,
                0.015004552900791168,
                0.028360360767692327,
                0.03530857339501381
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4898239793255925,
                0.12213944643735886,
                0.1424792637117207,
                0.1272678580135107,
                0.05805180501192808,
                0.010687381960451603,
                0.022100877482444048,
                0.027449513785541058
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "neuromorphic computing",
                "computer vision",
                "robotic",
                "internet of things"
              ],
              "scores": [
                0.20451122894883156,
                0.2411460755392909,
                0.1474198568612337,
                0.17074940167367458,
                0.030873652547597885,
                0.07873542793095112,
                0.06786347553133965,
                0.058700899593532085
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.3015498425811529,
                0.22422795090824366,
                0.11660771630704403,
                0.14930832758545876,
                0.06140893418341875,
                0.02671244740486145,
                0.07073656097054482,
                0.04944815021008253
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.4881001403555274,
                0.1775950314477086,
                0.11547355446964502,
                0.052905135322362185,
                0.04791772598400712,
                0.02278538979589939,
                0.06474857497960329,
                0.030474464409053326
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "internet of things",
                "computer vision"
              ],
              "scores": [
                0.2830283157527447,
                0.3017196008004248,
                0.14029500354081392,
                0.07904619351029396,
                0.030659066513180733,
                0.08784158155322075,
                0.04302069125697017,
                0.034389563370496035
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2427926752716303,
                0.2704746350646019,
                0.20587723748758435,
                0.10099039785563946,
                0.06068625021725893,
                0.06333606503903866,
                0.023872198536992073,
                0.031970418989658356
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3209444931708276,
                0.22655130736529827,
                0.13786248303949833,
                0.10971908085048199,
                0.07513843104243279,
                0.07481156475841999,
                0.02561209350824356,
                0.029360554181039333
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision",
                "internet of things"
              ],
              "scores": [
                0.29501949436962605,
                0.26508684642612934,
                0.1730202827602625,
                0.11301456764340401,
                0.0597259858623147,
                0.024925315752625465,
                0.03338648658245802,
                0.035820936784148216
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.28772721625864506,
                0.2731956667266786,
                0.10104251373559237,
                0.0928283641114831,
                0.10795552097260952,
                0.08547556027770042,
                0.02141674980521202,
                0.030358324758708477
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.17370315454900265,
                0.2756974920630455,
                0.22594709880650043,
                0.0963441003113985,
                0.09240414388477802,
                0.07059585675597191,
                0.049067831598222256,
                0.01624022237956524
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2330603040754795,
                0.1633940851315856,
                0.13086875155568123,
                0.1284380666911602,
                0.12614968605339527,
                0.1587899997830391,
                0.02947608008980751,
                0.029823055025190115
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.28930330090224743,
                0.2680279524065554,
                0.16923340130597353,
                0.09889158327132463,
                0.0705053023993969,
                0.04965504864230752,
                0.017304884269833565,
                0.03707860875874758
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2809099489822984,
                0.2570130005478859,
                0.128252275288105,
                0.12211655918508768,
                0.07490393240004778,
                0.07068416755646467,
                0.019776713103055954,
                0.04634338617324829
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.34328207303769886,
                0.2800004780292511,
                0.12058549048379064,
                0.0630314452573657,
                0.09258793946355581,
                0.05355246923863888,
                0.03315972373820841,
                0.013800377957522869
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5090473238378763,
                0.1637650914490223,
                0.12207183707505465,
                0.07705893833190203,
                0.042612962424755096,
                0.04166858643293381,
                0.03425799869000912,
                0.009517180733382702
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3715579262934625,
                0.2073617409914732,
                0.10075441375374794,
                0.11033529043197632,
                0.07895176019519567,
                0.07561037130653858,
                0.026179173961281776,
                0.029249324463307858
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2500334004871547,
                0.2049983497709036,
                0.11526968842372298,
                0.11852268315851688,
                0.15536898374557495,
                0.09119896870106459,
                0.026009852066636086,
                0.03859800938516855
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3502998873591423,
                0.2618850599974394,
                0.1337840687483549,
                0.09028294496238232,
                0.05885843886062503,
                0.06015840917825699,
                0.020002204924821854,
                0.02472906094044447
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2047684844583273,
                0.26178772933781147,
                0.24630672810599208,
                0.07101723924279213,
                0.08668719884008169,
                0.07233864814043045,
                0.01754036359488964,
                0.03955370932817459
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24368880689144135,
                0.26449178997427225,
                0.13404242880642414,
                0.13282966893166304,
                0.08034416660666466,
                0.07148436922580004,
                0.024372493848204613,
                0.048746212385594845
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "internet of things",
                "deep learning",
                "robotic",
                "computer vision",
                "neuromorphic computing",
                "reinforcement learning"
              ],
              "scores": [
                0.318060552701354,
                0.2310159746557474,
                0.10500575508922338,
                0.14936920814216137,
                0.05671857250854373,
                0.044466457329690456,
                0.02482636645436287,
                0.07053721975535154
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.26266420166939497,
                0.2850984404794872,
                0.20790690928697586,
                0.07888459041714668,
                0.07831235183402896,
                0.05235050152987242,
                0.011261958628892899,
                0.023520976770669222
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.28297170624136925,
                0.18864538706839085,
                0.1912252977490425,
                0.08650466986000538,
                0.08708222582936287,
                0.08788888528943062,
                0.022935068234801292,
                0.05274675413966179
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.43954351730644703,
                0.24467430729418993,
                0.12117802049033344,
                0.06102371332235634,
                0.045203628949820995,
                0.02001315727829933,
                0.04726601578295231,
                0.02109771128743887
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.42219954915344715,
                0.24469601945020258,
                0.11527127679437399,
                0.07383543299511075,
                0.044598703272640705,
                0.05282851308584213,
                0.03530427999794483,
                0.011266237124800682
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.36063190549612045,
                0.2508643018081784,
                0.09110118076205254,
                0.08746287412941456,
                0.08644150197505951,
                0.06727892067283392,
                0.020674988627433777,
                0.035544378682971
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2906792610883713,
                0.3214866677299142,
                0.11633932311087847,
                0.06636250391602516,
                0.06839882582426071,
                0.07413792982697487,
                0.02149164117872715,
                0.04110384173691273
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4245177290868014,
                0.2521417513489723,
                0.08075799141079187,
                0.08293765597045422,
                0.06818101881071925,
                0.055299338418990374,
                0.013167837634682655,
                0.022996744140982628
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2645381921902299,
                0.25663452595472336,
                0.1746007390320301,
                0.0866050198674202,
                0.0748261883854866,
                0.08233734127134085,
                0.04079618863761425,
                0.019661864265799522
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.31403870694339275,
                0.19832242093980312,
                0.22453422052785754,
                0.08421376440674067,
                0.07880905456840992,
                0.04432869050651789,
                0.017648110166192055,
                0.03810505103319883
              ]
            },
            {
              "labels": [
                "internet of things",
                "deep learning",
                "natural language processing",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.13427181728184223,
                0.27276105154305696,
                0.24604784697294235,
                0.1310767848044634,
                0.07038600742816925,
                0.07388364244252443,
                0.025037722662091255,
                0.04653521254658699
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2940325401723385,
                0.2412064573727548,
                0.1499957200139761,
                0.14827697537839413,
                0.08126800321042538,
                0.04184004245325923,
                0.014241945929825306,
                0.029138434678316116
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "robotic",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3937513716518879,
                0.1255348245613277,
                0.0896208775229752,
                0.1435030926950276,
                0.14319588616490364,
                0.05669837724417448,
                0.014574170112609863,
                0.03312142100185156
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.797061032615602,
                0.07107315142638981,
                0.036480546928942204,
                0.024001833517104387,
                0.03681681980378926,
                0.008571184240281582,
                0.017645101062953472,
                0.008350323652848601
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4934448339045048,
                0.17933653108775616,
                0.11519333627074957,
                0.09199278522282839,
                0.03444924717769027,
                0.03990820236504078,
                0.015245672315359116,
                0.030429452657699585
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.2951817438006401,
                0.3185682548210025,
                0.16899137059226632,
                0.08537914045155048,
                0.05571185890585184,
                0.03859223425388336,
                0.02559688687324524,
                0.011978495866060257
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4148845337331295,
                0.24958610022440553,
                0.12051051203161478,
                0.058448310010135174,
                0.07080794032663107,
                0.04173027444630861,
                0.01622787117958069,
                0.02780435048043728
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "computer vision",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.2668430283665657,
                0.2753668362274766,
                0.15686513390392065,
                0.0659640533849597,
                0.05212079267948866,
                0.09738393872976303,
                0.06362286023795605,
                0.021833326667547226
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.3250167425721884,
                0.23813789524137974,
                0.14524884521961212,
                0.07479882426559925,
                0.06105119176208973,
                0.025675570592284203,
                0.08714810945093632,
                0.04292278829962015
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "robotic",
                "deep learning",
                "internet of things",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.21146243438124657,
                0.2595068886876106,
                0.12053566426038742,
                0.17551592644304037,
                0.09093839582055807,
                0.030415626242756844,
                0.07787670753896236,
                0.03374823462218046
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.20719696395099163,
                0.28220582753419876,
                0.21242777071893215,
                0.09483181778341532,
                0.06276506325230002,
                0.0790362237021327,
                0.019327446818351746,
                0.04220889322459698
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.31887588649988174,
                0.2808217415586114,
                0.1204617116600275,
                0.062458320520818233,
                0.07003294210880995,
                0.027578294277191162,
                0.08032327704131603,
                0.03944783844053745
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "deep learning",
                "robotic",
                "computer vision",
                "reinforcement learning",
                "neuromorphic computing"
              ],
              "scores": [
                0.35836557671427727,
                0.1490479065105319,
                0.15906567918136716,
                0.18340172478929162,
                0.06648106640204787,
                0.0289604845456779,
                0.04433701001107693,
                0.010340625420212746
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3489783979021013,
                0.2643112912774086,
                0.131883361376822,
                0.08200088236480951,
                0.059012869372963905,
                0.05201390199363232,
                0.01644832268357277,
                0.0453508784994483
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2817213754169643,
                0.23331718519330025,
                0.109240404330194,
                0.14277529157698154,
                0.09776848927140236,
                0.062219103798270226,
                0.053399231284856796,
                0.01955883391201496
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.5984228095039725,
                0.11740828678011894,
                0.07122390251606703,
                0.07200987031683326,
                0.04513704031705856,
                0.050727853551506996,
                0.035667707677930593,
                0.009402479976415634
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.4369191899895668,
                0.11589382495731115,
                0.16387041611596942,
                0.11303895246237516,
                0.07155122747644782,
                0.02155410870909691,
                0.0519988127052784,
                0.025173495523631573
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.4942664923146367,
                0.12243926618248224,
                0.18879521056078374,
                0.056037768721580505,
                0.0520554231479764,
                0.03373065171763301,
                0.039970533922314644,
                0.012704652734100819
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.45207533054053783,
                0.26520781638100743,
                0.0847413083538413,
                0.09629940753802657,
                0.03580365516245365,
                0.03203261736780405,
                0.02390078827738762,
                0.009939066134393215
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.3104356247931719,
                0.2387279225513339,
                0.126995250582695,
                0.12142376136034727,
                0.06546616926789284,
                0.021113110706210136,
                0.061460500583052635,
                0.054377606138587
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.41762782633304596,
                0.2553926180116832,
                0.11242760391905904,
                0.06352780060842633,
                0.06647558137774467,
                0.035286582075059414,
                0.013273961842060089,
                0.035988072864711285
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3035448854789138,
                0.2983200643211603,
                0.08366640424355865,
                0.12262308923527598,
                0.0775903295725584,
                0.04968623910099268,
                0.051009923219680786,
                0.013558987528085709
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2951817512512207,
                0.24641775200143456,
                0.14827264472842216,
                0.0760795883834362,
                0.07463399693369865,
                0.0929091814905405,
                0.02427731640636921,
                0.04222770035266876
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4518829621374607,
                0.20721295569092035,
                0.10307864099740982,
                0.05756951356306672,
                0.07985867280513048,
                0.04716511256992817,
                0.016544654965400696,
                0.036687460727989674
              ]
            },
            {
              "labels": [
                "deep learning",
                "reinforcement learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.2948317965492606,
                0.16386095993220806,
                0.19949406944215298,
                0.14664283115416765,
                0.061131494119763374,
                0.02423042804002762,
                0.05842437781393528,
                0.05138422176241875
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.30443363450467587,
                0.2098649051040411,
                0.1442612810060382,
                0.11939501203596592,
                0.06858909595757723,
                0.07184657827019691,
                0.021537497639656067,
                0.06007195822894573
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "robotic",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.3472158629447222,
                0.2273497711867094,
                0.09814013447612524,
                0.08304954506456852,
                0.0945071391761303,
                0.026485666632652283,
                0.08042962662875652,
                0.04282244015485048
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2857245448976755,
                0.25949443597346544,
                0.0887957839295268,
                0.12945982161909342,
                0.08483074698597193,
                0.09273121878504753,
                0.0411202572286129,
                0.01784319430589676
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "machine learning",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.3062109290622175,
                0.3313284497708082,
                0.11482776515185833,
                0.06375531060621142,
                0.022618236020207405,
                0.08244244568049908,
                0.05537567753344774,
                0.023441043216735125
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.7882228503003716,
                0.07779213937465101,
                0.0499467346817255,
                0.027875040657818317,
                0.03216723585501313,
                0.011196945328265429,
                0.004364494234323502,
                0.008434502058662474
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5582204721868038,
                0.12690239772200584,
                0.13183977361768484,
                0.06548904813826084,
                0.06617680564522743,
                0.021117938216775656,
                0.02191730262711644,
                0.008336358703672886
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4580635344609618,
                0.16650685714557767,
                0.14680060930550098,
                0.08026034012436867,
                0.06969520542770624,
                0.015004552900791168,
                0.028360360767692327,
                0.03530857339501381
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.632460038177669,
                0.11044634645804763,
                0.08054930530488491,
                0.0943110880907625,
                0.041155809070914984,
                0.007565178908407688,
                0.019004052504897118,
                0.014508175197988749
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.30957519076764584,
                0.22305563651025295,
                0.1482808142900467,
                0.0879761790856719,
                0.10009467601776123,
                0.06642408110201359,
                0.02677711471915245,
                0.03781628143042326
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3443558858707547,
                0.2884927447885275,
                0.07794934697449207,
                0.1075690658763051,
                0.07010516058653593,
                0.05150052718818188,
                0.04415051732212305,
                0.015876753255724907
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.7081894320435822,
                0.10453568864613771,
                0.04137597465887666,
                0.059924447210505605,
                0.04168117791414261,
                0.023116617230698466,
                0.01601851684972644,
                0.005158257205039263
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.4715943690389395,
                0.22076110634952784,
                0.09042364824563265,
                0.08915830357000232,
                0.05467406893149018,
                0.04718994162976742,
                0.019604841712862253,
                0.0065936679020524025
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2959620840847492,
                0.2780310823582113,
                0.11700979433953762,
                0.11941526643931866,
                0.0674243476241827,
                0.06412625778466463,
                0.043083736672997475,
                0.014947294257581234
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.8164856820367277,
                0.06682469672523439,
                0.03351159021258354,
                0.03884156560525298,
                0.01408847514539957,
                0.014598135137930512,
                0.011685552541166544,
                0.003964402712881565
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.26917810924351215,
                0.2835568506270647,
                0.08784367144107819,
                0.12081511411815882,
                0.10367781668901443,
                0.07505833823233843,
                0.020123299211263657,
                0.039746786467731
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2880906951613724,
                0.22968727257102728,
                0.2260469226166606,
                0.06185027398169041,
                0.07695435639470816,
                0.07494072709232569,
                0.014194048941135406,
                0.028235641308128834
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.7670070445165038,
                0.10042407969012856,
                0.03632265143096447,
                0.04853022936731577,
                0.017038445454090834,
                0.013778043445199728,
                0.013233473291620612,
                0.003665987867861986
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.35769457928836346,
                0.24067824380472302,
                0.12722280248999596,
                0.08408111333847046,
                0.09103956259787083,
                0.04521965654566884,
                0.04113683011382818,
                0.01292720902711153
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.3774200640618801,
                0.2168794423341751,
                0.13051105197519064,
                0.08622157480567694,
                0.06716794893145561,
                0.025677906349301338,
                0.06336792558431625,
                0.032754017040133476
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.42468711361289024,
                0.2522909347899258,
                0.0804734667763114,
                0.06804025126621127,
                0.07140791323035955,
                0.06860302947461605,
                0.012264879420399666,
                0.022232424933463335
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.6673888303339481,
                0.12260763184167445,
                0.07987072831019759,
                0.03658668976277113,
                0.02663047704845667,
                0.046919044107198715,
                0.014859679620712996,
                0.00513700395822525
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5170496683567762,
                0.10102312825620174,
                0.1067274953238666,
                0.14692898700013757,
                0.06724851578474045,
                0.02493678219616413,
                0.02654191106557846,
                0.009543380700051785
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.37941526249051094,
                0.22777640540152788,
                0.16496657487004995,
                0.10200560465455055,
                0.049108173698186874,
                0.01468578539788723,
                0.03534852713346481,
                0.026693664025515318
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.42885440587997437,
                0.20489100134000182,
                0.16210147691890597,
                0.06517306063324213,
                0.06935370620340109,
                0.02489697327837348,
                0.03355264198035002,
                0.011176773346960545
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.3790989387780428,
                0.23992294073104858,
                0.13039022497832775,
                0.07890421524643898,
                0.06194730009883642,
                0.056487200781702995,
                0.01586468145251274,
                0.037384429946541786
              ]
            },
            {
              "labels": [
                "internet of things",
                "robotic",
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.12787363585084677,
                0.13217849703505635,
                0.2342628096230328,
                0.2799442447721958,
                0.1320347050204873,
                0.056573450565338135,
                0.01538692694157362,
                0.021745709236711264
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3511352105997503,
                0.284489531069994,
                0.11541686905547976,
                0.08339706156402826,
                0.055790625512599945,
                0.06414610985666513,
                0.032873062416911125,
                0.012751422822475433
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "computer vision",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.31393197551369667,
                0.2616161140613258,
                0.09063986036926508,
                0.13381477538496256,
                0.05307997856289148,
                0.07353289145976305,
                0.05340180080384016,
                0.019982637837529182
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3430694919079542,
                0.24840539740398526,
                0.1125672897323966,
                0.11234742775559425,
                0.05840528476983309,
                0.07619443070143461,
                0.03516747709363699,
                0.013843308202922344
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.5869651082903147,
                0.1426224852912128,
                0.08403828600421548,
                0.08186215907335281,
                0.033660649321973324,
                0.03691963944584131,
                0.011433590203523636,
                0.02249810378998518
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2671234980225563,
                0.20880450773984194,
                0.1396507639437914,
                0.18560446053743362,
                0.09294883720576763,
                0.06644665775820613,
                0.02809885237365961,
                0.011322432197630405
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3926958031952381,
                0.1873381813056767,
                0.202219869941473,
                0.06233650678768754,
                0.04887231532484293,
                0.062370763160288334,
                0.03240928100422025,
                0.011757243424654007
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.6452910266816616,
                0.08713558875024319,
                0.11492518708109856,
                0.06818129867315292,
                0.027489942498505116,
                0.010594694875180721,
                0.026633446104824543,
                0.019748736638575792
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.40244060568511486,
                0.21775420475751162,
                0.13708796445280313,
                0.09091408178210258,
                0.04905212763696909,
                0.046679683960974216,
                0.017440933734178543,
                0.03863041661679745
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.2883249446749687,
                0.159135727211833,
                0.1985155767761171,
                0.14721558801829815,
                0.08885877765715122,
                0.028296049684286118,
                0.04856288619339466,
                0.04109037667512894
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.34757520630955696,
                0.21548621449619532,
                0.1438730638474226,
                0.0921142864972353,
                0.08582147397100925,
                0.051357682794332504,
                0.04880888108164072,
                0.014963227324187756
              ]
            },
            {
              "labels": [
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "natural language processing",
                "robotic",
                "computer vision",
                "neuromorphic computing",
                "internet of things"
              ],
              "scores": [
                0.3259156793355942,
                0.17252248898148537,
                0.18426824547350407,
                0.18084705621004105,
                0.040410976856946945,
                0.04528684075921774,
                0.016168447211384773,
                0.03458039369434118
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.30234045535326004,
                0.27691511157900095,
                0.12317853979766369,
                0.11995412223041058,
                0.05930831003934145,
                0.05053259525448084,
                0.049962910823524,
                0.01780789904296398
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2788421902805567,
                0.31418939027935266,
                0.1440089140087366,
                0.07788898004218936,
                0.08367306552827358,
                0.04009043239057064,
                0.01949460059404373,
                0.04181244596838951
              ]
            },
            {
              "labels": [
                "robotic",
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.1414777422323823,
                0.2621314022690058,
                0.2156756459735334,
                0.14138626120984554,
                0.09494420699775219,
                0.08642685413360596,
                0.018692759796977043,
                0.03926523216068745
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2481104601174593,
                0.2376910513266921,
                0.10541381873190403,
                0.1287677399814129,
                0.12009746767580509,
                0.08057290129363537,
                0.02951960265636444,
                0.04982687905430794
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "computer vision",
                "neuromorphic computing",
                "reinforcement learning",
                "robotic",
                "internet of things"
              ],
              "scores": [
                0.2364143766462803,
                0.27775618992745876,
                0.15390333719551563,
                0.08837757259607315,
                0.031457241624593735,
                0.1008309368044138,
                0.0676016341894865,
                0.043658776208758354
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.2458126787096262,
                0.27984166657552123,
                0.16320381313562393,
                0.11038963869214058,
                0.07188008725643158,
                0.025299370288848877,
                0.050988893024623394,
                0.052583918906748295
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.36547228787094355,
                0.304861961863935,
                0.15221775975078344,
                0.07531657721847296,
                0.03704331023618579,
                0.03472833102568984,
                0.009825250133872032,
                0.020534506998956203
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.27506446093320847,
                0.22722110152244568,
                0.19732363149523735,
                0.13330951891839504,
                0.05456565599888563,
                0.04827352147549391,
                0.021955501288175583,
                0.04228669311851263
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.4077206924557686,
                0.19841680862009525,
                0.12567944638431072,
                0.12811940535902977,
                0.04566956125199795,
                0.0401135953143239,
                0.04011132288724184,
                0.014169205911457539
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2464541932567954,
                0.26093813963234425,
                0.2258006064221263,
                0.10754242166876793,
                0.0634783310815692,
                0.04718994442373514,
                0.016315532848238945,
                0.032280794344842434
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.2798762023448944,
                0.293925017118454,
                0.17307041864842176,
                0.07376552652567625,
                0.09004989545792341,
                0.043066900223493576,
                0.01501923892647028,
                0.03122678864747286
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.33843758702278137,
                0.17328443098813295,
                0.17591700702905655,
                0.11192451883107424,
                0.14206376438960433,
                0.02344585955142975,
                0.025985151529312134,
                0.008941752836108208
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5925150969997048,
                0.1612635711207986,
                0.09715708112344146,
                0.05866753961890936,
                0.028239802923053503,
                0.03456775681115687,
                0.010217350907623768,
                0.017371696885675192
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.4140434227883816,
                0.13752823323011398,
                0.22698408924043179,
                0.09416487533599138,
                0.03840935928747058,
                0.03439593594521284,
                0.03998920787125826,
                0.014484891667962074
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.38866739347577095,
                0.10260140895843506,
                0.13645918061956763,
                0.18261831300333142,
                0.08994259499013424,
                0.04945281334221363,
                0.03724282514303923,
                0.01301550306379795
              ]
            },
            {
              "labels": [
                "natural language processing",
                "internet of things",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.38241455517709255,
                0.12698938511312008,
                0.18944170512259007,
                0.1403651451691985,
                0.09997179917991161,
                0.02254660543985665,
                0.02954124752432108,
                0.008729458786547184
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "internet of things",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.40146171674132347,
                0.17387703992426395,
                0.07669903244823217,
                0.1807505115866661,
                0.08216521888971329,
                0.037789102643728256,
                0.03276226483285427,
                0.01449511293321848
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.5171742755919695,
                0.13430573511868715,
                0.14177535846829414,
                0.08015839569270611,
                0.055352664552628994,
                0.03143986500799656,
                0.011662928387522697,
                0.028130661230534315
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "neuromorphic computing",
                "robotic",
                "reinforcement learning",
                "computer vision"
              ],
              "scores": [
                0.2499033510684967,
                0.27497970312833786,
                0.08591322600841522,
                0.12767468951642513,
                0.03831704333424568,
                0.08901884034276009,
                0.07619328796863556,
                0.057999784126877785
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "internet of things"
              ],
              "scores": [
                0.2585994601249695,
                0.1885510515421629,
                0.22683843038976192,
                0.08484275080263615,
                0.10863926075398922,
                0.05945244990289211,
                0.026958225294947624,
                0.04611845966428518
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "internet of things",
                "machine learning",
                "robotic",
                "reinforcement learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.30644238740205765,
                0.21111466130241752,
                0.09343698807060719,
                0.1575735416263342,
                0.06622507143765688,
                0.09946214780211449,
                0.021127814427018166,
                0.04461729899048805
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "computer vision",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.32896888069808483,
                0.21767750941216946,
                0.21228748094290495,
                0.08070829603821039,
                0.04700253624469042,
                0.062479362823069096,
                0.038175346329808235,
                0.012700491584837437
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2919573886319995,
                0.3190928683616221,
                0.15024646371603012,
                0.11643853317946196,
                0.046202955301851034,
                0.03715772833675146,
                0.027440821286290884,
                0.011463329195976257
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "machine learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5288655054755509,
                0.17982387356460094,
                0.08179559744894505,
                0.05105247814208269,
                0.08356062136590481,
                0.040639134123921394,
                0.011310474947094917,
                0.02295229909941554
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "internet of things",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3128850506618619,
                0.21227611228823662,
                0.11565961502492428,
                0.14284343179315329,
                0.10163481160998344,
                0.058053272776305676,
                0.0390203520655632,
                0.01762736774981022
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25693108793348074,
                0.24170809285715222,
                0.16707141045480967,
                0.16121998243033886,
                0.06774034257978201,
                0.05972471833229065,
                0.034666926600039005,
                0.010937455110251904
              ]
            },
            {
              "labels": [
                "deep learning",
                "internet of things",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2482774294912815,
                0.13696079701185226,
                0.2108533326536417,
                0.1668698564171791,
                0.10466249752789736,
                0.06833770498633385,
                0.02667076513171196,
                0.03736757580190897
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.3432839959859848,
                0.2071685427799821,
                0.1217274870723486,
                0.1808655522763729,
                0.057269939221441746,
                0.01807490922510624,
                0.041716817766427994,
                0.029892769642174244
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.41687351930886507,
                0.17157217301428318,
                0.14325652876868844,
                0.16266739973798394,
                0.04590734140947461,
                0.029977768659591675,
                0.010407601483166218,
                0.01933753304183483
              ]
            },
            {
              "labels": [
                "machine learning",
                "internet of things",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.22143940813839436,
                0.13921140599995852,
                0.24632953852415085,
                0.1787852058187127,
                0.11212620697915554,
                0.04518845910206437,
                0.016237519681453705,
                0.04068233352154493
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.27953036315739155,
                0.17637737095355988,
                0.200794811360538,
                0.13180379569530487,
                0.08125228621065617,
                0.05812655948102474,
                0.021555371582508087,
                0.05055942013859749
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.25298499688506126,
                0.2980656358413398,
                0.14414556603878736,
                0.10405116900801659,
                0.08680696785449982,
                0.055993059650063515,
                0.04292916692793369,
                0.01502350252121687
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.3186166789382696,
                0.19931761734187603,
                0.14407632686197758,
                0.09604073315858841,
                0.10863624140620232,
                0.0681337621062994,
                0.01756969839334488,
                0.047608972527086735
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.28846842609345913,
                0.1587370354682207,
                0.19764003530144691,
                0.11795486509799957,
                0.10452311299741268,
                0.07039343193173409,
                0.0461744861677289,
                0.016108673065900803
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.30197443068027496,
                0.19485305435955524,
                0.13651463575661182,
                0.10886498168110847,
                0.12291901186108589,
                0.07031869515776634,
                0.01993759348988533,
                0.044617622159421444
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.30618244875222445,
                0.151423922739923,
                0.191705415956676,
                0.12298021651804447,
                0.1007631691172719,
                0.06817302294075489,
                0.04402945376932621,
                0.014742311090230942
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.29456220008432865,
                0.1999332793056965,
                0.13630417454987764,
                0.12404054962098598,
                0.1025725407525897,
                0.0733829140663147,
                0.05309876427054405,
                0.016105588525533676
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.32039240235462785,
                0.19454735051840544,
                0.14130403753370047,
                0.10240482725203037,
                0.09958341903984547,
                0.07395854778587818,
                0.0517952349036932,
                0.016014212742447853
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.3235117504373193,
                0.20185349509119987,
                0.13485026359558105,
                0.11817549355328083,
                0.09636437892913818,
                0.06523852050304413,
                0.0448066433891654,
                0.015199506655335426
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2537175063043833,
                0.24576423782855272,
                0.14433620497584343,
                0.15427251905202866,
                0.06402087770402431,
                0.06393980234861374,
                0.02084251679480076,
                0.05310632474720478
              ]
            },
            {
              "labels": [
                "deep learning",
                "robotic",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.2931032367050648,
                0.1516428403556347,
                0.1945834383368492,
                0.13636246137320995,
                0.090335663408041,
                0.09068590216338634,
                0.03343040402978659,
                0.009856061078608036
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9917024374008179,
              "spans": [
                {
                  "approx_length": 54,
                  "score": 0.9917024374008179,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.806137221615489,
              "spans": [
                {
                  "approx_length": 204,
                  "score": 0.7119494676589966,
                  "spanid": 0
                },
                {
                  "approx_length": 275,
                  "score": 0.9862596988677979,
                  "spanid": 1
                },
                {
                  "approx_length": 243,
                  "score": 0.992134153842926,
                  "spanid": 2
                },
                {
                  "approx_length": 303,
                  "score": 0.9901660680770874,
                  "spanid": 7
                },
                {
                  "approx_length": 304,
                  "score": 0.9960219264030457,
                  "spanid": 8
                },
                {
                  "approx_length": 305,
                  "score": 0.9992024302482605,
                  "spanid": 9
                },
                {
                  "approx_length": 332,
                  "score": 0.994670033454895,
                  "spanid": 10
                },
                {
                  "approx_length": 291,
                  "score": 0.9937729239463806,
                  "spanid": 12
                },
                {
                  "approx_length": 277,
                  "score": 0.9946563839912415,
                  "spanid": 13
                },
                {
                  "approx_length": 275,
                  "score": 0.9966381788253784,
                  "spanid": 14
                },
                {
                  "approx_length": 269,
                  "score": 0.9990322589874268,
                  "spanid": 15
                },
                {
                  "approx_length": 246,
                  "score": 0.9987264275550842,
                  "spanid": 16
                },
                {
                  "approx_length": 240,
                  "score": 0.9984700083732605,
                  "spanid": 17
                },
                {
                  "approx_length": 284,
                  "score": 0.9995267391204834,
                  "spanid": 18
                },
                {
                  "approx_length": 205,
                  "score": 0.9979797005653381,
                  "spanid": 20
                },
                {
                  "approx_length": 260,
                  "score": 0.8454766869544983,
                  "spanid": 21
                },
                {
                  "approx_length": 260,
                  "score": 0.9896132946014404,
                  "spanid": 22
                },
                {
                  "approx_length": 188,
                  "score": 0.9981341361999512,
                  "spanid": 23
                },
                {
                  "approx_length": 186,
                  "score": 0.9455284476280212,
                  "spanid": 24
                },
                {
                  "approx_length": 230,
                  "score": 0.9745906591415405,
                  "spanid": 25
                },
                {
                  "approx_length": 225,
                  "score": 0.9152480363845825,
                  "spanid": 26
                },
                {
                  "approx_length": 201,
                  "score": 0.9978459477424622,
                  "spanid": 27
                },
                {
                  "approx_length": 236,
                  "score": 0.9803280830383301,
                  "spanid": 28
                },
                {
                  "approx_length": 327,
                  "score": 0.9974125027656555,
                  "spanid": 29
                },
                {
                  "approx_length": 271,
                  "score": 0.9914883971214294,
                  "spanid": 30
                },
                {
                  "approx_length": 315,
                  "score": 0.9914721250534058,
                  "spanid": 33
                },
                {
                  "approx_length": 249,
                  "score": 0.9981091618537903,
                  "spanid": 34
                },
                {
                  "approx_length": 247,
                  "score": 0.6885287165641785,
                  "spanid": 35
                },
                {
                  "approx_length": 218,
                  "score": 0.9994404315948486,
                  "spanid": 37
                },
                {
                  "approx_length": 290,
                  "score": 0.9852476716041565,
                  "spanid": 38
                },
                {
                  "approx_length": 209,
                  "score": 0.9989635944366455,
                  "spanid": 39
                },
                {
                  "approx_length": 299,
                  "score": 0.9993903040885925,
                  "spanid": 40
                },
                {
                  "approx_length": 259,
                  "score": 0.9027267694473267,
                  "spanid": 41
                },
                {
                  "approx_length": 246,
                  "score": 0.9985681176185608,
                  "spanid": 42
                },
                {
                  "approx_length": 189,
                  "score": 0.9980643391609192,
                  "spanid": 43
                },
                {
                  "approx_length": 165,
                  "score": 0.9508160352706909,
                  "spanid": 44
                },
                {
                  "approx_length": 203,
                  "score": 0.9739187955856323,
                  "spanid": 47
                },
                {
                  "approx_length": 310,
                  "score": 0.9972622990608215,
                  "spanid": 48
                },
                {
                  "approx_length": 192,
                  "score": 0.998290479183197,
                  "spanid": 49
                },
                {
                  "approx_length": 180,
                  "score": 0.9865735769271851,
                  "spanid": 50
                },
                {
                  "approx_length": 241,
                  "score": 0.9882299900054932,
                  "spanid": 51
                },
                {
                  "approx_length": 229,
                  "score": 0.9950503706932068,
                  "spanid": 52
                },
                {
                  "approx_length": 246,
                  "score": 0.9953294396400452,
                  "spanid": 53
                },
                {
                  "approx_length": 278,
                  "score": 0.9913698434829712,
                  "spanid": 54
                },
                {
                  "approx_length": 278,
                  "score": 0.9983019232749939,
                  "spanid": 55
                },
                {
                  "approx_length": 231,
                  "score": 0.9991224408149719,
                  "spanid": 56
                },
                {
                  "approx_length": 213,
                  "score": 0.9700760245323181,
                  "spanid": 57
                },
                {
                  "approx_length": 255,
                  "score": 0.9988099932670593,
                  "spanid": 58
                },
                {
                  "approx_length": 200,
                  "score": 0.998426616191864,
                  "spanid": 59
                },
                {
                  "approx_length": 302,
                  "score": 0.9984979033470154,
                  "spanid": 60
                },
                {
                  "approx_length": 192,
                  "score": 0.9978006482124329,
                  "spanid": 61
                },
                {
                  "approx_length": 182,
                  "score": 0.8770712018013,
                  "spanid": 62
                },
                {
                  "approx_length": 277,
                  "score": 0.9633243680000305,
                  "spanid": 63
                },
                {
                  "approx_length": 284,
                  "score": 0.9971197247505188,
                  "spanid": 64
                },
                {
                  "approx_length": 226,
                  "score": 0.9898732304573059,
                  "spanid": 66
                },
                {
                  "approx_length": 177,
                  "score": 0.9935939311981201,
                  "spanid": 67
                },
                {
                  "approx_length": 160,
                  "score": 0.9933355450630188,
                  "spanid": 68
                },
                {
                  "approx_length": 303,
                  "score": 0.9993897676467896,
                  "spanid": 70
                },
                {
                  "approx_length": 243,
                  "score": 0.9957841634750366,
                  "spanid": 72
                },
                {
                  "approx_length": 179,
                  "score": 0.9992837309837341,
                  "spanid": 73
                },
                {
                  "approx_length": 165,
                  "score": 0.9854533076286316,
                  "spanid": 74
                },
                {
                  "approx_length": 177,
                  "score": 0.9980885982513428,
                  "spanid": 75
                },
                {
                  "approx_length": 296,
                  "score": 0.9577670693397522,
                  "spanid": 76
                },
                {
                  "approx_length": 223,
                  "score": 0.9981281161308289,
                  "spanid": 77
                },
                {
                  "approx_length": 233,
                  "score": 0.9985160827636719,
                  "spanid": 78
                },
                {
                  "approx_length": 219,
                  "score": 0.9978249669075012,
                  "spanid": 79
                },
                {
                  "approx_length": 326,
                  "score": 0.9991922974586487,
                  "spanid": 80
                },
                {
                  "approx_length": 262,
                  "score": 0.9923654198646545,
                  "spanid": 81
                },
                {
                  "approx_length": 170,
                  "score": 0.9977075457572937,
                  "spanid": 82
                },
                {
                  "approx_length": 171,
                  "score": 0.9966917634010315,
                  "spanid": 83
                },
                {
                  "approx_length": 190,
                  "score": 0.7415803670883179,
                  "spanid": 84
                },
                {
                  "approx_length": 254,
                  "score": 0.9982715845108032,
                  "spanid": 85
                },
                {
                  "approx_length": 255,
                  "score": 0.9972379207611084,
                  "spanid": 87
                },
                {
                  "approx_length": 261,
                  "score": 0.9986839890480042,
                  "spanid": 88
                },
                {
                  "approx_length": 268,
                  "score": 0.9994603395462036,
                  "spanid": 89
                },
                {
                  "approx_length": 235,
                  "score": 0.9969993829727173,
                  "spanid": 90
                },
                {
                  "approx_length": 186,
                  "score": 0.9667568802833557,
                  "spanid": 91
                },
                {
                  "approx_length": 274,
                  "score": 0.988199770450592,
                  "spanid": 92
                },
                {
                  "approx_length": 243,
                  "score": 0.6263107061386108,
                  "spanid": 93
                },
                {
                  "approx_length": 196,
                  "score": 0.8111516237258911,
                  "spanid": 94
                },
                {
                  "approx_length": 201,
                  "score": 0.9814911484718323,
                  "spanid": 95
                },
                {
                  "approx_length": 221,
                  "score": 0.9655306935310364,
                  "spanid": 96
                },
                {
                  "approx_length": 218,
                  "score": 0.9985556602478027,
                  "spanid": 97
                },
                {
                  "approx_length": 230,
                  "score": 0.9993272423744202,
                  "spanid": 98
                },
                {
                  "approx_length": 295,
                  "score": 0.9927680492401123,
                  "spanid": 99
                },
                {
                  "approx_length": 267,
                  "score": 0.9921934008598328,
                  "spanid": 100
                },
                {
                  "approx_length": 272,
                  "score": 0.9588760137557983,
                  "spanid": 101
                },
                {
                  "approx_length": 259,
                  "score": 0.9967833757400513,
                  "spanid": 102
                },
                {
                  "approx_length": 267,
                  "score": 0.9991052150726318,
                  "spanid": 103
                },
                {
                  "approx_length": 197,
                  "score": 0.9982312917709351,
                  "spanid": 104
                },
                {
                  "approx_length": 185,
                  "score": 0.9935855269432068,
                  "spanid": 105
                },
                {
                  "approx_length": 261,
                  "score": 0.997972846031189,
                  "spanid": 107
                },
                {
                  "approx_length": 199,
                  "score": 0.9989668726921082,
                  "spanid": 108
                },
                {
                  "approx_length": 223,
                  "score": 0.9991574287414551,
                  "spanid": 109
                },
                {
                  "approx_length": 218,
                  "score": 0.993597149848938,
                  "spanid": 110
                },
                {
                  "approx_length": 155,
                  "score": 0.9851781725883484,
                  "spanid": 111
                },
                {
                  "approx_length": 151,
                  "score": 0.8020491003990173,
                  "spanid": 112
                },
                {
                  "approx_length": 146,
                  "score": 0.8462445735931396,
                  "spanid": 113
                },
                {
                  "approx_length": 169,
                  "score": 0.9888763427734375,
                  "spanid": 114
                },
                {
                  "approx_length": 173,
                  "score": 0.9389426708221436,
                  "spanid": 115
                },
                {
                  "approx_length": 254,
                  "score": 0.9699398279190063,
                  "spanid": 116
                },
                {
                  "approx_length": 264,
                  "score": 0.9991902112960815,
                  "spanid": 117
                },
                {
                  "approx_length": 180,
                  "score": 0.9981513619422913,
                  "spanid": 118
                },
                {
                  "approx_length": 187,
                  "score": 0.9943042397499084,
                  "spanid": 119
                },
                {
                  "approx_length": 132,
                  "score": 0.9860727190971375,
                  "spanid": 120
                },
                {
                  "approx_length": 182,
                  "score": 0.967091977596283,
                  "spanid": 121
                },
                {
                  "approx_length": 152,
                  "score": 0.9294496178627014,
                  "spanid": 122
                },
                {
                  "approx_length": 202,
                  "score": 0.6709880828857422,
                  "spanid": 123
                },
                {
                  "approx_length": 165,
                  "score": 0.8580665588378906,
                  "spanid": 124
                },
                {
                  "approx_length": 148,
                  "score": 0.967314600944519,
                  "spanid": 125
                },
                {
                  "approx_length": 128,
                  "score": 0.9330347180366516,
                  "spanid": 126
                },
                {
                  "approx_length": 127,
                  "score": 0.8922572731971741,
                  "spanid": 127
                },
                {
                  "approx_length": 215,
                  "score": 0.9978113174438477,
                  "spanid": 128
                },
                {
                  "approx_length": 282,
                  "score": 0.9973242878913879,
                  "spanid": 129
                },
                {
                  "approx_length": 179,
                  "score": 0.9919329881668091,
                  "spanid": 130
                },
                {
                  "approx_length": 227,
                  "score": 0.9915264248847961,
                  "spanid": 131
                },
                {
                  "approx_length": 299,
                  "score": 0.9992420673370361,
                  "spanid": 133
                },
                {
                  "approx_length": 280,
                  "score": 0.9984577298164368,
                  "spanid": 134
                },
                {
                  "approx_length": 271,
                  "score": 0.9973936080932617,
                  "spanid": 138
                },
                {
                  "approx_length": 280,
                  "score": 0.9963132739067078,
                  "spanid": 139
                },
                {
                  "approx_length": 296,
                  "score": 0.9994105100631714,
                  "spanid": 140
                },
                {
                  "approx_length": 268,
                  "score": 0.9418763518333435,
                  "spanid": 141
                },
                {
                  "approx_length": 211,
                  "score": 0.9973094463348389,
                  "spanid": 142
                },
                {
                  "approx_length": 252,
                  "score": 0.9898234605789185,
                  "spanid": 143
                },
                {
                  "approx_length": 254,
                  "score": 0.9312913417816162,
                  "spanid": 144
                },
                {
                  "approx_length": 215,
                  "score": 0.9658983945846558,
                  "spanid": 145
                },
                {
                  "approx_length": 185,
                  "score": 0.930372953414917,
                  "spanid": 146
                },
                {
                  "approx_length": 225,
                  "score": 0.9696271419525146,
                  "spanid": 147
                },
                {
                  "approx_length": 225,
                  "score": 0.9219200611114502,
                  "spanid": 148
                },
                {
                  "approx_length": 191,
                  "score": 0.9980794191360474,
                  "spanid": 149
                },
                {
                  "approx_length": 278,
                  "score": 0.997651219367981,
                  "spanid": 150
                },
                {
                  "approx_length": 240,
                  "score": 0.9962829351425171,
                  "spanid": 151
                },
                {
                  "approx_length": 244,
                  "score": 0.9985559582710266,
                  "spanid": 152
                },
                {
                  "approx_length": 184,
                  "score": 0.998589813709259,
                  "spanid": 153
                },
                {
                  "approx_length": 172,
                  "score": 0.9619962573051453,
                  "spanid": 154
                },
                {
                  "approx_length": 249,
                  "score": 0.9925001263618469,
                  "spanid": 156
                },
                {
                  "approx_length": 259,
                  "score": 0.5455458760261536,
                  "spanid": 157
                },
                {
                  "approx_length": 219,
                  "score": 0.9713045358657837,
                  "spanid": 158
                },
                {
                  "approx_length": 176,
                  "score": 0.9987313747406006,
                  "spanid": 159
                },
                {
                  "approx_length": 173,
                  "score": 0.8244196176528931,
                  "spanid": 160
                },
                {
                  "approx_length": 228,
                  "score": 0.9987663626670837,
                  "spanid": 162
                },
                {
                  "approx_length": 231,
                  "score": 0.9976474046707153,
                  "spanid": 163
                },
                {
                  "approx_length": 261,
                  "score": 0.9985550045967102,
                  "spanid": 164
                },
                {
                  "approx_length": 183,
                  "score": 0.9986693859100342,
                  "spanid": 165
                },
                {
                  "approx_length": 181,
                  "score": 0.964428722858429,
                  "spanid": 166
                },
                {
                  "approx_length": 195,
                  "score": 0.7994967699050903,
                  "spanid": 167
                },
                {
                  "approx_length": 234,
                  "score": 0.9938023686408997,
                  "spanid": 168
                },
                {
                  "approx_length": 279,
                  "score": 0.999606728553772,
                  "spanid": 169
                },
                {
                  "approx_length": 261,
                  "score": 0.9760982394218445,
                  "spanid": 170
                },
                {
                  "approx_length": 324,
                  "score": 0.996738076210022,
                  "spanid": 171
                },
                {
                  "approx_length": 183,
                  "score": 0.995875895023346,
                  "spanid": 172
                },
                {
                  "approx_length": 196,
                  "score": 0.9968386888504028,
                  "spanid": 173
                },
                {
                  "approx_length": 212,
                  "score": 0.9942944049835205,
                  "spanid": 174
                },
                {
                  "approx_length": 303,
                  "score": 0.9767917990684509,
                  "spanid": 175
                },
                {
                  "approx_length": 248,
                  "score": 0.9864742159843445,
                  "spanid": 176
                },
                {
                  "approx_length": 199,
                  "score": 0.9477229118347168,
                  "spanid": 178
                },
                {
                  "approx_length": 230,
                  "score": 0.9745906591415405,
                  "spanid": 179
                },
                {
                  "approx_length": 214,
                  "score": 0.9496740698814392,
                  "spanid": 180
                },
                {
                  "approx_length": 228,
                  "score": 0.9987763166427612,
                  "spanid": 181
                },
                {
                  "approx_length": 304,
                  "score": 0.9980142712593079,
                  "spanid": 182
                },
                {
                  "approx_length": 283,
                  "score": 0.9994911551475525,
                  "spanid": 183
                },
                {
                  "approx_length": 151,
                  "score": 0.9981521368026733,
                  "spanid": 184
                },
                {
                  "approx_length": 198,
                  "score": 0.9983263611793518,
                  "spanid": 185
                },
                {
                  "approx_length": 219,
                  "score": 0.9185770750045776,
                  "spanid": 186
                },
                {
                  "approx_length": 234,
                  "score": 0.9993961453437805,
                  "spanid": 187
                },
                {
                  "approx_length": 206,
                  "score": 0.9970992803573608,
                  "spanid": 188
                },
                {
                  "approx_length": 177,
                  "score": 0.9961839318275452,
                  "spanid": 189
                },
                {
                  "approx_length": 159,
                  "score": 0.9985731244087219,
                  "spanid": 190
                },
                {
                  "approx_length": 247,
                  "score": 0.9147946834564209,
                  "spanid": 191
                },
                {
                  "approx_length": 320,
                  "score": 0.9964880347251892,
                  "spanid": 193
                },
                {
                  "approx_length": 255,
                  "score": 0.9958100914955139,
                  "spanid": 195
                },
                {
                  "approx_length": 218,
                  "score": 0.9974954128265381,
                  "spanid": 196
                },
                {
                  "approx_length": 281,
                  "score": 0.9839157462120056,
                  "spanid": 197
                },
                {
                  "approx_length": 299,
                  "score": 0.978579044342041,
                  "spanid": 198
                },
                {
                  "approx_length": 286,
                  "score": 0.9912698268890381,
                  "spanid": 199
                },
                {
                  "approx_length": 192,
                  "score": 0.9968439936637878,
                  "spanid": 200
                },
                {
                  "approx_length": 209,
                  "score": 0.9577520489692688,
                  "spanid": 201
                },
                {
                  "approx_length": 217,
                  "score": 0.9645700454711914,
                  "spanid": 202
                },
                {
                  "approx_length": 204,
                  "score": 0.9975600838661194,
                  "spanid": 203
                },
                {
                  "approx_length": 241,
                  "score": 0.9803672432899475,
                  "spanid": 204
                },
                {
                  "approx_length": 337,
                  "score": 0.9942717552185059,
                  "spanid": 205
                },
                {
                  "approx_length": 364,
                  "score": 0.9987395405769348,
                  "spanid": 207
                },
                {
                  "approx_length": 304,
                  "score": 0.9972209334373474,
                  "spanid": 208
                },
                {
                  "approx_length": 299,
                  "score": 0.993267834186554,
                  "spanid": 209
                },
                {
                  "approx_length": 166,
                  "score": 0.991193413734436,
                  "spanid": 210
                },
                {
                  "approx_length": 164,
                  "score": 0.99875807762146,
                  "spanid": 211
                },
                {
                  "approx_length": 155,
                  "score": 0.9980530738830566,
                  "spanid": 212
                },
                {
                  "approx_length": 142,
                  "score": 0.9975716471672058,
                  "spanid": 213
                },
                {
                  "approx_length": 227,
                  "score": 0.995428204536438,
                  "spanid": 214
                },
                {
                  "approx_length": 259,
                  "score": 0.9963048696517944,
                  "spanid": 215
                },
                {
                  "approx_length": 230,
                  "score": 0.9957717657089233,
                  "spanid": 216
                },
                {
                  "approx_length": 222,
                  "score": 0.9974226951599121,
                  "spanid": 217
                },
                {
                  "approx_length": 171,
                  "score": 0.9988665580749512,
                  "spanid": 218
                },
                {
                  "approx_length": 205,
                  "score": 0.9821024537086487,
                  "spanid": 219
                },
                {
                  "approx_length": 271,
                  "score": 0.9899987578392029,
                  "spanid": 220
                },
                {
                  "approx_length": 297,
                  "score": 0.9993638396263123,
                  "spanid": 221
                },
                {
                  "approx_length": 315,
                  "score": 0.9989374876022339,
                  "spanid": 222
                },
                {
                  "approx_length": 225,
                  "score": 0.9885833859443665,
                  "spanid": 223
                },
                {
                  "approx_length": 162,
                  "score": 0.9985272288322449,
                  "spanid": 224
                },
                {
                  "approx_length": 231,
                  "score": 0.9561978578567505,
                  "spanid": 225
                },
                {
                  "approx_length": 263,
                  "score": 0.9947451949119568,
                  "spanid": 226
                },
                {
                  "approx_length": 189,
                  "score": 0.9941927194595337,
                  "spanid": 227
                },
                {
                  "approx_length": 257,
                  "score": 0.9956905245780945,
                  "spanid": 228
                },
                {
                  "approx_length": 299,
                  "score": 0.9817434549331665,
                  "spanid": 229
                },
                {
                  "approx_length": 289,
                  "score": 0.9916653037071228,
                  "spanid": 231
                },
                {
                  "approx_length": 330,
                  "score": 0.9988198280334473,
                  "spanid": 232
                },
                {
                  "approx_length": 255,
                  "score": 0.6100285053253174,
                  "spanid": 233
                },
                {
                  "approx_length": 179,
                  "score": 0.9945908784866333,
                  "spanid": 234
                },
                {
                  "approx_length": 234,
                  "score": 0.981797456741333,
                  "spanid": 235
                },
                {
                  "approx_length": 228,
                  "score": 0.9972184896469116,
                  "spanid": 236
                },
                {
                  "approx_length": 174,
                  "score": 0.9953711628913879,
                  "spanid": 237
                },
                {
                  "approx_length": 256,
                  "score": 0.9941871166229248,
                  "spanid": 238
                },
                {
                  "approx_length": 298,
                  "score": 0.9154050946235657,
                  "spanid": 239
                },
                {
                  "approx_length": 205,
                  "score": 0.9971526861190796,
                  "spanid": 240
                },
                {
                  "approx_length": 193,
                  "score": 0.9864351153373718,
                  "spanid": 241
                },
                {
                  "approx_length": 280,
                  "score": 0.9982960224151611,
                  "spanid": 242
                },
                {
                  "approx_length": 305,
                  "score": 0.9958410263061523,
                  "spanid": 243
                },
                {
                  "approx_length": 281,
                  "score": 0.9840583205223083,
                  "spanid": 244
                },
                {
                  "approx_length": 320,
                  "score": 0.992927074432373,
                  "spanid": 245
                },
                {
                  "approx_length": 293,
                  "score": 0.9878504872322083,
                  "spanid": 246
                },
                {
                  "approx_length": 298,
                  "score": 0.999290943145752,
                  "spanid": 247
                },
                {
                  "approx_length": 272,
                  "score": 0.9985847473144531,
                  "spanid": 248
                },
                {
                  "approx_length": 331,
                  "score": 0.9929522275924683,
                  "spanid": 251
                },
                {
                  "approx_length": 312,
                  "score": 0.9957911968231201,
                  "spanid": 252
                },
                {
                  "approx_length": 297,
                  "score": 0.9996323585510254,
                  "spanid": 255
                },
                {
                  "approx_length": 372,
                  "score": 0.9973850846290588,
                  "spanid": 256
                },
                {
                  "approx_length": 256,
                  "score": 0.9789495468139648,
                  "spanid": 257
                },
                {
                  "approx_length": 219,
                  "score": 0.9907665848731995,
                  "spanid": 258
                },
                {
                  "approx_length": 267,
                  "score": 0.8324576020240784,
                  "spanid": 260
                },
                {
                  "approx_length": 256,
                  "score": 0.9960004091262817,
                  "spanid": 261
                },
                {
                  "approx_length": 218,
                  "score": 0.9614773988723755,
                  "spanid": 264
                },
                {
                  "approx_length": 314,
                  "score": 0.9978354573249817,
                  "spanid": 265
                },
                {
                  "approx_length": 241,
                  "score": 0.8716675043106079,
                  "spanid": 266
                },
                {
                  "approx_length": 202,
                  "score": 0.6219602823257446,
                  "spanid": 270
                },
                {
                  "approx_length": 209,
                  "score": 0.537380576133728,
                  "spanid": 272
                },
                {
                  "approx_length": 211,
                  "score": 0.7871073484420776,
                  "spanid": 273
                },
                {
                  "approx_length": 202,
                  "score": 0.5236026644706726,
                  "spanid": 274
                },
                {
                  "approx_length": 199,
                  "score": 0.6627179980278015,
                  "spanid": 275
                },
                {
                  "approx_length": 207,
                  "score": 0.6137147545814514,
                  "spanid": 276
                },
                {
                  "approx_length": 195,
                  "score": 0.5114253163337708,
                  "spanid": 280
                },
                {
                  "approx_length": 131,
                  "score": 0.999070942401886,
                  "spanid": 286
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.13490731209412685,
              "spans": [
                {
                  "approx_length": 365,
                  "score": 0.9979754090309143,
                  "spanid": 3
                },
                {
                  "approx_length": 372,
                  "score": 0.9273421168327332,
                  "spanid": 4
                },
                {
                  "approx_length": 382,
                  "score": 0.9906130433082581,
                  "spanid": 5
                },
                {
                  "approx_length": 330,
                  "score": 0.9993748068809509,
                  "spanid": 6
                },
                {
                  "approx_length": 316,
                  "score": 0.9825253486633301,
                  "spanid": 11
                },
                {
                  "approx_length": 250,
                  "score": 0.9692990779876709,
                  "spanid": 19
                },
                {
                  "approx_length": 245,
                  "score": 0.9441992044448853,
                  "spanid": 31
                },
                {
                  "approx_length": 289,
                  "score": 0.9884111285209656,
                  "spanid": 32
                },
                {
                  "approx_length": 261,
                  "score": 0.9868386387825012,
                  "spanid": 36
                },
                {
                  "approx_length": 279,
                  "score": 0.661569356918335,
                  "spanid": 45
                },
                {
                  "approx_length": 222,
                  "score": 0.9995828866958618,
                  "spanid": 46
                },
                {
                  "approx_length": 246,
                  "score": 0.9995402693748474,
                  "spanid": 65
                },
                {
                  "approx_length": 263,
                  "score": 0.5884172916412354,
                  "spanid": 69
                },
                {
                  "approx_length": 253,
                  "score": 0.8353546857833862,
                  "spanid": 71
                },
                {
                  "approx_length": 251,
                  "score": 0.8459485173225403,
                  "spanid": 86
                },
                {
                  "approx_length": 223,
                  "score": 0.9826062917709351,
                  "spanid": 106
                },
                {
                  "approx_length": 281,
                  "score": 0.9926352500915527,
                  "spanid": 132
                },
                {
                  "approx_length": 305,
                  "score": 0.996712863445282,
                  "spanid": 135
                },
                {
                  "approx_length": 286,
                  "score": 0.8710850477218628,
                  "spanid": 136
                },
                {
                  "approx_length": 280,
                  "score": 0.9956815838813782,
                  "spanid": 137
                },
                {
                  "approx_length": 189,
                  "score": 0.5987594127655029,
                  "spanid": 155
                },
                {
                  "approx_length": 204,
                  "score": 0.724155843257904,
                  "spanid": 161
                },
                {
                  "approx_length": 207,
                  "score": 0.9873899221420288,
                  "spanid": 177
                },
                {
                  "approx_length": 251,
                  "score": 0.9280179142951965,
                  "spanid": 192
                },
                {
                  "approx_length": 251,
                  "score": 0.973006546497345,
                  "spanid": 194
                },
                {
                  "approx_length": 356,
                  "score": 0.9734571576118469,
                  "spanid": 206
                },
                {
                  "approx_length": 255,
                  "score": 0.9791476726531982,
                  "spanid": 230
                },
                {
                  "approx_length": 325,
                  "score": 0.7940353751182556,
                  "spanid": 249
                },
                {
                  "approx_length": 302,
                  "score": 0.9881631731987,
                  "spanid": 250
                },
                {
                  "approx_length": 299,
                  "score": 0.9965036511421204,
                  "spanid": 253
                },
                {
                  "approx_length": 310,
                  "score": 0.7661947011947632,
                  "spanid": 254
                },
                {
                  "approx_length": 226,
                  "score": 0.7574257850646973,
                  "spanid": 259
                },
                {
                  "approx_length": 249,
                  "score": 0.9010089635848999,
                  "spanid": 262
                },
                {
                  "approx_length": 294,
                  "score": 0.9906694293022156,
                  "spanid": 263
                },
                {
                  "approx_length": 207,
                  "score": 0.6375484466552734,
                  "spanid": 267
                },
                {
                  "approx_length": 211,
                  "score": 0.8162449598312378,
                  "spanid": 268
                },
                {
                  "approx_length": 203,
                  "score": 0.5624302625656128,
                  "spanid": 269
                },
                {
                  "approx_length": 203,
                  "score": 0.524268627166748,
                  "spanid": 271
                },
                {
                  "approx_length": 211,
                  "score": 0.6897497773170471,
                  "spanid": 277
                },
                {
                  "approx_length": 203,
                  "score": 0.5968915224075317,
                  "spanid": 278
                },
                {
                  "approx_length": 202,
                  "score": 0.7141273617744446,
                  "spanid": 279
                },
                {
                  "approx_length": 198,
                  "score": 0.6598421335220337,
                  "spanid": 281
                },
                {
                  "approx_length": 192,
                  "score": 0.6766324043273926,
                  "spanid": 282
                },
                {
                  "approx_length": 183,
                  "score": 0.7642448544502258,
                  "spanid": 283
                },
                {
                  "approx_length": 182,
                  "score": 0.6218827366828918,
                  "spanid": 284
                },
                {
                  "approx_length": 213,
                  "score": 0.5408871173858643,
                  "spanid": 285
                }
              ]
            }
          ],
          "summary": [
            " Creating an Infographic with infogram creates an infographic with an infogram . Creating",
            " In this article we will use RStudio to prepare patent data for visualisation in an infographic using the online software tool infogram . Infographics are a popular way of presenting data in a way that is easy for a reader to",
            " Infographics are a tool for engagement with audiences during presentations of the findings of patent research . Infographics have already been creating infographics as part of their reports to policy makers and other clients . A growing number of companies are offering",
            " In part 1 we focus on using RStudio to prepare patent data for visualisation in infographics software . In part 2 we produce an infographic from the data using infogr . am . This article is now a chapter in",
            " R works using packages ( libraries) and there are around 7, 490 of them for a range of purposes . To install a package we use the following . Copy and paste the code into the Console and press enter . To load",
            " We can use the easy to use  ` read _ csv (  )  `  function from the ` readr `  package to quickly read in our pizza data directly from the Github repository . Note the  `",
            " Pizza A tibble:  9 , 996 x 31 applicants cleaned applicants  cleaned applicants . applicants _ clean… applicants _ orga… applicants  original . In a variety of ways, pizza A Tibble is played in",
            " < chr >   ipc  names    ,  ipC _ names  and ipc _  original   and an ipc_ subclass  codes .   publication _ country _ name ",
            " The difficulty with the console is that large amounts of data will simply stream past . We often want to know what type of object we are working with and more details about the object . Here are some of the most common commands for",
            " Most patent data is a character vector with dates forming integers . We will often want to select aspects of our data to focus on a specific set of columns or to create a graph . We might also want to add information , ",
            " A fundamental feature of select is that it will drop columns that we do not name . So it is best to create a new object using  `  <  -   if you want to keep your original data for later",
            " In patent data a priority, application, publication or family number may occur multiple times and we would want to reduce the dataset to distinct records . We now want to calculate how many of our documents were published in each year . We",
            " We already know that there are 9996 records in the pizza dataset . To check our count is correct we can simply use sum and select the column we want to sum using the library ( dplyr) library (dply",
            " Rename a field with  ` rename (  )  `  from  ` dplyr `  to rename the fields . Note that understanding which fields require quote marks can take some effort .",
            " The plot reveals a data cliff in recent years . This normally reflects a lack of data for the last 2 - 3 years as recent documents feed through the system en route to publication . It is a good idea to remove the data",
            " We will limit our data to specific values using the  ` dplyr `  function  ` filter (  )    filter   works with rows rather than columns . To remove data prior to 1990 we will",
            " We first name our data  ( ` pizza _ total `  ) and then provide a file name with a . csv extension . In this case we have used a descriptive file name bearing in mind that Windows systems have limitations",
            " The standard way library ( dplyr ) library ( ggplot2 )  uses a filter to apply to subsequent operations on the data so that it matches the same data period . To see our . csv file we",
            " The code we have just created is six lines long . If we select all of this code and run it in one go it will produce our graph . We can save quite a lot of typing and reduce the complexity of the code",
            " The most popular pipe is  `  %  >  % `  which means ‘this’ then ‘that’ and means “this” then “that” in R code .",
            " The use of pipes simplifies the structure of R code by introducing a basic ‘this’ then “that” logic which makes it easier to understand . In the standard code we typed  ` df ` ",
            " There is no direct link between R and our infographics software this will create problems for us later because the infographics . software won’t know how to interpret the list object . It is generally a good idea to use",
            " The only change is that we need to explicitly include the reference to the df2 data frame as the data argument in the call to ` qplot (  )  The challenge with creating multiple tables from a baseline dataset is keeping",
            " We need to make sure that any data that we generate from our raw dataset matches the period for the  ` pizza _ total `  dataset . If we do not do this there is a risk that we will generate subdat",
            " 31 applicants  cleaned applicants _ cleaned applicants  clean… applicants  organ… applicants _ organ… Applicants  original  . 31 applicants cleaned applicants  cleaned applicants …     applicants  original . 31  applicants cleaned",
            " In this case we start with a call to  rename (   ` rename)  ` . In the case we begin with a  call to ‘ rename’ and ‘pub’ .",
            " There are two basic data formats :  long and wide . Our pizza dataset is in long format because each column is a variable and each row contains a country name . In this case each country name would become a variable with the",
            " The key to this is the  ` tidyr (    function  ` spread (  )  `  . As above we will start off by using  ` select ( )  to create a table with",
            " 6 Canada 1995 39 .  7 Canada 1996 36 .  8 Canada 1997 45 .  9 Canada 1998 46 .  10 Canada 1999 47 .  with 213 more rows .",
            " A tibble :  23 x 17 pubyear Canada China China    ` Eurasian Patent…  ` European Paten… Germany Israel Japan   Israel Japan .",
            " 13 more rows,  and 9 more variables :   Korea,  Republic of Republic of `   Mexico,  Portugal,  Singapore,  South Africa,  Spain and  U.S. of America .",
            " A tibble :  16 x 24 publication _ country…   (pubpubyear, publication _ number,  pubyear,  wt  =  n)   %  mutate ( n  =",
            " The United States of Am… 86 .  58 . 58 .  73 .  91 .   91  58   58,   79  79 .  81  67 .  with 15 more variables :",
            " To restore the data to long format we would need to use   gather (  ) as the counterpart to  spread (   ) `  takes a dataset,  a key for the name of the column we want",
            " Spread and gather work really well to prepare data in formats that are expected by other software . However, one of the main issues we encounter with patent data is that our data is not tidy because various fields are concatenated .",
            " In patent data we often see concatenated fields with a separator . These are typically applicant names, inventor names, IPC codes or document numbers . We need to tidy this data prior to data cleaning or to prepare for",
            " The  ` tidyr `  package contains three functions that are very useful when working with patent data . When dealing with concatenated fields in columns the key function is  ` separate _ rows . This field contains concaten",
            " pizza1 A tibble:  12 , 729 x 31 applicants cleaned applicants  cleaned applicants _ cleane… applicants  organ… applicants _ original . 1    People  < NA >  People < NA ",
            " With 12, 719 more rows,  and 27 more variables,    inventors  cleaned  and   inventors _ cleaned   with 12 and 719 other rows .  Inventors ",
            " Our original dataset contained 8 , 262 rows . Our new dataset split on applicant names contains 12, 729 rows . The function has moved our target column from column 1 to column 31 in the data frame . We can easily move",
            " Last few rows of the data using  ` tail (  )  `  . tail ( pizza1 $ applicants cleaned ,  $ applicants _ cleaned,  20 )    \" Yahoo !  Inc \"  \"",
            " Separationator is not a simple    \"  ;   but a space \"  in our call to  ` separate _ rows (  )  `  would actually be  ` sep  = ",
            " \" Weber Jean L \"   \" Pandey Neena \"  \" Sharma Sudhanshu \" \" \" Urban Scott \" \" Cole Lorin R \" \" Middleton Scott W \" \"",
            " Pizza1 library ( stringr )  pizza1 $ applicants _ cleaned  <  -  str _ trim ( pizza1 . $ applicants . cleaned   =   \" both \"  \" \" \"\" \" \"",
            " We use subsetting to modify the applicants column in place . There is possibly a more efficient way of doing this with pipes but this appears difficult because the data . frame needs to exist for  ` str _ trim ( str _",
            " >  =  1990 ,  pubyear  <  = =  1991 - pubyear =  2012 - pub year of publication .    = 1 PIZZA  < NA >   People  <",
            " With 12, 719 more rows and 26 more variables:  Inventors cleaned,   inventors cleaned    and  ipc _ class  < chr >  and ipc  codes  ",
            " We will want to create a plot with the applicants data in our infographic software . For that we need to introduce a field to count on . We might also want to establish a cut off point based on the number of records per",
            " If we inspect applicant count using ` View ( applicant _ count )  `  we have 6 , 178 rows . That is far too many to display in an infographic . So we filter the data on the value for the value",
            " A tibble :  10 x 2 applicants nn  < chr    = chr >  < dbl >   1 Graphic Packaging International, Inc 154 . 2 Kraft Foods Holdings, Inc 132",
            " Graphic Packaging International is the top result with 154 results . Google ranks third with 123 results followed by Microsoft . This could suggest that Google and Microsoft are suddenly entering the market for online pizza sales or pizza making software .",
            " library ( readr )  google  <  -  filter ( applicants ,  applicants  =    \" Google Inc \"  )   google A tibble :  123 x 31 title _ original applicants applicants",
            " < chr >   ipc _ codes    ,  ipC _ names   and ipc   names  <chr   - ipc_ codes  -    ipc",
            " The correct result for the period 1990 to 2012 for Google is 123 records from 191 records across the whole pizza dataset . The pizza dataset contains IPC codes on the class and the subgroup level in concatenated fields .",
            " For many patent analytics purposes this will be too general . However it has the advantage of being easy to visualise . To generate the table we can use a generic function based on the code developed for dealing with the applicants data .",
            " The patent count function is based on the code we developed for applicants . It contains variations to make it work as a function . The function takes four arguments :  1 .  col  =  the concatenated column that",
            " =  the number of results we want to see in the new table ( typically 10 or 20 for visualisation ) =  The number of rows that you want to show is typically 10 . 4 .  sep  = ",
            " This dataset is based on the main  ` pizza _ 1990 _ 2012 `  dataset . The reason we have not used the applicants dataset is because that dataset will duplicate the IPC field for each split of an applicant name .",
            " There are only 7 classes and as we might expect they are dominated by computing . We might want to dig into this in a little more detail and so let’s also create an IPC subclass field .",
            " We will be using data from words and phrases in the titles of patent documents for use in our Phrases Tables . The next and final step is to generate data from the text fields .",
            " It is possible to generate this type of data in R using the  ` tm `  and  ` NLP `  packages . Our pizza dataset already contains a title field broken down into phrases using Vantagepoint software",
            " Pizza 44 .  6 microwave Heating 41 .  7 Bakery Product 40 .  9 Microwave Cooking 39 .  10 Pizza Oven 37 .  11 pizza Dough 35 .  12 Cook Food 34 . ",
            " If you are starting this chapter here then download the datasets we will be using as a single zip file from the Manual repository here and then unzip the file . We first need to sign up for a free account with infog",
            " Click on one of the infograms with a graph such as Trends in Something and then click inside the graph box itself and select the edit button in the top right . This will open up a data panel with the toy data displayed",
            " Using Tableau workbook on Tableau infogram we add a bar chart and data using our IPC ,  applicants and phrases data . We will then continue to add elements as follows :  1 .  applicants bar chart",
            " In this chapter we have concentrated on using R to tidy patent data in order to create an online infographic using free software . In the final part of the chapter we used the data we had generated in RStudio to create a infographic",
            " None of the infographic services we viewed appeared to offer an API that would enable a direct connection with R . There also seems to be a gap in R’s packages where infographics might sit . Some of these topics have",
            " R bloggers Facebook page most viewed posts  (weekly) Most viewed posts: 5 Ways to Subset a Data Frame in R . Introducing our new book,  Tidy Modeling with R .Introducing our book,",
            " RStudio Cloud: A Student’s Perspective Jobs for R - users . High School Swimming State - Off Tournament Championship California vs . Texas .",
            " May 2020  ( 285 )  April 2020    ( 291 )  March 2019  ( 295 )  February 2019   February 2020 ( 218 )  January 2020 ( 213 )  December 2019 ( 215) ",
            " April 2017  ( 324 )  March 2017   ( 365 )  February 2017  is 365 . December 2016  ( 347)   November 2016    October 2016 ( 294 )  October  ( 294)",
            " March 2014 ( 289)  February 2014  ( 269 )  January 2014 ( 263 )  December 2013  ( 264)   November 2013   ( 241)  October 2013 ( 234 )  September 2013 ( 215",
            " February 2011  ( 205)  January 2011   ( 209)  ( 188)  November 2010  ( 172)  October 2010 ( 219)  September 2010 ( 185)  August 2010 ( 203)  July",
            " January 2008  (10)  December 2007  (3)  November 2007 (5)  October 2007 (9)  September 2007 (7)  August 2007 (21)  July 2007   (9 )",
            " CNN.com will feature iReporter photos in a weekly Travel Snapshots gallery . Please submit your best shots for next week's gallery . Visit CNN iReport.com/Travel next Wednesday for a new gallery of snapshots ."
          ],
          "text_suggester": [
            {
              "input": "an infographic",
              "weight": 3
            },
            {
              "input": "1 canada 1990",
              "weight": 47
            },
            {
              "input": "1 canada 1990 19",
              "weight": 51
            },
            {
              "input": "1 canada 1990",
              "weight": 47
            },
            {
              "input": "1 canada 1990 19",
              "weight": 51
            },
            {
              "input": "1 canada 19",
              "weight": 41
            },
            {
              "input": "1 digital map system",
              "weight": 0
            },
            {
              "input": "1 digital map system 10",
              "weight": 40
            },
            {
              "input": "1 food product",
              "weight": 0
            },
            {
              "input": "1 food product 179",
              "weight": 31
            },
            {
              "input": "1 graphic packaging international",
              "weight": 30
            },
            {
              "input": "10 canada 1999",
              "weight": 19
            },
            {
              "input": "10 canada 1999 47",
              "weight": 20
            },
            {
              "input": "10 ehrno",
              "weight": 0
            },
            {
              "input": "10 ehrno flexible a",
              "weight": 9
            },
            {
              "input": "10 g07",
              "weight": 0
            },
            {
              "input": "10 or 20",
              "weight": 0
            },
            {
              "input": "10 pizza oven 37",
              "weight": 10
            },
            {
              "input": "10 pizza packagi",
              "weight": 0
            },
            {
              "input": "10 search query 4",
              "weight": 23
            },
            {
              "input": "10 x 2",
              "weight": 0
            },
            {
              "input": "11 pizza dough",
              "weight": 0
            },
            {
              "input": "11 pizza dough 35",
              "weight": 5
            },
            {
              "input": "113 more rows",
              "weight": 0
            },
            {
              "input": "12 authoritative document identification",
              "weight": 0
            },
            {
              "input": "12 authoritative document identification 3",
              "weight": 25
            },
            {
              "input": "12 cook food 34",
              "weight": 6
            },
            {
              "input": "12 russian federation na",
              "weight": 0
            },
            {
              "input": "123 record from 191 record",
              "weight": 6
            },
            {
              "input": "123 records",
              "weight": 0
            },
            {
              "input": "123 results",
              "weight": 0
            },
            {
              "input": "13 baked product",
              "weight": 0
            },
            {
              "input": "13 baked product 33",
              "weight": 5
            },
            {
              "input": "13 business listings search",
              "weight": 0
            },
            {
              "input": "13 business listings search 3",
              "weight": 24
            },
            {
              "input": "13 more row note",
              "weight": 6
            },
            {
              "input": "13 more rows",
              "weight": 0
            },
            {
              "input": "14 content providers",
              "weight": 0
            },
            {
              "input": "14 content providers 3",
              "weight": 21
            },
            {
              "input": "14 related method",
              "weight": 0
            },
            {
              "input": "14 related method 32",
              "weight": 2
            },
            {
              "input": "14 south africa 2",
              "weight": 28
            },
            {
              "input": "15 food item",
              "weight": 0
            },
            {
              "input": "15 food item 29",
              "weight": 8
            },
            {
              "input": "15 indexing document 3",
              "weight": 23
            },
            {
              "input": "15 indexing documents",
              "weight": 0
            },
            {
              "input": "15 more variables",
              "weight": 0
            },
            {
              "input": "154 result with google rank",
              "weight": 12
            },
            {
              "input": "154 results",
              "weight": 0
            },
            {
              "input": "16 united states",
              "weight": 0
            },
            {
              "input": "191 records",
              "weight": 0
            },
            {
              "input": "1990 na 9",
              "weight": 54
            },
            {
              "input": "2 applicant nn",
              "weight": 33
            },
            {
              "input": "2 pubyear publication",
              "weight": 27
            },
            {
              "input": "2 authoritative",
              "weight": 0
            },
            {
              "input": "2 canada",
              "weight": 0
            },
            {
              "input": "2 canada 1991",
              "weight": 35
            },
            {
              "input": "2 canada 1991 49",
              "weight": 36
            },
            {
              "input": "2 china",
              "weight": 0
            },
            {
              "input": "2 china 1990",
              "weight": 37
            },
            {
              "input": "2 conversion path performance measures",
              "weight": 0
            },
            {
              "input": "2 h04",
              "weight": 0
            },
            {
              "input": "2 kraft foods holdings",
              "weight": 26
            },
            {
              "input": "2 microwave oven 137",
              "weight": 27
            },
            {
              "input": "2 microwave ovens",
              "weight": 0
            },
            {
              "input": "2 ventimeglia",
              "weight": 0
            },
            {
              "input": "2020 webinar series",
              "weight": 0
            },
            {
              "input": "213 more rows",
              "weight": 0
            },
            {
              "input": "23 x 2 pubyear publications",
              "weight": 0
            },
            {
              "input": "252 more rows",
              "weight": 0
            },
            {
              "input": "26 more variables",
              "weight": 0
            },
            {
              "input": "262 rows",
              "weight": 0
            },
            {
              "input": "27 more variables",
              "weight": 0
            },
            {
              "input": "3 canada 1992",
              "weight": 28
            },
            {
              "input": "3 canada 1992 66",
              "weight": 29
            },
            {
              "input": "3 cordova robert",
              "weight": 0
            },
            {
              "input": "3 eurasian patent org",
              "weight": 0
            },
            {
              "input": "3 eurasian patent organization",
              "weight": 0
            },
            {
              "input": "3 eurasian patent organization 1990",
              "weight": 30
            },
            {
              "input": "3 g01c",
              "weight": 0
            },
            {
              "input": "3 google inc 123",
              "weight": 34
            },
            {
              "input": "3 make same 48",
              "weight": 20
            },
            {
              "input": "3 mobile device",
              "weight": 0
            },
            {
              "input": "3 mobile device 8",
              "weight": 29
            },
            {
              "input": "3 year",
              "weight": 0
            },
            {
              "input": "3 years",
              "weight": 0
            },
            {
              "input": "358 more rows",
              "weight": 0
            },
            {
              "input": "4 canada",
              "weight": 0
            },
            {
              "input": "4 canada 1993",
              "weight": 23
            },
            {
              "input": "4 canada 1993 59",
              "weight": 26
            },
            {
              "input": "4 controlling t",
              "weight": 0
            },
            {
              "input": "4 conveyor",
              "weight": 0
            },
            {
              "input": "4 conveyor oven 46",
              "weight": 16
            },
            {
              "input": "4 depoortere",
              "weight": 0
            },
            {
              "input": "4 european patent office",
              "weight": 0
            },
            {
              "input": "4 european patent office 1990",
              "weight": 26
            },
            {
              "input": "4 g09",
              "weight": 0
            },
            {
              "input": "4 microsoft corporation",
              "weight": 0
            },
            {
              "input": "4 microsoft corporation 88",
              "weight": 16
            },
            {
              "input": "4 pizza separat… depoorter",
              "weight": 0
            },
            {
              "input": "4 search result 8",
              "weight": 24
            },
            {
              "input": "4 search results",
              "weight": 0
            },
            {
              "input": "48 more rows",
              "weight": 0
            },
            {
              "input": "5 canada 1994",
              "weight": 21
            },
            {
              "input": "5 canada 1994 50",
              "weight": 22
            },
            {
              "input": "5 crust pizza",
              "weight": 0
            },
            {
              "input": "5 crust pizza 44",
              "weight": 13
            },
            {
              "input": "5 frisco findus ag",
              "weight": 13
            },
            {
              "input": "5 g10",
              "weight": 0
            },
            {
              "input": "5 geographical relevance",
              "weight": 0
            },
            {
              "input": "5 geographical relevance 4",
              "weight": 26
            },
            {
              "input": "5 germany",
              "weight": 0
            },
            {
              "input": "5 germany 1990",
              "weight": 23
            },
            {
              "input": "5 germany 1990 2",
              "weight": 48
            },
            {
              "input": "5 germany 2",
              "weight": 38
            },
            {
              "input": "5 method",
              "weight": 0
            },
            {
              "input": "5 pizza prepara",
              "weight": 0
            },
            {
              "input": "5 the pillsbury company",
              "weight": 14
            },
            {
              "input": "5 the pillsbury company 83",
              "weight": 15
            },
            {
              "input": "58 x 2 pubyear publications",
              "weight": 0
            },
            {
              "input": "6 bicycle tools inc",
              "weight": 0
            },
            {
              "input": "6 bicycle tools inco",
              "weight": 0
            },
            {
              "input": "6 canada 1995",
              "weight": 20
            },
            {
              "input": "6 canada 1995 39",
              "weight": 21
            },
            {
              "input": "6 depoortere",
              "weight": 0
            },
            {
              "input": "6 general mills",
              "weight": 0
            },
            {
              "input": "6 israel 1990",
              "weight": 21
            },
            {
              "input": "6 local search result 4",
              "weight": 26
            },
            {
              "input": "6 local search results",
              "weight": 0
            },
            {
              "input": "6 microwave",
              "weight": 0
            },
            {
              "input": "6 microwave heating 41",
              "weight": 11
            },
            {
              "input": "7 bakery product",
              "weight": 0
            },
            {
              "input": "7 bakery product 40",
              "weight": 13
            },
            {
              "input": "7 canada 1996",
              "weight": 20
            },
            {
              "input": "7 canada 1996 36",
              "weight": 23
            },
            {
              "input": "7 castiglioni",
              "weight": 0
            },
            {
              "input": "7 g08",
              "weight": 0
            },
            {
              "input": "7 g09g",
              "weight": 0
            },
            {
              "input": "7 japan",
              "weight": 0
            },
            {
              "input": "7 japan 1990",
              "weight": 22
            },
            {
              "input": "7 japan na na na na na na na na",
              "weight": 0
            },
            {
              "input": "7 location prominence",
              "weight": 0
            },
            {
              "input": "7 location prominence 4",
              "weight": 26
            },
            {
              "input": "7 methods",
              "weight": 0
            },
            {
              "input": "7 nestec",
              "weight": 0
            },
            {
              "input": "7 nestec 77",
              "weight": 13
            },
            {
              "input": "7 pizza box",
              "weight": 0
            },
            {
              "input": "8 bicycle tools incorp",
              "weight": 0
            },
            {
              "input": "8 canada 1997",
              "weight": 19
            },
            {
              "input": "8 canada 1997 45",
              "weight": 20
            },
            {
              "input": "8 korea",
              "weight": 0
            },
            {
              "input": "8 network speech recognizers",
              "weight": 0
            },
            {
              "input": "8 network speech recognizers 4",
              "weight": 26
            },
            {
              "input": "8 pizza box",
              "weight": 0
            },
            {
              "input": "8 pizza box 40",
              "weight": 13
            },
            {
              "input": "9 bujalski",
              "weight": 0
            },
            {
              "input": "9 canada 1998",
              "weight": 21
            },
            {
              "input": "9 canada 1998 46",
              "weight": 22
            },
            {
              "input": "9 castiglioni",
              "weight": 0
            },
            {
              "input": "9 mexico 1990",
              "weight": 21
            },
            {
              "input": "9 mexico 1990 na",
              "weight": 0
            },
            {
              "input": "9 microwave cooking 39",
              "weight": 14
            },
            {
              "input": "9 more variables",
              "weight": 0
            },
            {
              "input": "9 processing queries",
              "weight": 0
            },
            {
              "input": "9 processing queries 4",
              "weight": 25
            },
            {
              "input": "986 more rows",
              "weight": 0
            },
            {
              "input": "9996 records",
              "weight": 0
            },
            {
              "input": "a bar chart",
              "weight": 0
            },
            {
              "input": "a baseline dataset",
              "weight": 0
            },
            {
              "input": "a basic infographic",
              "weight": 0
            },
            {
              "input": "a basis",
              "weight": 0
            },
            {
              "input": "a big issue",
              "weight": 0
            },
            {
              "input": "a blog",
              "weight": 0
            },
            {
              "input": "a calculation",
              "weight": 0
            },
            {
              "input": "a call",
              "weight": 0
            },
            {
              "input": "a chapter",
              "weight": 0
            },
            {
              "input": "a character vector",
              "weight": 0
            },
            {
              "input": "a chart friendly service",
              "weight": 0
            },
            {
              "input": "a chatbot",
              "weight": 0
            },
            {
              "input": "a choice",
              "weight": 0
            },
            {
              "input": "a column",
              "weight": 0
            },
            {
              "input": "a comment",
              "weight": 0
            },
            {
              "input": "a country name",
              "weight": 0
            },
            {
              "input": "a couple",
              "weight": 0
            },
            {
              "input": "a cut off point",
              "weight": 0
            },
            {
              "input": "a data argument",
              "weight": 0
            },
            {
              "input": "a data cliff",
              "weight": 0
            },
            {
              "input": "a data frame",
              "weight": 0
            },
            {
              "input": "a data panel",
              "weight": 0
            },
            {
              "input": "a dataset",
              "weight": 0
            },
            {
              "input": "a decent looking graph",
              "weight": 0
            },
            {
              "input": "a descriptive file name",
              "weight": 0
            },
            {
              "input": "a descriptive text box",
              "weight": 0
            },
            {
              "input": "a detailed report",
              "weight": 0
            },
            {
              "input": "a direct connection",
              "weight": 0
            },
            {
              "input": "a document name",
              "weight": 0
            },
            {
              "input": "a field",
              "weight": 0
            },
            {
              "input": "a file",
              "weight": 0
            },
            {
              "input": "a file name",
              "weight": 0
            },
            {
              "input": "a filter",
              "weight": 0
            },
            {
              "input": "a free account",
              "weight": 0
            },
            {
              "input": "a freemium model",
              "weight": 0
            },
            {
              "input": "a frosty deal",
              "weight": 0
            },
            {
              "input": "a function",
              "weight": 1
            },
            {
              "input": "a fundamental feature",
              "weight": 0
            },
            {
              "input": "a gap",
              "weight": 0
            },
            {
              "input": "a general ipc table",
              "weight": 0
            },
            {
              "input": "a generic function",
              "weight": 0
            },
            {
              "input": "a good idea",
              "weight": 0
            },
            {
              "input": "a good infographic",
              "weight": 0
            },
            {
              "input": "a good rule",
              "weight": 0
            },
            {
              "input": "a graph",
              "weight": 0
            },
            {
              "input": "a great job",
              "weight": 0
            },
            {
              "input": "a growing number",
              "weight": 0
            },
            {
              "input": "a key",
              "weight": 0
            },
            {
              "input": "a lack",
              "weight": 0
            },
            {
              "input": "a leading whitespace space",
              "weight": 0
            },
            {
              "input": "a line",
              "weight": 0
            },
            {
              "input": "a link",
              "weight": 0
            },
            {
              "input": "a list",
              "weight": 0
            },
            {
              "input": "a little more detail",
              "weight": 0
            },
            {
              "input": "a long report",
              "weight": 0
            },
            {
              "input": "a look",
              "weight": 0
            },
            {
              "input": "a lot",
              "weight": 0
            },
            {
              "input": "a monthly account",
              "weight": 0
            },
            {
              "input": "a more detailed ipc subclass table",
              "weight": 0
            },
            {
              "input": "a more efficient way",
              "weight": 0
            },
            {
              "input": "a more recent period",
              "weight": 0
            },
            {
              "input": "a new baseline dataset",
              "weight": 0
            },
            {
              "input": "a new job",
              "weight": 0
            },
            {
              "input": "a new object",
              "weight": 0
            },
            {
              "input": "a new temporary object",
              "weight": 0
            },
            {
              "input": "a new vector",
              "weight": 0
            },
            {
              "input": "a new window",
              "weight": 0
            },
            {
              "input": "a number",
              "weight": 0
            },
            {
              "input": "a numeric field",
              "weight": 0
            },
            {
              "input": "a package",
              "weight": 0
            },
            {
              "input": "a page",
              "weight": 0
            },
            {
              "input": "a paid account",
              "weight": 0
            },
            {
              "input": "a particular area",
              "weight": 0
            },
            {
              "input": "a patent document",
              "weight": 0
            },
            {
              "input": "a patent publication",
              "weight": 0
            },
            {
              "input": "a pipe",
              "weight": 0
            },
            {
              "input": "a plot",
              "weight": 0
            },
            {
              "input": "a popular way",
              "weight": 0
            },
            {
              "input": "a position",
              "weight": 0
            },
            {
              "input": "a programming language",
              "weight": 0
            },
            {
              "input": "a project",
              "weight": 1
            },
            {
              "input": "a quick line graph",
              "weight": 0
            },
            {
              "input": "a quickplot",
              "weight": 0
            },
            {
              "input": "a range",
              "weight": 0
            },
            {
              "input": "a reader",
              "weight": 0
            },
            {
              "input": "a recent report",
              "weight": 0
            },
            {
              "input": "a result",
              "weight": 0
            },
            {
              "input": "a reusable function",
              "weight": 0
            },
            {
              "input": "a risk",
              "weight": 0
            },
            {
              "input": "a scatter plot",
              "weight": 0
            },
            {
              "input": "a separate graph",
              "weight": 0
            },
            {
              "input": "a separator",
              "weight": 0
            },
            {
              "input": "a service",
              "weight": 0
            },
            {
              "input": "a set",
              "weight": 0
            },
            {
              "input": "a simple",
              "weight": 0
            },
            {
              "input": "a simple body text",
              "weight": 0
            },
            {
              "input": "a single zip file",
              "weight": 0
            },
            {
              "input": "a solution",
              "weight": 0
            },
            {
              "input": "a specific column",
              "weight": 0
            },
            {
              "input": "a specific set",
              "weight": 0
            },
            {
              "input": "a student’s perspective jobs",
              "weight": 0
            },
            {
              "input": "a subdataset",
              "weight": 0
            },
            {
              "input": "a summed value",
              "weight": 0
            },
            {
              "input": "a tab separated file",
              "weight": 0
            },
            {
              "input": "a table",
              "weight": 0
            },
            {
              "input": "a tibble",
              "weight": 7
            },
            {
              "input": "a time",
              "weight": 0
            },
            {
              "input": "a title field",
              "weight": 0
            },
            {
              "input": "a tool",
              "weight": 0
            },
            {
              "input": "a unique data point",
              "weight": 0
            },
            {
              "input": "a url",
              "weight": 0
            },
            {
              "input": "a useful overview",
              "weight": 0
            },
            {
              "input": "a value",
              "weight": 0
            },
            {
              "input": "a variable",
              "weight": 0
            },
            {
              "input": "a variety",
              "weight": 0
            },
            {
              "input": "a vector",
              "weight": 0
            },
            {
              "input": "a very popular way",
              "weight": 0
            },
            {
              "input": "a walk",
              "weight": 0
            },
            {
              "input": "a warning",
              "weight": 0
            },
            {
              "input": "a way",
              "weight": 0
            },
            {
              "input": "a whole range",
              "weight": 0
            },
            {
              "input": "a word cloud",
              "weight": 0
            },
            {
              "input": "ability to export file",
              "weight": 3
            },
            {
              "input": "account",
              "weight": 0
            },
            {
              "input": "actions",
              "weight": 0
            },
            {
              "input": "activity",
              "weight": 0
            },
            {
              "input": "additional",
              "weight": 0
            },
            {
              "input": "additional arguments",
              "weight": 0
            },
            {
              "input": "additional data",
              "weight": 0
            },
            {
              "input": "address",
              "weight": 0
            },
            {
              "input": "adm",
              "weight": 0
            },
            {
              "input": "agronomy",
              "weight": 0
            },
            {
              "input": "alan",
              "weight": 0
            },
            {
              "input": "all the materials",
              "weight": 0
            },
            {
              "input": "america",
              "weight": 0
            },
            {
              "input": "an alternative",
              "weight": 0
            },
            {
              "input": "an api",
              "weight": 0
            },
            {
              "input": "an applicant name",
              "weight": 0
            },
            {
              "input": "an earlier chapter",
              "weight": 0
            },
            {
              "input": "an embed code",
              "weight": 0
            },
            {
              "input": "an error message",
              "weight": 0
            },
            {
              "input": "an existing column",
              "weight": 0
            },
            {
              "input": "an explicit call",
              "weight": 0
            },
            {
              "input": "an idea",
              "weight": 0
            },
            {
              "input": "an input object",
              "weight": 0
            },
            {
              "input": "an ipc subclass field",
              "weight": 0
            },
            {
              "input": "an object",
              "weight": 0
            },
            {
              "input": "an online infographic",
              "weight": 0
            },
            {
              "input": "an unambiguous name",
              "weight": 0
            },
            {
              "input": "an update",
              "weight": 0
            },
            {
              "input": "analysis",
              "weight": 0
            },
            {
              "input": "analytics",
              "weight": 0
            },
            {
              "input": "analytics blog",
              "weight": 1
            },
            {
              "input": "and s",
              "weight": 0
            },
            {
              "input": "and then bar",
              "weight": 0
            },
            {
              "input": "another way",
              "weight": 0
            },
            {
              "input": "any counts",
              "weight": 0
            },
            {
              "input": "any data",
              "weight": 0
            },
            {
              "input": "any file",
              "weight": 0
            },
            {
              "input": "any subsequent operations",
              "weight": 0
            },
            {
              "input": "appear",
              "weight": 0
            },
            {
              "input": "applicant",
              "weight": 6
            },
            {
              "input": "applicant name contain 12",
              "weight": 10
            },
            {
              "input": "applicant names",
              "weight": 0
            },
            {
              "input": "applicants",
              "weight": 0
            },
            {
              "input": "apply",
              "weight": 0
            },
            {
              "input": "apply in the case",
              "weight": 0
            },
            {
              "input": "approach",
              "weight": 0
            },
            {
              "input": "april",
              "weight": 0
            },
            {
              "input": "april 2006",
              "weight": 0
            },
            {
              "input": "april 2008",
              "weight": 0
            },
            {
              "input": "april 2010",
              "weight": 0
            },
            {
              "input": "april 2011",
              "weight": 0
            },
            {
              "input": "april 2012",
              "weight": 0
            },
            {
              "input": "april 2013",
              "weight": 0
            },
            {
              "input": "april 2014",
              "weight": 0
            },
            {
              "input": "april 2015",
              "weight": 0
            },
            {
              "input": "april 2016",
              "weight": 0
            },
            {
              "input": "april 2017",
              "weight": 0
            },
            {
              "input": "april 2018",
              "weight": 0
            },
            {
              "input": "april 2019",
              "weight": 0
            },
            {
              "input": "april 2020",
              "weight": 0
            },
            {
              "input": "archives select month september 2020",
              "weight": 9
            },
            {
              "input": "argument",
              "weight": 0
            },
            {
              "input": "arrangements",
              "weight": 0
            },
            {
              "input": "article",
              "weight": 0
            },
            {
              "input": "aspects",
              "weight": 0
            },
            {
              "input": "assistive devices",
              "weight": 0
            },
            {
              "input": "audiences",
              "weight": 0
            },
            {
              "input": "audit lead",
              "weight": 0
            },
            {
              "input": "august",
              "weight": 0
            },
            {
              "input": "august 2008",
              "weight": 0
            },
            {
              "input": "august 2010",
              "weight": 0
            },
            {
              "input": "august 2012",
              "weight": 0
            },
            {
              "input": "august 2014",
              "weight": 0
            },
            {
              "input": "august 2015",
              "weight": 0
            },
            {
              "input": "august 2016",
              "weight": 0
            },
            {
              "input": "august 2017",
              "weight": 0
            },
            {
              "input": "august 2018",
              "weight": 0
            },
            {
              "input": "august 2019",
              "weight": 0
            },
            {
              "input": "august 2020",
              "weight": 0
            },
            {
              "input": "available",
              "weight": 0
            },
            {
              "input": "available format for export",
              "weight": 1
            },
            {
              "input": "available tools",
              "weight": 0
            },
            {
              "input": "baking",
              "weight": 0
            },
            {
              "input": "base",
              "weight": 0
            },
            {
              "input": "base r",
              "weight": 0
            },
            {
              "input": "basic",
              "weight": 0
            },
            {
              "input": "bearings",
              "weight": 0
            },
            {
              "input": "bicycle",
              "weight": 0
            },
            {
              "input": "bicycle tools",
              "weight": 0
            },
            {
              "input": "bicycle tools inc",
              "weight": 0
            },
            {
              "input": "bicycle tools inco",
              "weight": 0
            },
            {
              "input": "bicycle tools incor",
              "weight": 0
            },
            {
              "input": "blog",
              "weight": 0
            },
            {
              "input": "blogger",
              "weight": 0
            },
            {
              "input": "blue arrow to see",
              "weight": 1
            },
            {
              "input": "book",
              "weight": 0
            },
            {
              "input": "box",
              "weight": 0
            },
            {
              "input": "boxes",
              "weight": 0
            },
            {
              "input": "braden",
              "weight": 0
            },
            {
              "input": "brazil",
              "weight": 0
            },
            {
              "input": "brown",
              "weight": 0
            },
            {
              "input": "brown michael",
              "weight": 0
            },
            {
              "input": "bujalski",
              "weight": 0
            },
            {
              "input": "button",
              "weight": 0
            },
            {
              "input": "call",
              "weight": 0
            },
            {
              "input": "canada",
              "weight": 0
            },
            {
              "input": "canada china",
              "weight": 0
            },
            {
              "input": "carlo",
              "weight": 0
            },
            {
              "input": "carlo people",
              "weight": 0
            },
            {
              "input": "carlo people",
              "weight": 0
            },
            {
              "input": "case",
              "weight": 0
            },
            {
              "input": "case and other example",
              "weight": 2
            },
            {
              "input": "case be to recognise",
              "weight": 1
            },
            {
              "input": "case of patent datum",
              "weight": 10
            },
            {
              "input": "case the only change",
              "weight": 1
            },
            {
              "input": "cases",
              "weight": 0
            },
            {
              "input": "casper",
              "weight": 0
            },
            {
              "input": "casper jeffrey l",
              "weight": 0
            },
            {
              "input": "castiglio",
              "weight": 0
            },
            {
              "input": "castiglioni",
              "weight": 0
            },
            {
              "input": "cgiar excellence",
              "weight": 0
            },
            {
              "input": "change",
              "weight": 0
            },
            {
              "input": "chapter",
              "weight": 0
            },
            {
              "input": "chapter 12",
              "weight": 0
            },
            {
              "input": "chapter 14 of r for data science",
              "weight": 0
            },
            {
              "input": "character",
              "weight": 0
            },
            {
              "input": "characters",
              "weight": 0
            },
            {
              "input": "chart",
              "weight": 0
            },
            {
              "input": "charts",
              "weight": 0
            },
            {
              "input": "check",
              "weight": 0
            },
            {
              "input": "china",
              "weight": 1
            },
            {
              "input": "choose",
              "weight": 0
            },
            {
              "input": "chr",
              "weight": 0
            },
            {
              "input": "circuits",
              "weight": 0
            },
            {
              "input": "clarcor",
              "weight": 0
            },
            {
              "input": "clarcor inc",
              "weight": 0
            },
            {
              "input": "class",
              "weight": 0
            },
            {
              "input": "classification",
              "weight": 0
            },
            {
              "input": "cleaning names",
              "weight": 0
            },
            {
              "input": "click",
              "weight": 0
            },
            {
              "input": "cloud",
              "weight": 0
            },
            {
              "input": "clouds",
              "weight": 0
            },
            {
              "input": "code",
              "weight": 2
            },
            {
              "input": "code develop for deal",
              "weight": 3
            },
            {
              "input": "code provide a filter",
              "weight": 14
            },
            {
              "input": "col",
              "weight": 1
            },
            {
              "input": "cole",
              "weight": 0
            },
            {
              "input": "cole lorin r",
              "weight": 0
            },
            {
              "input": "column",
              "weight": 6
            },
            {
              "input": "columns",
              "weight": 0
            },
            {
              "input": "command",
              "weight": 0
            },
            {
              "input": "comment",
              "weight": 0
            },
            {
              "input": "common",
              "weight": 0
            },
            {
              "input": "common problems",
              "weight": 0
            },
            {
              "input": "communication",
              "weight": 0
            },
            {
              "input": "companies",
              "weight": 0
            },
            {
              "input": "company",
              "weight": 1
            },
            {
              "input": "computing",
              "weight": 0
            },
            {
              "input": "concatenate",
              "weight": 0
            },
            {
              "input": "concatenate into each cell",
              "weight": 0
            },
            {
              "input": "concatenated",
              "weight": 0
            },
            {
              "input": "concatenated fields",
              "weight": 0
            },
            {
              "input": "concatenated names",
              "weight": 0
            },
            {
              "input": "console",
              "weight": 0
            },
            {
              "input": "contain",
              "weight": 0
            },
            {
              "input": "content",
              "weight": 0
            },
            {
              "input": "content on this page",
              "weight": 0
            },
            {
              "input": "contribute",
              "weight": 0
            },
            {
              "input": "controls",
              "weight": 0
            },
            {
              "input": "cook food",
              "weight": 0
            },
            {
              "input": "cordova",
              "weight": 0
            },
            {
              "input": "cordova robert",
              "weight": 0
            },
            {
              "input": "corporate",
              "weight": 2
            },
            {
              "input": "corporate lazarillo de tor",
              "weight": 0
            },
            {
              "input": "corporate lazarillo de tor",
              "weight": 0
            },
            {
              "input": "correct",
              "weight": 0
            },
            {
              "input": "count",
              "weight": 3
            },
            {
              "input": "counting",
              "weight": 0
            },
            {
              "input": "country",
              "weight": 0
            },
            {
              "input": "country trends",
              "weight": 0
            },
            {
              "input": "counts",
              "weight": 0
            },
            {
              "input": "cover",
              "weight": 0
            },
            {
              "input": "cover in other chapter",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 0
            },
            {
              "input": "create infographic as part",
              "weight": 3
            },
            {
              "input": "darren",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 0
            },
            {
              "input": "data cleaning",
              "weight": 0
            },
            {
              "input": "data fields",
              "weight": 0
            },
            {
              "input": "data processing systems",
              "weight": 0
            },
            {
              "input": "data processing systems or methods",
              "weight": 0
            },
            {
              "input": "data science",
              "weight": 0
            },
            {
              "input": "data science book",
              "weight": 0
            },
            {
              "input": "data science platform",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 0
            },
            {
              "input": "dates",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 9
            },
            {
              "input": "datum on technology area",
              "weight": 10
            },
            {
              "input": "datum prior to 1990",
              "weight": 21
            },
            {
              "input": "dbl",
              "weight": 0
            },
            {
              "input": "de torme",
              "weight": 0
            },
            {
              "input": "deal",
              "weight": 0
            },
            {
              "input": "december",
              "weight": 0
            },
            {
              "input": "december 2009",
              "weight": 0
            },
            {
              "input": "december 2010",
              "weight": 0
            },
            {
              "input": "december 2011",
              "weight": 0
            },
            {
              "input": "december 2012",
              "weight": 0
            },
            {
              "input": "december 2013",
              "weight": 0
            },
            {
              "input": "december 2014",
              "weight": 0
            },
            {
              "input": "december 2015",
              "weight": 0
            },
            {
              "input": "december 2016",
              "weight": 0
            },
            {
              "input": "december 2017",
              "weight": 0
            },
            {
              "input": "december 2018",
              "weight": 0
            },
            {
              "input": "december 2019",
              "weight": 0
            },
            {
              "input": "depend",
              "weight": 0
            },
            {
              "input": "depoortere",
              "weight": 0
            },
            {
              "input": "descending order",
              "weight": 0
            },
            {
              "input": "detail",
              "weight": 0
            },
            {
              "input": "detailed",
              "weight": 0
            },
            {
              "input": "detailed ipc subclass table",
              "weight": 9
            },
            {
              "input": "develop",
              "weight": 0
            },
            {
              "input": "difficult",
              "weight": 0
            },
            {
              "input": "digital",
              "weight": 0
            },
            {
              "input": "digital information",
              "weight": 0
            },
            {
              "input": "dimensions",
              "weight": 0
            },
            {
              "input": "direct",
              "weight": 0
            },
            {
              "input": "direct import",
              "weight": 0
            },
            {
              "input": "direct link between r",
              "weight": 11
            },
            {
              "input": "display",
              "weight": 0
            },
            {
              "input": "distinct records",
              "weight": 0
            },
            {
              "input": "document",
              "weight": 0
            },
            {
              "input": "document numbers",
              "weight": 0
            },
            {
              "input": "download",
              "weight": 0
            },
            {
              "input": "dplyr",
              "weight": 14
            },
            {
              "input": "dummy pandas data frames",
              "weight": 0
            },
            {
              "input": "each cell",
              "weight": 0
            },
            {
              "input": "each column",
              "weight": 0
            },
            {
              "input": "each country name",
              "weight": 0
            },
            {
              "input": "each function",
              "weight": 0
            },
            {
              "input": "each publication number",
              "weight": 0
            },
            {
              "input": "each row",
              "weight": 0
            },
            {
              "input": "each split",
              "weight": 0
            },
            {
              "input": "each year",
              "weight": 0
            },
            {
              "input": "easy",
              "weight": 0
            },
            {
              "input": "edit",
              "weight": 0
            },
            {
              "input": "educational or demonstration appliances",
              "weight": 0
            },
            {
              "input": "effort",
              "weight": 0
            },
            {
              "input": "ehrno",
              "weight": 0
            },
            {
              "input": "ehrno fle",
              "weight": 0
            },
            {
              "input": "ehrno flexible",
              "weight": 0
            },
            {
              "input": "electric",
              "weight": 0
            },
            {
              "input": "electric communication technique",
              "weight": 0
            },
            {
              "input": "electric digital data processing",
              "weight": 0
            },
            {
              "input": "electric techniques",
              "weight": 0
            },
            {
              "input": "electronic book format",
              "weight": 0
            },
            {
              "input": "elements",
              "weight": 0
            },
            {
              "input": "end of the infographic",
              "weight": 2
            },
            {
              "input": "erickson",
              "weight": 0
            },
            {
              "input": "eurasian",
              "weight": 0
            },
            {
              "input": "eurasian patent organization",
              "weight": 0
            },
            {
              "input": "european patent office",
              "weight": 0
            },
            {
              "input": "example",
              "weight": 1
            },
            {
              "input": "excel",
              "weight": 0
            },
            {
              "input": "exist",
              "weight": 0
            },
            {
              "input": "existing boxes",
              "weight": 0
            },
            {
              "input": "existing character columns",
              "weight": 0
            },
            {
              "input": "existing data",
              "weight": 0
            },
            {
              "input": "expect",
              "weight": 0
            },
            {
              "input": "export",
              "weight": 0
            },
            {
              "input": "export option that depend",
              "weight": 1
            },
            {
              "input": "export options",
              "weight": 0
            },
            {
              "input": "extra white space",
              "weight": 0
            },
            {
              "input": "facebook page",
              "weight": 0
            },
            {
              "input": "family number",
              "weight": 0
            },
            {
              "input": "family numbers",
              "weight": 0
            },
            {
              "input": "farrell brian",
              "weight": 0
            },
            {
              "input": "feature",
              "weight": 0
            },
            {
              "input": "february",
              "weight": 0
            },
            {
              "input": "february 2009",
              "weight": 0
            },
            {
              "input": "february 2011",
              "weight": 0
            },
            {
              "input": "february 2012",
              "weight": 0
            },
            {
              "input": "february 2013",
              "weight": 0
            },
            {
              "input": "february 2014",
              "weight": 0
            },
            {
              "input": "february 2015",
              "weight": 0
            },
            {
              "input": "february 2016",
              "weight": 0
            },
            {
              "input": "february 2018",
              "weight": 0
            },
            {
              "input": "february 2019",
              "weight": 0
            },
            {
              "input": "february 2020",
              "weight": 0
            },
            {
              "input": "field",
              "weight": 0
            },
            {
              "input": "field contain concatenate name",
              "weight": 1
            },
            {
              "input": "file",
              "weight": 1
            },
            {
              "input": "file for a project",
              "weight": 13
            },
            {
              "input": "file names",
              "weight": 0
            },
            {
              "input": "files",
              "weight": 0
            },
            {
              "input": "filter",
              "weight": 0
            },
            {
              "input": "filter data",
              "weight": 0
            },
            {
              "input": "final",
              "weight": 0
            },
            {
              "input": "final infographic should look",
              "weight": 2
            },
            {
              "input": "finally the positions",
              "weight": 0
            },
            {
              "input": "find",
              "weight": 0
            },
            {
              "input": "findus",
              "weight": 0
            },
            {
              "input": "flexible",
              "weight": 0
            },
            {
              "input": "flexible a",
              "weight": 0
            },
            {
              "input": "focus",
              "weight": 0
            },
            {
              "input": "follow",
              "weight": 0
            },
            {
              "input": "following",
              "weight": 0
            },
            {
              "input": "food",
              "weight": 0
            },
            {
              "input": "foods",
              "weight": 0
            },
            {
              "input": "foods or foodstuffs",
              "weight": 0
            },
            {
              "input": "foodstuffs",
              "weight": 0
            },
            {
              "input": "form",
              "weight": 0
            },
            {
              "input": "format",
              "weight": 0
            },
            {
              "input": "formats",
              "weight": 0
            },
            {
              "input": "four",
              "weight": 0
            },
            {
              "input": "four arguments",
              "weight": 0
            },
            {
              "input": "frame",
              "weight": 0
            },
            {
              "input": "free",
              "weight": 0
            },
            {
              "input": "free software",
              "weight": 0
            },
            {
              "input": "frisco",
              "weight": 0
            },
            {
              "input": "frisco fi",
              "weight": 0
            },
            {
              "input": "frisco findus ag",
              "weight": 0
            },
            {
              "input": "full list",
              "weight": 0
            },
            {
              "input": "function",
              "weight": 0
            },
            {
              "input": "future",
              "weight": 0
            },
            {
              "input": "g01",
              "weight": 0
            },
            {
              "input": "g06",
              "weight": 0
            },
            {
              "input": "g06f",
              "weight": 0
            },
            {
              "input": "g06q",
              "weight": 0
            },
            {
              "input": "g09b",
              "weight": 0
            },
            {
              "input": "g10l",
              "weight": 0
            },
            {
              "input": "garrett grolemund",
              "weight": 0
            },
            {
              "input": "gather",
              "weight": 0
            },
            {
              "input": "gathering",
              "weight": 0
            },
            {
              "input": "general",
              "weight": 0
            },
            {
              "input": "generate",
              "weight": 0
            },
            {
              "input": "generate subdataset with count",
              "weight": 4
            },
            {
              "input": "geom",
              "weight": 0
            },
            {
              "input": "germany",
              "weight": 0
            },
            {
              "input": "ggplot2",
              "weight": 0
            },
            {
              "input": "github",
              "weight": 0
            },
            {
              "input": "github download the file",
              "weight": 3
            },
            {
              "input": "github manual",
              "weight": 0
            },
            {
              "input": "good",
              "weight": 0
            },
            {
              "input": "good practice",
              "weight": 0
            },
            {
              "input": "google",
              "weight": 1
            },
            {
              "input": "google dataset 3",
              "weight": 27
            },
            {
              "input": "google dialogflow",
              "weight": 0
            },
            {
              "input": "google forms",
              "weight": 0
            },
            {
              "input": "google inc",
              "weight": 0
            },
            {
              "input": "google inc corporate",
              "weight": 0
            },
            {
              "input": "google ipc",
              "weight": 0
            },
            {
              "input": "google phrases",
              "weight": 0
            },
            {
              "input": "google word cloud",
              "weight": 0
            },
            {
              "input": "graph",
              "weight": 0
            },
            {
              "input": "graph such as trends",
              "weight": 0
            },
            {
              "input": "graphic",
              "weight": 0
            },
            {
              "input": "graphic packaging international",
              "weight": 0
            },
            {
              "input": "graphics",
              "weight": 0
            },
            {
              "input": "great",
              "weight": 0
            },
            {
              "input": "great job but one",
              "weight": 6
            },
            {
              "input": "greater importance",
              "weight": 0
            },
            {
              "input": "group",
              "weight": 0
            },
            {
              "input": "h04",
              "weight": 0
            },
            {
              "input": "h04b",
              "weight": 0
            },
            {
              "input": "h04l",
              "weight": 0
            },
            {
              "input": "h04m",
              "weight": 0
            },
            {
              "input": "h05",
              "weight": 0
            },
            {
              "input": "hadley",
              "weight": 0
            },
            {
              "input": "hadley wickham",
              "weight": 0
            },
            {
              "input": "hadley wickham ’s",
              "weight": 0
            },
            {
              "input": "hadley wickham’s data wrangling and tidying packages",
              "weight": 0
            },
            {
              "input": "hadley wickham’s tidy data article",
              "weight": 0
            },
            {
              "input": "hafsteinsson gu",
              "weight": 0
            },
            {
              "input": "handle the code one",
              "weight": 8
            },
            {
              "input": "harmonising data",
              "weight": 0
            },
            {
              "input": "healthcare analytics",
              "weight": 0
            },
            {
              "input": "heating",
              "weight": 0
            },
            {
              "input": "historical analysis",
              "weight": 0
            },
            {
              "input": "holden",
              "weight": 0
            },
            {
              "input": "holden jeffrey",
              "weight": 0
            },
            {
              "input": "how many names",
              "weight": 0
            },
            {
              "input": "hundreds",
              "weight": 0
            },
            {
              "input": "idea",
              "weight": 0
            },
            {
              "input": "ideas",
              "weight": 0
            },
            {
              "input": "identify",
              "weight": 0
            },
            {
              "input": "ignite",
              "weight": 0
            },
            {
              "input": "import",
              "weight": 0
            },
            {
              "input": "important",
              "weight": 0
            },
            {
              "input": "improved pizza lazarillo",
              "weight": 0
            },
            {
              "input": "inc",
              "weight": 0
            },
            {
              "input": "include",
              "weight": 0
            },
            {
              "input": "indicating devices us",
              "weight": 0
            },
            {
              "input": "individual words",
              "weight": 0
            },
            {
              "input": "infogram",
              "weight": 0
            },
            {
              "input": "infogram new text boxes",
              "weight": 0
            },
            {
              "input": "infographic",
              "weight": 1
            },
            {
              "input": "infographics",
              "weight": 0
            },
            {
              "input": "infographics software",
              "weight": 0
            },
            {
              "input": "information",
              "weight": 1
            },
            {
              "input": "inpi",
              "weight": 0
            },
            {
              "input": "inspect",
              "weight": 0
            },
            {
              "input": "inspect applicant count use",
              "weight": 11
            },
            {
              "input": "int",
              "weight": 0
            },
            {
              "input": "integers",
              "weight": 0
            },
            {
              "input": "international",
              "weight": 0
            },
            {
              "input": "international patent classification",
              "weight": 0
            },
            {
              "input": "interpret",
              "weight": 0
            },
            {
              "input": "introduce",
              "weight": 0
            },
            {
              "input": "inventor names",
              "weight": 0
            },
            {
              "input": "involve",
              "weight": 0
            },
            {
              "input": "ipc",
              "weight": 7
            },
            {
              "input": "ipc codes",
              "weight": 0
            },
            {
              "input": "ipc data",
              "weight": 0
            },
            {
              "input": "ipc tables",
              "weight": 0
            },
            {
              "input": "israel",
              "weight": 0
            },
            {
              "input": "israel na",
              "weight": 0
            },
            {
              "input": "israel japan",
              "weight": 0
            },
            {
              "input": "issue",
              "weight": 0
            },
            {
              "input": "its efforts",
              "weight": 0
            },
            {
              "input": "its type",
              "weight": 0
            },
            {
              "input": "itself",
              "weight": 0
            },
            {
              "input": "jamie jo",
              "weight": 0
            },
            {
              "input": "january",
              "weight": 0
            },
            {
              "input": "january 2009",
              "weight": 0
            },
            {
              "input": "january 2010",
              "weight": 0
            },
            {
              "input": "january 2011",
              "weight": 0
            },
            {
              "input": "january 2012",
              "weight": 0
            },
            {
              "input": "january 2013",
              "weight": 0
            },
            {
              "input": "january 2014",
              "weight": 0
            },
            {
              "input": "january 2015",
              "weight": 0
            },
            {
              "input": "january 2016",
              "weight": 0
            },
            {
              "input": "january 2017",
              "weight": 0
            },
            {
              "input": "january 2018",
              "weight": 0
            },
            {
              "input": "january 2019",
              "weight": 0
            },
            {
              "input": "january 2020",
              "weight": 0
            },
            {
              "input": "japan",
              "weight": 0
            },
            {
              "input": "jean",
              "weight": 0
            },
            {
              "input": "jeffrey",
              "weight": 0
            },
            {
              "input": "job",
              "weight": 0
            },
            {
              "input": "july",
              "weight": 0
            },
            {
              "input": "july 2009",
              "weight": 0
            },
            {
              "input": "july 2010",
              "weight": 0
            },
            {
              "input": "july 2011",
              "weight": 0
            },
            {
              "input": "july 2012",
              "weight": 0
            },
            {
              "input": "july 2014",
              "weight": 0
            },
            {
              "input": "july 2015",
              "weight": 0
            },
            {
              "input": "july 2016",
              "weight": 0
            },
            {
              "input": "july 2017",
              "weight": 0
            },
            {
              "input": "july 2018",
              "weight": 0
            },
            {
              "input": "july 2020",
              "weight": 0
            },
            {
              "input": "june",
              "weight": 0
            },
            {
              "input": "june 2012",
              "weight": 0
            },
            {
              "input": "june 2014",
              "weight": 0
            },
            {
              "input": "june 2015",
              "weight": 0
            },
            {
              "input": "june 2016",
              "weight": 0
            },
            {
              "input": "june 2017",
              "weight": 0
            },
            {
              "input": "june 2018",
              "weight": 0
            },
            {
              "input": "june 2020",
              "weight": 0
            },
            {
              "input": "keep",
              "weight": 0
            },
            {
              "input": "key",
              "weight": 0
            },
            {
              "input": "key findings",
              "weight": 0
            },
            {
              "input": "key points",
              "weight": 0
            },
            {
              "input": "know",
              "weight": 0
            },
            {
              "input": "know how many name",
              "weight": 1
            },
            {
              "input": "korea",
              "weight": 0
            },
            {
              "input": "kraft foods holdings",
              "weight": 0
            },
            {
              "input": "labels",
              "weight": 0
            },
            {
              "input": "large amount of datum",
              "weight": 11
            },
            {
              "input": "large amounts",
              "weight": 0
            },
            {
              "input": "large number",
              "weight": 0
            },
            {
              "input": "last",
              "weight": 0
            },
            {
              "input": "last line",
              "weight": 0
            },
            {
              "input": "late",
              "weight": 0
            },
            {
              "input": "later work",
              "weight": 0
            },
            {
              "input": "latest jobs",
              "weight": 0
            },
            {
              "input": "lazarillo",
              "weight": 0
            },
            {
              "input": "lazarillo de",
              "weight": 0
            },
            {
              "input": "lazarillo de tor …",
              "weight": 0
            },
            {
              "input": "lazarillo de torm",
              "weight": 0
            },
            {
              "input": "lazarillo de torme",
              "weight": 0
            },
            {
              "input": "lazarillo de tormes",
              "weight": 0
            },
            {
              "input": "learn",
              "weight": 0
            },
            {
              "input": "leave",
              "weight": 0
            },
            {
              "input": "level",
              "weight": 0
            },
            {
              "input": "levels",
              "weight": 0
            },
            {
              "input": "libraries",
              "weight": 0
            },
            {
              "input": "library",
              "weight": 18
            },
            {
              "input": "licensing",
              "weight": 0
            },
            {
              "input": "light work",
              "weight": 0
            },
            {
              "input": "limit",
              "weight": 0
            },
            {
              "input": "limitations",
              "weight": 0
            },
            {
              "input": "limited data",
              "weight": 0
            },
            {
              "input": "limited datum from 1940",
              "weight": 11
            },
            {
              "input": "line",
              "weight": 1
            },
            {
              "input": "lines",
              "weight": 0
            },
            {
              "input": "link",
              "weight": 0
            },
            {
              "input": "list",
              "weight": 0
            },
            {
              "input": "load",
              "weight": 0
            },
            {
              "input": "london",
              "weight": 0
            },
            {
              "input": "long",
              "weight": 0
            },
            {
              "input": "long format",
              "weight": 0
            },
            {
              "input": "long tail",
              "weight": 0
            },
            {
              "input": "look",
              "weight": 0
            },
            {
              "input": "lorin",
              "weight": 0
            },
            {
              "input": "lot",
              "weight": 0
            },
            {
              "input": "lot of the name",
              "weight": 1
            },
            {
              "input": "low frequency data",
              "weight": 0
            },
            {
              "input": "madonna",
              "weight": 0
            },
            {
              "input": "main",
              "weight": 0
            },
            {
              "input": "make",
              "weight": 0
            },
            {
              "input": "manual",
              "weight": 0
            },
            {
              "input": "manual efforts",
              "weight": 0
            },
            {
              "input": "many",
              "weight": 0
            },
            {
              "input": "many other topics",
              "weight": 0
            },
            {
              "input": "many patent analytic purpose",
              "weight": 1
            },
            {
              "input": "many patent analytics purposes",
              "weight": 0
            },
            {
              "input": "maps",
              "weight": 0
            },
            {
              "input": "march",
              "weight": 0
            },
            {
              "input": "march 2007",
              "weight": 0
            },
            {
              "input": "march 2010",
              "weight": 0
            },
            {
              "input": "march 2011",
              "weight": 0
            },
            {
              "input": "march 2012",
              "weight": 0
            },
            {
              "input": "march 2013",
              "weight": 0
            },
            {
              "input": "march 2014",
              "weight": 0
            },
            {
              "input": "march 2015",
              "weight": 0
            },
            {
              "input": "march 2016",
              "weight": 0
            },
            {
              "input": "march 2017",
              "weight": 0
            },
            {
              "input": "march 2018",
              "weight": 0
            },
            {
              "input": "march 2019",
              "weight": 0
            },
            {
              "input": "mart",
              "weight": 0
            },
            {
              "input": "may",
              "weight": 0
            },
            {
              "input": "may 2005",
              "weight": 0
            },
            {
              "input": "may 2006",
              "weight": 0
            },
            {
              "input": "may 2007",
              "weight": 0
            },
            {
              "input": "may 2008",
              "weight": 0
            },
            {
              "input": "may 2009",
              "weight": 0
            },
            {
              "input": "may 2010",
              "weight": 0
            },
            {
              "input": "may 2011",
              "weight": 0
            },
            {
              "input": "may 2012",
              "weight": 0
            },
            {
              "input": "may 2013",
              "weight": 0
            },
            {
              "input": "may 2014",
              "weight": 0
            },
            {
              "input": "may 2015",
              "weight": 0
            },
            {
              "input": "may 2016",
              "weight": 0
            },
            {
              "input": "may 2017",
              "weight": 0
            },
            {
              "input": "may 2018",
              "weight": 0
            },
            {
              "input": "may 2019",
              "weight": 0
            },
            {
              "input": "may 2020",
              "weight": 0
            },
            {
              "input": "mcnulty john",
              "weight": 0
            },
            {
              "input": "medical or veterinary science",
              "weight": 0
            },
            {
              "input": "message",
              "weight": 0
            },
            {
              "input": "methods",
              "weight": 0
            },
            {
              "input": "mexico",
              "weight": 0
            },
            {
              "input": "mh themes",
              "weight": 0
            },
            {
              "input": "michael",
              "weight": 0
            },
            {
              "input": "microsoft",
              "weight": 0
            },
            {
              "input": "microsoft corporation",
              "weight": 0
            },
            {
              "input": "microwave cooking",
              "weight": 0
            },
            {
              "input": "middleton",
              "weight": 0
            },
            {
              "input": "middleton scott w",
              "weight": 1
            },
            {
              "input": "mixed components",
              "weight": 0
            },
            {
              "input": "modify",
              "weight": 0
            },
            {
              "input": "more",
              "weight": 0
            },
            {
              "input": "more attracti",
              "weight": 0
            },
            {
              "input": "more detail",
              "weight": 0
            },
            {
              "input": "more detailed research",
              "weight": 0
            },
            {
              "input": "more information",
              "weight": 0
            },
            {
              "input": "more than one",
              "weight": 0
            },
            {
              "input": "more than one ipc code",
              "weight": 0
            },
            {
              "input": "most patent data",
              "weight": 0
            },
            {
              "input": "most r packages",
              "weight": 0
            },
            {
              "input": "most viewed posts",
              "weight": 0
            },
            {
              "input": "move",
              "weight": 0
            },
            {
              "input": "moves",
              "weight": 0
            },
            {
              "input": "multiple",
              "weight": 0
            },
            {
              "input": "multiple instances",
              "weight": 0
            },
            {
              "input": "multiple lines",
              "weight": 0
            },
            {
              "input": "multiple tables",
              "weight": 0
            },
            {
              "input": "multiple values",
              "weight": 0
            },
            {
              "input": "musical instruments",
              "weight": 0
            },
            {
              "input": "mutate",
              "weight": 0
            },
            {
              "input": "na na",
              "weight": 0
            },
            {
              "input": "na na 29",
              "weight": 69
            },
            {
              "input": "na na 36",
              "weight": 69
            },
            {
              "input": "na na 1",
              "weight": 96
            },
            {
              "input": "na na na",
              "weight": 100
            },
            {
              "input": "na na na na na na na",
              "weight": 0
            },
            {
              "input": "na na na na na na na na",
              "weight": 0
            },
            {
              "input": "na na na na na na na na 14",
              "weight": 0
            },
            {
              "input": "na na na na na",
              "weight": 0
            },
            {
              "input": "na na na na na na",
              "weight": 0
            },
            {
              "input": "na na na na na na na na",
              "weight": 0
            },
            {
              "input": "na values",
              "weight": 0
            },
            {
              "input": "name",
              "weight": 0
            },
            {
              "input": "names",
              "weight": 0
            },
            {
              "input": "nanotechnology",
              "weight": 0
            },
            {
              "input": "need",
              "weight": 0
            },
            {
              "input": "need to do two",
              "weight": 3
            },
            {
              "input": "need to make sure",
              "weight": 1
            },
            {
              "input": "need to start dig",
              "weight": 0
            },
            {
              "input": "neena",
              "weight": 0
            },
            {
              "input": "new",
              "weight": 0
            },
            {
              "input": "new boxes",
              "weight": 0
            },
            {
              "input": "new project",
              "weight": 0
            },
            {
              "input": "newcastle",
              "weight": 0
            },
            {
              "input": "news",
              "weight": 0
            },
            {
              "input": "next",
              "weight": 1
            },
            {
              "input": "nine",
              "weight": 0
            },
            {
              "input": "no applicant name",
              "weight": 0
            },
            {
              "input": "no direct link",
              "weight": 0
            },
            {
              "input": "no prior knowledge",
              "weight": 0
            },
            {
              "input": "notably numeric counts",
              "weight": 0
            },
            {
              "input": "note",
              "weight": 0
            },
            {
              "input": "november",
              "weight": 0
            },
            {
              "input": "november 2007",
              "weight": 0
            },
            {
              "input": "november 2009",
              "weight": 0
            },
            {
              "input": "november 2010",
              "weight": 0
            },
            {
              "input": "november 2011",
              "weight": 0
            },
            {
              "input": "november 2012",
              "weight": 0
            },
            {
              "input": "november 2013",
              "weight": 0
            },
            {
              "input": "november 2014",
              "weight": 0
            },
            {
              "input": "november 2015",
              "weight": 0
            },
            {
              "input": "november 2016",
              "weight": 0
            },
            {
              "input": "november 2017",
              "weight": 0
            },
            {
              "input": "november 2018",
              "weight": 0
            },
            {
              "input": "november 2019",
              "weight": 0
            },
            {
              "input": "number",
              "weight": 0
            },
            {
              "input": "numeric",
              "weight": 0
            },
            {
              "input": "object",
              "weight": 1
            },
            {
              "input": "objects",
              "weight": 0
            },
            {
              "input": "october",
              "weight": 0
            },
            {
              "input": "october 2010",
              "weight": 0
            },
            {
              "input": "october 2011",
              "weight": 0
            },
            {
              "input": "october 2012",
              "weight": 0
            },
            {
              "input": "october 2013",
              "weight": 0
            },
            {
              "input": "october 2014",
              "weight": 0
            },
            {
              "input": "october 2015",
              "weight": 0
            },
            {
              "input": "october 2016",
              "weight": 0
            },
            {
              "input": "october 2017",
              "weight": 0
            },
            {
              "input": "october 2018",
              "weight": 0
            },
            {
              "input": "october 2019",
              "weight": 0
            },
            {
              "input": "offer",
              "weight": 0
            },
            {
              "input": "oldham",
              "weight": 0
            },
            {
              "input": "ole farrell brian",
              "weight": 0
            },
            {
              "input": "one",
              "weight": 5
            },
            {
              "input": "one approach",
              "weight": 0
            },
            {
              "input": "one challenge",
              "weight": 0
            },
            {
              "input": "one feature",
              "weight": 0
            },
            {
              "input": "one feature of many",
              "weight": 6
            },
            {
              "input": "one feature of this code",
              "weight": 8
            },
            {
              "input": "one important consideration",
              "weight": 0
            },
            {
              "input": "one nice feature",
              "weight": 0
            },
            {
              "input": "one nice feature of infogram",
              "weight": 8
            },
            {
              "input": "one of a number",
              "weight": 17
            },
            {
              "input": "one of the infogram",
              "weight": 6
            },
            {
              "input": "one page infographics",
              "weight": 0
            },
            {
              "input": "one point",
              "weight": 0
            },
            {
              "input": "one point to note",
              "weight": 6
            },
            {
              "input": "one strength",
              "weight": 0
            },
            {
              "input": "one useful approach",
              "weight": 0
            },
            {
              "input": "online",
              "weight": 0
            },
            {
              "input": "online github manual repository",
              "weight": 2
            },
            {
              "input": "online infographic services",
              "weight": 0
            },
            {
              "input": "online infographic software services",
              "weight": 0
            },
            {
              "input": "online pizza sales",
              "weight": 0
            },
            {
              "input": "only 7 classes",
              "weight": 0
            },
            {
              "input": "only a selection",
              "weight": 0
            },
            {
              "input": "open source patent analytics",
              "weight": 0
            },
            {
              "input": "operator",
              "weight": 0
            },
            {
              "input": "oppenheimer",
              "weight": 0
            },
            {
              "input": "oppenheimer alan",
              "weight": 0
            },
            {
              "input": "oppenheimer alan a",
              "weight": 0
            },
            {
              "input": "original",
              "weight": 0
            },
            {
              "input": "original dataset contain 8",
              "weight": 10
            },
            {
              "input": "other",
              "weight": 0
            },
            {
              "input": "other chapters",
              "weight": 0
            },
            {
              "input": "other clients",
              "weight": 0
            },
            {
              "input": "other counts",
              "weight": 0
            },
            {
              "input": "other examples",
              "weight": 0
            },
            {
              "input": "other services",
              "weight": 0
            },
            {
              "input": "other sites",
              "weight": 0
            },
            {
              "input": "other software",
              "weight": 0
            },
            {
              "input": "other useful functions",
              "weight": 0
            },
            {
              "input": "other uses",
              "weight": 0
            },
            {
              "input": "others",
              "weight": 0
            },
            {
              "input": "our call",
              "weight": 0
            },
            {
              "input": "our count",
              "weight": 0
            },
            {
              "input": "our country",
              "weight": 0
            },
            {
              "input": "our country trends table",
              "weight": 0
            },
            {
              "input": "our data",
              "weight": 0
            },
            {
              "input": "our data frame",
              "weight": 0
            },
            {
              "input": "our data object",
              "weight": 0
            },
            {
              "input": "our dataset",
              "weight": 0
            },
            {
              "input": "our documents",
              "weight": 0
            },
            {
              "input": "our final infographic",
              "weight": 0
            },
            {
              "input": "our google data",
              "weight": 0
            },
            {
              "input": "our graph",
              "weight": 0
            },
            {
              "input": "our infographic",
              "weight": 0
            },
            {
              "input": "our infographic software",
              "weight": 0
            },
            {
              "input": "our infographics software",
              "weight": 0
            },
            {
              "input": "our ipc",
              "weight": 0
            },
            {
              "input": "our ipc class data",
              "weight": 0
            },
            {
              "input": "our new book",
              "weight": 0
            },
            {
              "input": "our new dataset",
              "weight": 0
            },
            {
              "input": "our original data",
              "weight": 0
            },
            {
              "input": "our original dataset",
              "weight": 0
            },
            {
              "input": "our pizza data",
              "weight": 0
            },
            {
              "input": "our pizza dataset",
              "weight": 0
            },
            {
              "input": "our plot",
              "weight": 0
            },
            {
              "input": "our publication field",
              "weight": 0
            },
            {
              "input": "our purposes",
              "weight": 0
            },
            {
              "input": "our raw dataset",
              "weight": 0
            },
            {
              "input": "our separator",
              "weight": 0
            },
            {
              "input": "our target column",
              "weight": 0
            },
            {
              "input": "our trusty pizza patent data",
              "weight": 0
            },
            {
              "input": "our visualisation software",
              "weight": 0
            },
            {
              "input": "package",
              "weight": 2
            },
            {
              "input": "packages",
              "weight": 0
            },
            {
              "input": "packaging",
              "weight": 0
            },
            {
              "input": "page",
              "weight": 0
            },
            {
              "input": "pandey",
              "weight": 0
            },
            {
              "input": "pandey neena",
              "weight": 2
            },
            {
              "input": "part",
              "weight": 2
            },
            {
              "input": "patent",
              "weight": 0
            },
            {
              "input": "patent activity",
              "weight": 0
            },
            {
              "input": "patent data",
              "weight": 0
            },
            {
              "input": "patent documents",
              "weight": 0
            },
            {
              "input": "patent research",
              "weight": 0
            },
            {
              "input": "paul",
              "weight": 0
            },
            {
              "input": "paul oldham",
              "weight": 0
            },
            {
              "input": "peop",
              "weight": 1
            },
            {
              "input": "peop …",
              "weight": 1
            },
            {
              "input": "people",
              "weight": 0
            },
            {
              "input": "people ehrno",
              "weight": 0
            },
            {
              "input": "period",
              "weight": 0
            },
            {
              "input": "period 1990 to 2012",
              "weight": 14
            },
            {
              "input": "phrase",
              "weight": 1
            },
            {
              "input": "phrase use vantagepoint software",
              "weight": 4
            },
            {
              "input": "phrases",
              "weight": 0
            },
            {
              "input": "phrases data",
              "weight": 0
            },
            {
              "input": "phrases tables",
              "weight": 0
            },
            {
              "input": "pillsbury company 83",
              "weight": 3
            },
            {
              "input": "pipe",
              "weight": 3
            },
            {
              "input": "pipes",
              "weight": 0
            },
            {
              "input": "pizza",
              "weight": 0
            },
            {
              "input": "pizza analytics",
              "weight": 0
            },
            {
              "input": "pizza cutter bicycle t",
              "weight": 0
            },
            {
              "input": "pizza dataset 2",
              "weight": 28
            },
            {
              "input": "pizza hut",
              "weight": 0
            },
            {
              "input": "pizza making",
              "weight": 0
            },
            {
              "input": "pizza oven",
              "weight": 0
            },
            {
              "input": "pizza patent activity",
              "weight": 0
            },
            {
              "input": "pizza phrases",
              "weight": 0
            },
            {
              "input": "pizza1",
              "weight": 1
            },
            {
              "input": "place",
              "weight": 1
            },
            {
              "input": "plot",
              "weight": 0
            },
            {
              "input": "point",
              "weight": 0
            },
            {
              "input": "policy makers",
              "weight": 0
            },
            {
              "input": "popular",
              "weight": 0
            },
            {
              "input": "portugal na",
              "weight": 0
            },
            {
              "input": "position",
              "weight": 0
            },
            {
              "input": "possible",
              "weight": 0
            },
            {
              "input": "post",
              "weight": 0
            },
            {
              "input": "prepare",
              "weight": 0
            },
            {
              "input": "prepare datum in format",
              "weight": 10
            },
            {
              "input": "present",
              "weight": 0
            },
            {
              "input": "presentation",
              "weight": 0
            },
            {
              "input": "presentations",
              "weight": 0
            },
            {
              "input": "print",
              "weight": 0
            },
            {
              "input": "priority numbers",
              "weight": 0
            },
            {
              "input": "problem",
              "weight": 0
            },
            {
              "input": "problem do not apply",
              "weight": 0
            },
            {
              "input": "problems",
              "weight": 0
            },
            {
              "input": "processing",
              "weight": 0
            },
            {
              "input": "produce",
              "weight": 0
            },
            {
              "input": "product",
              "weight": 0
            },
            {
              "input": "project",
              "weight": 0
            },
            {
              "input": "project files",
              "weight": 0
            },
            {
              "input": "projects",
              "weight": 0
            },
            {
              "input": "prove very popular such",
              "weight": 1
            },
            {
              "input": "provide",
              "weight": 0
            },
            {
              "input": "provide a file name",
              "weight": 14
            },
            {
              "input": "provide for 613",
              "weight": 0
            },
            {
              "input": "publication",
              "weight": 0
            },
            {
              "input": "publication dates",
              "weight": 0
            },
            {
              "input": "publication number",
              "weight": 0
            },
            {
              "input": "publication number be unique",
              "weight": 1
            },
            {
              "input": "pubyear",
              "weight": 1
            },
            {
              "input": "purpose",
              "weight": 0
            },
            {
              "input": "purpose with the analysis",
              "weight": 1
            },
            {
              "input": "purposes",
              "weight": 0
            },
            {
              "input": "qplot",
              "weight": 1
            },
            {
              "input": "quite a lot",
              "weight": 0
            },
            {
              "input": "quote",
              "weight": 0
            },
            {
              "input": "quote from someone describe",
              "weight": 0
            },
            {
              "input": "quote marks",
              "weight": 0
            },
            {
              "input": "quotes",
              "weight": 0
            },
            {
              "input": "r bloggers",
              "weight": 0
            },
            {
              "input": "r code",
              "weight": 0
            },
            {
              "input": "r news",
              "weight": 0
            },
            {
              "input": "r try chapter 14",
              "weight": 13
            },
            {
              "input": "r use tool such",
              "weight": 13
            },
            {
              "input": "range",
              "weight": 0
            },
            {
              "input": "raw",
              "weight": 0
            },
            {
              "input": "raw data",
              "weight": 0
            },
            {
              "input": "ray",
              "weight": 0
            },
            {
              "input": "ray madonna m",
              "weight": 1
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "readr",
              "weight": 0
            },
            {
              "input": "reason",
              "weight": 0
            },
            {
              "input": "receive",
              "weight": 0
            },
            {
              "input": "recent",
              "weight": 0
            },
            {
              "input": "recent documents",
              "weight": 0
            },
            {
              "input": "recent posts",
              "weight": 0
            },
            {
              "input": "recent year",
              "weight": 0
            },
            {
              "input": "recent years",
              "weight": 0
            },
            {
              "input": "recognise that the separator",
              "weight": 1
            },
            {
              "input": "record",
              "weight": 1
            },
            {
              "input": "records",
              "weight": 0
            },
            {
              "input": "regular two page technology radar",
              "weight": 0
            },
            {
              "input": "regular user of r",
              "weight": 11
            },
            {
              "input": "regular users",
              "weight": 0
            },
            {
              "input": "remainder of the chapter",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 0
            },
            {
              "input": "remove the 30 record",
              "weight": 2
            },
            {
              "input": "rename",
              "weight": 0
            },
            {
              "input": "report",
              "weight": 0
            },
            {
              "input": "repository",
              "weight": 0
            },
            {
              "input": "republic",
              "weight": 0
            },
            {
              "input": "require",
              "weight": 0
            },
            {
              "input": "result",
              "weight": 0
            },
            {
              "input": "results",
              "weight": 0
            },
            {
              "input": "reveal",
              "weight": 0
            },
            {
              "input": "right",
              "weight": 0
            },
            {
              "input": "rladies’ online event",
              "weight": 0
            },
            {
              "input": "round",
              "weight": 0
            },
            {
              "input": "row",
              "weight": 2
            },
            {
              "input": "rows",
              "weight": 0
            },
            {
              "input": "rstudio",
              "weight": 3
            },
            {
              "input": "rstudio cloud",
              "weight": 0
            },
            {
              "input": "run",
              "weight": 0
            },
            {
              "input": "russian federation",
              "weight": 0
            },
            {
              "input": "r’s packages",
              "weight": 0
            },
            {
              "input": "same",
              "weight": 0
            },
            {
              "input": "science",
              "weight": 0
            },
            {
              "input": "scott",
              "weight": 0
            },
            {
              "input": "search",
              "weight": 1
            },
            {
              "input": "search query",
              "weight": 0
            },
            {
              "input": "see",
              "weight": 0
            },
            {
              "input": "see that a lot",
              "weight": 12
            },
            {
              "input": "see the publication year",
              "weight": 4
            },
            {
              "input": "select",
              "weight": 3
            },
            {
              "input": "select the edit button",
              "weight": 4
            },
            {
              "input": "select the graph icon",
              "weight": 4
            },
            {
              "input": "selection of the offering",
              "weight": 1
            },
            {
              "input": "sep",
              "weight": 1
            },
            {
              "input": "separate",
              "weight": 0
            },
            {
              "input": "separate names",
              "weight": 0
            },
            {
              "input": "separate rows",
              "weight": 0
            },
            {
              "input": "separator",
              "weight": 0
            },
            {
              "input": "september",
              "weight": 0
            },
            {
              "input": "september 2009",
              "weight": 0
            },
            {
              "input": "september 2010",
              "weight": 0
            },
            {
              "input": "september 2011",
              "weight": 0
            },
            {
              "input": "september 2012",
              "weight": 0
            },
            {
              "input": "september 2013",
              "weight": 0
            },
            {
              "input": "september 2014",
              "weight": 0
            },
            {
              "input": "september 2015",
              "weight": 0
            },
            {
              "input": "september 2016",
              "weight": 0
            },
            {
              "input": "september 2017",
              "weight": 0
            },
            {
              "input": "september 2018",
              "weight": 0
            },
            {
              "input": "september 2019",
              "weight": 0
            },
            {
              "input": "september 2020",
              "weight": 0
            },
            {
              "input": "service",
              "weight": 0
            },
            {
              "input": "set",
              "weight": 0
            },
            {
              "input": "share",
              "weight": 0
            },
            {
              "input": "sharetweet",
              "weight": 0
            },
            {
              "input": "sharma",
              "weight": 0
            },
            {
              "input": "sharma sudhanshu",
              "weight": 2
            },
            {
              "input": "short lines",
              "weight": 0
            },
            {
              "input": "simple",
              "weight": 0
            },
            {
              "input": "simple messages",
              "weight": 0
            },
            {
              "input": "simplify",
              "weight": 0
            },
            {
              "input": "simplify write r code",
              "weight": 13
            },
            {
              "input": "singapore na",
              "weight": 0
            },
            {
              "input": "single applicant names",
              "weight": 0
            },
            {
              "input": "sister packages",
              "weight": 0
            },
            {
              "input": "six",
              "weight": 0
            },
            {
              "input": "software",
              "weight": 0
            },
            {
              "input": "solutions",
              "weight": 0
            },
            {
              "input": "some additional datasets",
              "weight": 0
            },
            {
              "input": "some cases",
              "weight": 0
            },
            {
              "input": "some effort",
              "weight": 0
            },
            {
              "input": "some patent offices",
              "weight": 0
            },
            {
              "input": "some reason",
              "weight": 0
            },
            {
              "input": "some sample infographics",
              "weight": 0
            },
            {
              "input": "someone",
              "weight": 0
            },
            {
              "input": "something",
              "weight": 0
            },
            {
              "input": "south africa",
              "weight": 0
            },
            {
              "input": "space",
              "weight": 0
            },
            {
              "input": "spain na",
              "weight": 0
            },
            {
              "input": "spam attacks",
              "weight": 0
            },
            {
              "input": "specific",
              "weight": 0
            },
            {
              "input": "specific columns",
              "weight": 0
            },
            {
              "input": "specific set of column",
              "weight": 6
            },
            {
              "input": "specific values",
              "weight": 0
            },
            {
              "input": "speech analysis",
              "weight": 0
            },
            {
              "input": "spell checker",
              "weight": 0
            },
            {
              "input": "split",
              "weight": 0
            },
            {
              "input": "sponsors",
              "weight": 0
            },
            {
              "input": "spread",
              "weight": 1
            },
            {
              "input": "spread note",
              "weight": 0
            },
            {
              "input": "stack overflow1",
              "weight": 0
            },
            {
              "input": "start",
              "weight": 0
            },
            {
              "input": "step",
              "weight": 0
            },
            {
              "input": "stergaard",
              "weight": 0
            },
            {
              "input": "story elements",
              "weight": 0
            },
            {
              "input": "str",
              "weight": 0
            },
            {
              "input": "stringr",
              "weight": 1
            },
            {
              "input": "structure",
              "weight": 0
            },
            {
              "input": "subclass",
              "weight": 0
            },
            {
              "input": "subdataset",
              "weight": 0
            },
            {
              "input": "subdatasets",
              "weight": 0
            },
            {
              "input": "subjects",
              "weight": 0
            },
            {
              "input": "subsetting",
              "weight": 1
            },
            {
              "input": "such",
              "weight": 0
            },
            {
              "input": "sudhanshu",
              "weight": 0
            },
            {
              "input": "sum",
              "weight": 1
            },
            {
              "input": "summaries",
              "weight": 0
            },
            {
              "input": "sy …",
              "weight": 0
            },
            {
              "input": "synthesis",
              "weight": 0
            },
            {
              "input": "system",
              "weight": 0
            },
            {
              "input": "tab",
              "weight": 0
            },
            {
              "input": "table",
              "weight": 0
            },
            {
              "input": "tables",
              "weight": 0
            },
            {
              "input": "tail",
              "weight": 0
            },
            {
              "input": "take",
              "weight": 0
            },
            {
              "input": "technical documentation",
              "weight": 0
            },
            {
              "input": "technology areas",
              "weight": 0
            },
            {
              "input": "telephonic communication",
              "weight": 0
            },
            {
              "input": "ten",
              "weight": 0
            },
            {
              "input": "texas",
              "weight": 0
            },
            {
              "input": "text",
              "weight": 0
            },
            {
              "input": "text boxes",
              "weight": 0
            },
            {
              "input": "text mining",
              "weight": 0
            },
            {
              "input": "that case",
              "weight": 0
            },
            {
              "input": "that data",
              "weight": 0
            },
            {
              "input": "that dataset",
              "weight": 0
            },
            {
              "input": "that qplot",
              "weight": 0
            },
            {
              "input": "that way",
              "weight": 0
            },
            {
              "input": "that year",
              "weight": 1
            },
            {
              "input": "the 30 records",
              "weight": 0
            },
            {
              "input": "the ability",
              "weight": 0
            },
            {
              "input": "the actual file",
              "weight": 0
            },
            {
              "input": "the advantage",
              "weight": 0
            },
            {
              "input": "the analysis",
              "weight": 0
            },
            {
              "input": "the applicants",
              "weight": 0
            },
            {
              "input": "the applicants data",
              "weight": 0
            },
            {
              "input": "the applicants data frame",
              "weight": 0
            },
            {
              "input": "the applicants table",
              "weight": 0
            },
            {
              "input": "the audience",
              "weight": 0
            },
            {
              "input": "the author",
              "weight": 0
            },
            {
              "input": "the available formats",
              "weight": 0
            },
            {
              "input": "the beginning",
              "weight": 0
            },
            {
              "input": "the beginning applicants",
              "weight": 0
            },
            {
              "input": "the blue arrow",
              "weight": 0
            },
            {
              "input": "the call",
              "weight": 0
            },
            {
              "input": "the case",
              "weight": 0
            },
            {
              "input": "the chapter",
              "weight": 0
            },
            {
              "input": "the character vector",
              "weight": 0
            },
            {
              "input": "the class",
              "weight": 0
            },
            {
              "input": "the code",
              "weight": 2
            },
            {
              "input": "the code one line",
              "weight": 0
            },
            {
              "input": "the column",
              "weight": 4
            },
            {
              "input": "the column names",
              "weight": 0
            },
            {
              "input": "the column positions",
              "weight": 0
            },
            {
              "input": "the columns",
              "weight": 0
            },
            {
              "input": "the complexity",
              "weight": 0
            },
            {
              "input": "the concept",
              "weight": 0
            },
            {
              "input": "the console",
              "weight": 1
            },
            {
              "input": "the content",
              "weight": 0
            },
            {
              "input": "the contents",
              "weight": 0
            },
            {
              "input": "the cool infographics website",
              "weight": 0
            },
            {
              "input": "the cooperative patent classification",
              "weight": 0
            },
            {
              "input": "the coordinates",
              "weight": 0
            },
            {
              "input": "the correct result",
              "weight": 0
            },
            {
              "input": "the count",
              "weight": 0
            },
            {
              "input": "the counterpart",
              "weight": 0
            },
            {
              "input": "the countries",
              "weight": 0
            },
            {
              "input": "the country names",
              "weight": 0
            },
            {
              "input": "the data",
              "weight": 0
            },
            {
              "input": "the data argument",
              "weight": 0
            },
            {
              "input": "the data cliff",
              "weight": 0
            },
            {
              "input": "the data credit",
              "weight": 0
            },
            {
              "input": "the data frame",
              "weight": 0
            },
            {
              "input": "the dataset",
              "weight": 0
            },
            {
              "input": "the datasets",
              "weight": 0
            },
            {
              "input": "the descriptions",
              "weight": 0
            },
            {
              "input": "the detailed group",
              "weight": 0
            },
            {
              "input": "the df1 object",
              "weight": 0
            },
            {
              "input": "the df2 data frame",
              "weight": 0
            },
            {
              "input": "the difficulty",
              "weight": 0
            },
            {
              "input": "the earlier code",
              "weight": 0
            },
            {
              "input": "the edit button",
              "weight": 0
            },
            {
              "input": "the end",
              "weight": 0
            },
            {
              "input": "the environment",
              "weight": 0
            },
            {
              "input": "the field",
              "weight": 0
            },
            {
              "input": "the fields",
              "weight": 0
            },
            {
              "input": "the file",
              "weight": 1
            },
            {
              "input": "the file name",
              "weight": 0
            },
            {
              "input": "the filename",
              "weight": 0
            },
            {
              "input": "the files",
              "weight": 0
            },
            {
              "input": "the files tab",
              "weight": 0
            },
            {
              "input": "the final line",
              "weight": 0
            },
            {
              "input": "the final output",
              "weight": 0
            },
            {
              "input": "the final part",
              "weight": 0
            },
            {
              "input": "the findings",
              "weight": 0
            },
            {
              "input": "the first line",
              "weight": 0
            },
            {
              "input": "the following",
              "weight": 0
            },
            {
              "input": "the following simpler code",
              "weight": 0
            },
            {
              "input": "the full report",
              "weight": 0
            },
            {
              "input": "the function",
              "weight": 1
            },
            {
              "input": "the general class level",
              "weight": 0
            },
            {
              "input": "the github repository",
              "weight": 0
            },
            {
              "input": "the google data",
              "weight": 0
            },
            {
              "input": "the google dataset",
              "weight": 0
            },
            {
              "input": "the graph",
              "weight": 0
            },
            {
              "input": "the graph box",
              "weight": 0
            },
            {
              "input": "the graph icon",
              "weight": 0
            },
            {
              "input": "the great strengths",
              "weight": 0
            },
            {
              "input": "the group",
              "weight": 0
            },
            {
              "input": "the head",
              "weight": 0
            },
            {
              "input": "the images",
              "weight": 0
            },
            {
              "input": "the impact",
              "weight": 0
            },
            {
              "input": "the infograms",
              "weight": 0
            },
            {
              "input": "the infographic",
              "weight": 1
            },
            {
              "input": "the infographic services",
              "weight": 0
            },
            {
              "input": "the infographics software",
              "weight": 0
            },
            {
              "input": "the instituto nacional de propiedade industrial",
              "weight": 0
            },
            {
              "input": "the instructions",
              "weight": 0
            },
            {
              "input": "the ipc",
              "weight": 0
            },
            {
              "input": "the ipc codes",
              "weight": 0
            },
            {
              "input": "the ipc field",
              "weight": 0
            },
            {
              "input": "the ipcs",
              "weight": 0
            },
            {
              "input": "the keras functional api",
              "weight": 0
            },
            {
              "input": "the key",
              "weight": 0
            },
            {
              "input": "the key function",
              "weight": 0
            },
            {
              "input": "the last few rows",
              "weight": 0
            },
            {
              "input": "the late 1970",
              "weight": 0
            },
            {
              "input": "the late 1970s",
              "weight": 0
            },
            {
              "input": "the latest r posts",
              "weight": 0
            },
            {
              "input": "the length",
              "weight": 0
            },
            {
              "input": "the link",
              "weight": 0
            },
            {
              "input": "the list",
              "weight": 0
            },
            {
              "input": "the list object",
              "weight": 0
            },
            {
              "input": "the main issues",
              "weight": 0
            },
            {
              "input": "the main ways",
              "weight": 0
            },
            {
              "input": "the majority",
              "weight": 0
            },
            {
              "input": "the manual repository",
              "weight": 0
            },
            {
              "input": "the market",
              "weight": 0
            },
            {
              "input": "the menu icons",
              "weight": 0
            },
            {
              "input": "the moment",
              "weight": 0
            },
            {
              "input": "the most common and useful data format",
              "weight": 0
            },
            {
              "input": "the most common commands",
              "weight": 0
            },
            {
              "input": "the most efficient solution",
              "weight": 0
            },
            {
              "input": "the most popular pipe",
              "weight": 0
            },
            {
              "input": "the most useful command",
              "weight": 0
            },
            {
              "input": "the name",
              "weight": 1
            },
            {
              "input": "the names",
              "weight": 0
            },
            {
              "input": "the new r",
              "weight": 0
            },
            {
              "input": "the new table",
              "weight": 0
            },
            {
              "input": "the next and final step",
              "weight": 0
            },
            {
              "input": "the next step",
              "weight": 0
            },
            {
              "input": "the number",
              "weight": 3
            },
            {
              "input": "the numeric count",
              "weight": 0
            },
            {
              "input": "the numeric vector",
              "weight": 0
            },
            {
              "input": "the object",
              "weight": 1
            },
            {
              "input": "the object total",
              "weight": 0
            },
            {
              "input": "the observations",
              "weight": 0
            },
            {
              "input": "the offerings",
              "weight": 0
            },
            {
              "input": "the online github manual repository",
              "weight": 0
            },
            {
              "input": "the online software tool infogram",
              "weight": 0
            },
            {
              "input": "the only applicant",
              "weight": 0
            },
            {
              "input": "the only change",
              "weight": 0
            },
            {
              "input": "the others",
              "weight": 0
            },
            {
              "input": "the outputs",
              "weight": 0
            },
            {
              "input": "the package",
              "weight": 0
            },
            {
              "input": "the packages",
              "weight": 0
            },
            {
              "input": "the packages pane",
              "weight": 0
            },
            {
              "input": "the packages tab",
              "weight": 0
            },
            {
              "input": "the period",
              "weight": 0
            },
            {
              "input": "the period 1990 to 2012",
              "weight": 0
            },
            {
              "input": "the pillsbury company",
              "weight": 0
            },
            {
              "input": "the pipe operator",
              "weight": 0
            },
            {
              "input": "the pizza dataset",
              "weight": 1
            },
            {
              "input": "the plot",
              "weight": 0
            },
            {
              "input": "the present",
              "weight": 0
            },
            {
              "input": "the problem",
              "weight": 0
            },
            {
              "input": "the problems",
              "weight": 0
            },
            {
              "input": "the process",
              "weight": 0
            },
            {
              "input": "the project",
              "weight": 0
            },
            {
              "input": "the publication number",
              "weight": 0
            },
            {
              "input": "the publication numbers",
              "weight": 0
            },
            {
              "input": "the publication year",
              "weight": 0
            },
            {
              "input": "the pubyear column",
              "weight": 0
            },
            {
              "input": "the question",
              "weight": 0
            },
            {
              "input": "the raw pizza dataset",
              "weight": 0
            },
            {
              "input": "the raw unformatted data",
              "weight": 0
            },
            {
              "input": "the reader",
              "weight": 0
            },
            {
              "input": "the reason",
              "weight": 0
            },
            {
              "input": "the records",
              "weight": 0
            },
            {
              "input": "the reference",
              "weight": 0
            },
            {
              "input": "the relevant country activity",
              "weight": 0
            },
            {
              "input": "the relevant data points",
              "weight": 0
            },
            {
              "input": "the remainder",
              "weight": 0
            },
            {
              "input": "the results",
              "weight": 0
            },
            {
              "input": "the right",
              "weight": 0
            },
            {
              "input": "the rows",
              "weight": 0
            },
            {
              "input": "the rstudio website",
              "weight": 0
            },
            {
              "input": "the same data period",
              "weight": 0
            },
            {
              "input": "the same expression",
              "weight": 0
            },
            {
              "input": "the same folder",
              "weight": 0
            },
            {
              "input": "the same result",
              "weight": 0
            },
            {
              "input": "the same year",
              "weight": 0
            },
            {
              "input": "the separate exercise",
              "weight": 0
            },
            {
              "input": "the separator",
              "weight": 1
            },
            {
              "input": "the standard code",
              "weight": 0
            },
            {
              "input": "the standard way",
              "weight": 0
            },
            {
              "input": "the start",
              "weight": 0
            },
            {
              "input": "the steps",
              "weight": 0
            },
            {
              "input": "the structure",
              "weight": 0
            },
            {
              "input": "the subclass level",
              "weight": 0
            },
            {
              "input": "the system",
              "weight": 0
            },
            {
              "input": "the table",
              "weight": 0
            },
            {
              "input": "the tableau workbook",
              "weight": 0
            },
            {
              "input": "the technological aspects",
              "weight": 0
            },
            {
              "input": "the technologies",
              "weight": 0
            },
            {
              "input": "the text fields",
              "weight": 0
            },
            {
              "input": "the the code",
              "weight": 0
            },
            {
              "input": "the tick box",
              "weight": 0
            },
            {
              "input": "the title",
              "weight": 0
            },
            {
              "input": "the titles",
              "weight": 0
            },
            {
              "input": "the tools",
              "weight": 0
            },
            {
              "input": "the top result",
              "weight": 0
            },
            {
              "input": "the top right",
              "weight": 0
            },
            {
              "input": "the toy data",
              "weight": 0
            },
            {
              "input": "the underlying data",
              "weight": 0
            },
            {
              "input": "the upload button",
              "weight": 0
            },
            {
              "input": "the use",
              "weight": 0
            },
            {
              "input": "the value",
              "weight": 1
            },
            {
              "input": "the values",
              "weight": 0
            },
            {
              "input": "the very similar filter function",
              "weight": 0
            },
            {
              "input": "the view",
              "weight": 0
            },
            {
              "input": "the way",
              "weight": 0
            },
            {
              "input": "the whitespace",
              "weight": 0
            },
            {
              "input": "the whole pizza dataset",
              "weight": 0
            },
            {
              "input": "the wipo analytics",
              "weight": 0
            },
            {
              "input": "the wipo analytics github homepage",
              "weight": 0
            },
            {
              "input": "the wipo manual",
              "weight": 0
            },
            {
              "input": "the wipo manual on open source patent analytics",
              "weight": 0
            },
            {
              "input": "the word pizza",
              "weight": 0
            },
            {
              "input": "the year",
              "weight": 2
            },
            {
              "input": "the years",
              "weight": 0
            },
            {
              "input": "their blog",
              "weight": 0
            },
            {
              "input": "their names",
              "weight": 0
            },
            {
              "input": "their numeric position",
              "weight": 0
            },
            {
              "input": "their reports",
              "weight": 0
            },
            {
              "input": "their type",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "themselves",
              "weight": 0
            },
            {
              "input": "then a quote",
              "weight": 0
            },
            {
              "input": "these graphics",
              "weight": 0
            },
            {
              "input": "these services",
              "weight": 0
            },
            {
              "input": "these topics",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "third",
              "weight": 0
            },
            {
              "input": "this article",
              "weight": 1
            },
            {
              "input": "this case",
              "weight": 5
            },
            {
              "input": "this change",
              "weight": 0
            },
            {
              "input": "this chapter",
              "weight": 0
            },
            {
              "input": "this code",
              "weight": 2
            },
            {
              "input": "this data",
              "weight": 0
            },
            {
              "input": "this dataset",
              "weight": 0
            },
            {
              "input": "this field",
              "weight": 0
            },
            {
              "input": "this file",
              "weight": 0
            },
            {
              "input": "this filter",
              "weight": 0
            },
            {
              "input": "this intriguing result",
              "weight": 0
            },
            {
              "input": "this introduction",
              "weight": 0
            },
            {
              "input": "this list",
              "weight": 0
            },
            {
              "input": "this message",
              "weight": 0
            },
            {
              "input": "this page",
              "weight": 0
            },
            {
              "input": "this popup",
              "weight": 0
            },
            {
              "input": "this problem",
              "weight": 1
            },
            {
              "input": "this recent article",
              "weight": 0
            },
            {
              "input": "this type",
              "weight": 0
            },
            {
              "input": "this value",
              "weight": 0
            },
            {
              "input": "this way",
              "weight": 0
            },
            {
              "input": "thomas",
              "weight": 0
            },
            {
              "input": "thomas people",
              "weight": 0
            },
            {
              "input": "thomas people",
              "weight": 0
            },
            {
              "input": "thomas people",
              "weight": 0
            },
            {
              "input": "thompson sampling",
              "weight": 0
            },
            {
              "input": "thousands",
              "weight": 0
            },
            {
              "input": "three",
              "weight": 0
            },
            {
              "input": "three functions",
              "weight": 0
            },
            {
              "input": "three ipc tables",
              "weight": 0
            },
            {
              "input": "tibble",
              "weight": 0
            },
            {
              "input": "tidy",
              "weight": 0
            },
            {
              "input": "tidy data",
              "weight": 0
            },
            {
              "input": "tidy modeling",
              "weight": 0
            },
            {
              "input": "tidy modeling with r",
              "weight": 0
            },
            {
              "input": "tidy patent data",
              "weight": 0
            },
            {
              "input": "tidying",
              "weight": 0
            },
            {
              "input": "tidying data",
              "weight": 0
            },
            {
              "input": "tidyr",
              "weight": 0
            },
            {
              "input": "time",
              "weight": 0
            },
            {
              "input": "time series data mining questions",
              "weight": 0
            },
            {
              "input": "title",
              "weight": 0
            },
            {
              "input": "titles",
              "weight": 0
            },
            {
              "input": "tool",
              "weight": 0
            },
            {
              "input": "tools",
              "weight": 0
            },
            {
              "input": "top",
              "weight": 0
            },
            {
              "input": "to… lazarillo",
              "weight": 0
            },
            {
              "input": "trend",
              "weight": 0
            },
            {
              "input": "trends",
              "weight": 0
            },
            {
              "input": "true",
              "weight": 0
            },
            {
              "input": "true make the tool",
              "weight": 1
            },
            {
              "input": "tutorials",
              "weight": 0
            },
            {
              "input": "two",
              "weight": 3
            },
            {
              "input": "two basic data formats",
              "weight": 0
            },
            {
              "input": "two basic datum format",
              "weight": 14
            },
            {
              "input": "two basic objects",
              "weight": 0
            },
            {
              "input": "two basic ways",
              "weight": 0
            },
            {
              "input": "two columns",
              "weight": 0
            },
            {
              "input": "two sections",
              "weight": 0
            },
            {
              "input": "two tables",
              "weight": 0
            },
            {
              "input": "two things",
              "weight": 0
            },
            {
              "input": "two year",
              "weight": 0
            },
            {
              "input": "two years",
              "weight": 0
            },
            {
              "input": "type",
              "weight": 0
            },
            {
              "input": "types",
              "weight": 0
            },
            {
              "input": "understand",
              "weight": 0
            },
            {
              "input": "unique",
              "weight": 0
            },
            {
              "input": "urban",
              "weight": 0
            },
            {
              "input": "urban scott",
              "weight": 0
            },
            {
              "input": "use",
              "weight": 1
            },
            {
              "input": "use just a few",
              "weight": 13
            },
            {
              "input": "use the applicant dataset",
              "weight": 8
            },
            {
              "input": "useful",
              "weight": 0
            },
            {
              "input": "value",
              "weight": 0
            },
            {
              "input": "value column",
              "weight": 0
            },
            {
              "input": "value for the top ten",
              "weight": 1
            },
            {
              "input": "values",
              "weight": 0
            },
            {
              "input": "vantagepoint software",
              "weight": 0
            },
            {
              "input": "variable",
              "weight": 0
            },
            {
              "input": "variables",
              "weight": 0
            },
            {
              "input": "variations",
              "weight": 0
            },
            {
              "input": "various fields",
              "weight": 0
            },
            {
              "input": "varying prices",
              "weight": 0
            },
            {
              "input": "vector",
              "weight": 0
            },
            {
              "input": "vector of applicant name",
              "weight": 7
            },
            {
              "input": "vectors",
              "weight": 0
            },
            {
              "input": "vengroff",
              "weight": 0
            },
            {
              "input": "ventimeglia jamie",
              "weight": 0
            },
            {
              "input": "verizon",
              "weight": 0
            },
            {
              "input": "very handy functions",
              "weight": 0
            },
            {
              "input": "very useful tools",
              "weight": 0
            },
            {
              "input": "view",
              "weight": 0
            },
            {
              "input": "viewing data",
              "weight": 0
            },
            {
              "input": "vishoot lisa",
              "weight": 0
            },
            {
              "input": "visualisation",
              "weight": 1
            },
            {
              "input": "visualisation software",
              "weight": 0
            },
            {
              "input": "visualise",
              "weight": 0
            },
            {
              "input": "want",
              "weight": 0
            },
            {
              "input": "want to generate three",
              "weight": 1
            },
            {
              "input": "want to select aspect",
              "weight": 4
            },
            {
              "input": "waste management",
              "weight": 0
            },
            {
              "input": "way",
              "weight": 0
            },
            {
              "input": "way that be easy",
              "weight": 0
            },
            {
              "input": "ways",
              "weight": 0
            },
            {
              "input": "ways to subset a data frame",
              "weight": 0
            },
            {
              "input": "weber",
              "weight": 0
            },
            {
              "input": "weber jean l",
              "weight": 0
            },
            {
              "input": "webinar series",
              "weight": 0
            },
            {
              "input": "what type",
              "weight": 0
            },
            {
              "input": "which field",
              "weight": 0
            },
            {
              "input": "white space",
              "weight": 0
            },
            {
              "input": "whose dream",
              "weight": 0
            },
            {
              "input": "wickham",
              "weight": 0
            },
            {
              "input": "wide",
              "weight": 0
            },
            {
              "input": "wide format",
              "weight": 0
            },
            {
              "input": "windows systems",
              "weight": 0
            },
            {
              "input": "wipo",
              "weight": 0
            },
            {
              "input": "wipo analytics github homepage",
              "weight": 2
            },
            {
              "input": "wipo patent landscape reports",
              "weight": 0
            },
            {
              "input": "wipo patentscope",
              "weight": 0
            },
            {
              "input": "wireless communication networks",
              "weight": 0
            },
            {
              "input": "wlodz",
              "weight": 0
            },
            {
              "input": "wlodzim",
              "weight": 0
            },
            {
              "input": "wlodzimie",
              "weight": 0
            },
            {
              "input": "word",
              "weight": 0
            },
            {
              "input": "word cloud",
              "weight": 0
            },
            {
              "input": "word clouds",
              "weight": 0
            },
            {
              "input": "words",
              "weight": 0
            },
            {
              "input": "work",
              "weight": 0
            },
            {
              "input": "write",
              "weight": 0
            },
            {
              "input": "yahoo",
              "weight": 0
            },
            {
              "input": "year",
              "weight": 2
            },
            {
              "input": "year form the row",
              "weight": 5
            },
            {
              "input": "years",
              "weight": 0
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your blog",
              "weight": 0
            },
            {
              "input": "your content",
              "weight": 0
            },
            {
              "input": "your data",
              "weight": 0
            },
            {
              "input": "your help",
              "weight": 0
            },
            {
              "input": "your masterpiece",
              "weight": 0
            },
            {
              "input": "your needs",
              "weight": 0
            },
            {
              "input": "your operating system",
              "weight": 0
            },
            {
              "input": "your original data",
              "weight": 0
            },
            {
              "input": "“google inc",
              "weight": 0
            },
            {
              "input": "“pubyear",
              "weight": 0
            },
            {
              "input": "“that” logic",
              "weight": 0
            },
            {
              "input": "… people",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://www.r-bloggers.com/creating-an-infographic-with-infogram/",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.021888518211951258,
        "_index": "cache_index",
        "_id": "cacheid_3f38d7d5ce091bb0ba4197e513eea3cf",
        "_type": "_doc",
        "highlight": {
          "content": [
            "In the remainder of the chapter we will want to create some additional\n<b>datasets</b> from our pizza <b>dataset</b>",
            "period for the `pizza_total` <b>dataset</b>.",
            "Our new <b>dataset</b> split on applicant\nnames contains 12,729 rows.",
            "A general IPC table for the pizza <b>dataset</b>\n  2. A general IPC table for the Google <b>dataset</b>\n  3.",
            "The reason we have not\nused the applicants <b>dataset</b> is because that <b>dataset</b> will duplicate the IPC\nfield"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.004509080027224966,
        "see_also": [
          {
            "doc_id": "cacheid_dad2197ba06f4a4b8fba7aa8f8d8ec52",
            "source_doc_id": "https://towardsdatascience.com/where-to-begin-your-data-science-project-c22b1749ec1e?source=user_profile---------0-----------------------&gi=dee3f7f05b91",
            "title": "Where to begin your Data Science project | by Apurva Puri | Jul, 2020 |\nTowards Data Science\n\n"
          },
          {
            "doc_id": "cacheid_6368689ce10f1620a67409b0b15aa230",
            "source_doc_id": "https://cs.stackexchange.com/questions/70395/what-is-the-effect-of-hidden-layer-size",
            "title": "machine learning - What is the Effect of Hidden Layer Size? - Computer Science\nStack Exchange\n\n"
          },
          {
            "doc_id": "cacheid_a329ab6482da63c647ea2b0a074ed623",
            "source_doc_id": "entity:user/1006:en",
            "title": "sara rijo"
          },
          {
            "doc_id": "cacheid_bb15bc6d734d34b16cd4099fbd6d6cfa",
            "source_doc_id": "entity:user/2057:en",
            "title": "kostas tsagkaris"
          },
          {
            "doc_id": "cacheid_7221479d16324bd051e5cddbf6660119",
            "source_doc_id": "https://towardsdatascience.com/does-the-data-scientist-have-a-theory-of-mind-87803e8dab9a?source=---------2-----------------------&gi=a1ef9d2630bf",
            "title": "Does the Data Scientist Have a Theory of Mind? | by Art Conroy, PhD | Jun,\n2020 | Towards Data Science\n\n"
          }
        ],
        "semantic_content": " . pizza _ total to the console we will see that the data now covers the period 1990 - 2012 .  When using  ` filter (  )  `  on values in this way it is important to remember to apply this filter to any subsequent operations on the data  ( such as applicants )  so that it matches",
        "short_answer": [
          {
            "score": 0.2162274867296219,
            "start": 3,
            "end": 18,
            "answer": "pizza  _  total"
          }
        ]
      },
      {
        "_source": {
          "title": "COVID19: Question-Answering Model using BioSentVec Embedding - Data Science\nCentral\n\n",
          "lemma_title": "covid19 question-answere model use BioSentVec Embedding Data Science Central",
          "content": "Search\n\n  * Sign Up\n  * Sign In\n\n \n\n  * Home\n  * Members ↓\n\n    * Top Content\n    * Archives\n\n  * Tech Topics ↓\n\n    * Analytics & Data Science\n    * Artificial Intelligence\n    * Machine Learning\n    * Code\n    * DevOps\n    * Data Security\n    * Enterprise Data\n    * Graphs & Modeling\n    * NLP & Chatbots\n    * User Experience\n    * Virtual Reality & Gaming\n\n  * Business Topics ↓\n\n    * AI Marketing\n    * CxO Strategy\n    * Process Automation\n    * Digital Workplace\n    * Drones, Robots & IoT\n    * Social Media AI\n    * Future Proof\n\n  * By Sector ↓\n\n    * Agriculture & Food\n    * Education\n    * Energy\n    * Finance & Insurance\n    * Health Care\n    * Government & Legal\n    * Logistics\n    * News & Entertainment\n    * Science\n    * Space\n\n  * Media ↓\n\n    * DSC Blogs\n    * Podcasts\n    * Webinars\n    * Newsletters\n\n  * Write For Us\n  * Education Spotlight\n  * Sponsored Communities\n\n    * Data Visualization\n    * Analytic Bridge\n    * Hadoop 360\n    * Big Data News\n\n  * Search\n  * Contact\n\nSubscribe to DSC Newsletter\n\n.\n\n  * All Blog Posts\n  * My Blog\n  * Add\n\n  COVID19: Question-Answering Model using BioSentVec Embedding\n\n  * Posted by Ramesh on April 19, 2020 at 8:30am\n  * View Blog\n\n  \n\n Introduction \n\nAs we see COVID19 affected 1.5M people globally and 100k deaths, the worldwide\nAI research community are trying help medical community whatever the way we\ncould. Many of medical questions are leads to research papers for answers.\nThese questions are suitable for text mining, and developing text mining tools\nto provide insights on these questions.\n\nIn this blog, I want to share how you can use BERT based embeddings pre-\ntrained model can be used to build a text-based Question and Answering tool\nfor fining answers related to Coronavirus from COVID19 research papers\nrepository.\n\nWhen I was with IBM, I involved a similar solution to IBM Risk Insights, which\nsearch for supply chain risks from the news articles, tweets, and weather\ndata. Based on the base idea from the Risk Insights project and Biology\nknowledge domain for embeddings, I developed this model. With this model,\nusers can search for research papers to find out and outputs related articles\nand which paper, under which section the user could find answers for the input\nquestion. Also, it displays the related paragraphs as output. It returns top\narticle with highlighted answer sentences from the articles. My code is also\nuploaded to my Github\n\n  \n\n Data \n\nIn response to the COVID-19 pandemic, the White House and a coalition of\nleading research groups have prepared the COVID-19 Open Research Dataset\n(CORD-19). CORD-19 is a resource of over 52,000 scholarly articles, including\nover 41,000 with full text, about COVID-19, SARS-CoV-2, and related\ncoronaviruses. This dataset is publicly available in Kaggle’s COVID-19 Open\nResearch Dataset Challenge (CORD-19). I used only articles in the JSON format\nfor this model. The dataset has 7865 articles in JSON format which contains\n64,000 unique sections and 1.1M sentences. Also, it has articles metadata such\nas data published, authors, title, and abstract.\n\n  \n\n Sentence Embedding \n\nThis solution primary for the medical domain so I used BioSentVec pre-trained\nmodel for embedding. BioSentVec created biomedical word and sentence\nembeddings using PubMed and the clinical notes from MIMIC-III Clinical\nDatabase. Both PubMed and MIMIC-III texts were split and tokenized using NLTK.\nWe also lowercased all the words. More details and a pre-trained model can use\naccessed here.\n\n  \n\n Architecture \n\nThis solution is a type of Question Answering model. It is a retrieval-based\nQA model using embeddings.  The basic idea of this solution is comparing the\nquestion string with the sentence corpus, and results in the top score\nsentences as an answer. I create a vector representation of each sentence\nusing a pre-trained _BioSentVec_ embedding model and _KNN_ to find the answer\nsentences.\n\n Preprocess \n\nBelow are the steps I took to preprocess the data. Again, you can access full\ncode in my GitHub.\n\n● Read JSON files from dataset\n\n● Parse JSON files\n\n● Remove hyperlinks, references\n\n● Extract section details and split article by sentences using NLTK’s\n_sent_tokenize_ method.\n\n● Generate pandas data frame for model\n\n  \n\n Embedding sentences \n\nLoading the BioSentVec pretrained model\n\nmodel_path = 'BioSentVec_PubMed_MIMICIII-bigram_d700.bin'\n\nmodel = sent2vec.Sent2vecModel()\n\ntry:\n\nmodel.load_model(model_path)\n\nexcept Exception as e:\n\nprint(e)\n\nprint('model successfully loaded')\n\nVectorize the sentence corpus with BioSentVec model\n\nembs = model.embed_sentences(convid_sent_df['sentence'])\n\n  \n\n KNN and Ranking \n\nThe k-Nearest Neighbors algorithm (KNN)t is a very simple technique. First, I\nloaded entire vectorized sentences into the model as training. When I need to\nfind the answer, we need to send a vectorized question string as input to the\nmodel and the knn model outputs the most similar records from the training\nsentence corpus with the score. From these neighbors, a summarized answer is\nmade. A similarity between records can be measured in many different ways. I\nused default here.\n\nfrom sklearn.neighbors import NearestNeighbors\n\nnbrs = NearestNeighbors(n_neighbors=2, algorithm='ball_tree').fit(embs)\n\n  \n\n Test the Model \n\nUsing trained kneighbors model passing the question. As “ What is the physical\nscience of the coronavirus'\n\nemb = model.embed_sentence('Physical science of the coronavirus')\n\ndistances, indices = nbrs.kneighbors(emb)\n\n  \n\n Output \n\n  \n\n Conclusion \n\nUsing BioSentVec embedding and KNN algorithms is not the only solution, here\nare few alternative approaches.\n\n● We can develop a custom model based on predefined keyword (fuzzy keywords)\ndomain dictionary and redefined rules using regular expression for building a\nrule-based semantic search tool. This kind of model works very well with a\nnarrow knowledge set and can be implemented quickly.\n\n● We can develop a quick Question Answering model using BERT based pre-trained\nSentence Transformer models.\n\n● And many more options\n\nI am planning to try a similar question answering model with twitter streaming\ndata.\n\n_Final Note: I am not a heather professional to comment on the output provided\nby the model and this article purpose to illustrate the possible solution._\n\n  \n\n References: \n\n● This solution primarily based on the BioSentVec pre-trained morel big thanks\nfor the developers and the original BERT model developed.\n\n● Dataset downloaded from Kaggle.com. https://www.kaggle.com/allen-institute-\nfor-ai/CORD-19-research-challenge\n\nViews: 1205\n\nTags: BERT, BioSentVec, covid19\n\nLike\n\n0 members like this\n\nShare Tweet Facebook\n\n  * < Previous Post\n  * Next Post >\n\nComment\n\n    You need to be a member of Data Science Central to add comments!\n\nJoin Data Science Central\n\nComment by Lance Norskog on April 19, 2020 at 4:56pm\n\n    \n\nNice work! This is an impressive use of advanced off-the-shelf tools.\n\nLance\n\nRSS\n\nWelcome to  \nData Science Central\n\n Sign Up   \nor Sign In\n\n   SEE ALSO\n\n  * Free machine learning course: Using ML algorithms, practices, and p...\n  * What are some of the disadvantages of microservices?\n  * Alation 2021.1 data catalog improves data intelligence\n  * Nvidia acquisition of Arm faces industry, regulatory hurdles\n  * Nvidia opens paid, instructor-led AI workshops to the public\n  * CTO on the need for AI ethics and diversity\n  * 8 benefits of a warehouse management system\n  * Supplier segmentation lessons in the wake of COVID-19\n  * 5 essential dos and don'ts of IoT implementations\n  * Digital acceleration opens opportunities, widens tech gap\n  * mob programming\n\n© 2021   TechTarget, Inc.   Powered by\n\nBadges  |  Report an Issue  |  Privacy Policy  |  Terms of Service\n\n  \n\n     Hello, you need to enable JavaScript to use Data Science Central. \n\nPlease check your browser settings or contact your system administrator.\n\n* * *\n\n Most Popular Content on DSC \n\nTo not miss this type of content in the future, subscribe to our newsletter.\n\n  * Book: Applied Stochastic Processes\n  * Long-range Correlations in Time Series: Modeling, Testing, Case Study\n  * How to Automatically Determine the Number of Clusters in your Data\n  * New Machine Learning Cheat Sheet | Old one\n  * Confidence Intervals Without Pain - With Resampling\n  * Advanced Machine Learning with Basic Excel\n  * New Perspectives on Statistical Distributions and Deep Learning\n  * Fascinating New Results in the Theory of Randomness\n  * Fast Combinatorial Feature Selection\n\n Other popular resources \n\n  * Comprehensive Repository of Data Science and ML Resources\n  * Statistical Concepts Explained in Simple English\n  * Machine Learning Concepts Explained in One Picture\n  * 100 Data Science Interview Questions and Answers\n  * Cheat Sheets | Curated Articles | Search | Jobs | Courses\n  * Post a Blog | Forum Questions | Books | Salaries | News\n\n Archives:  2008-2014 | 2015-2016 | 2017-2019 | Book 1 | Book 2 | More\n\n Follow us  : Twitter | Facebook\n\n* * *\n\n Most popular articles \n\n  * Free Book and Resources for DSC Members\n  * New Perspectives on Statistical Distributions and Deep Learning\n  * Time series, Growth Modeling and Data Science Wizardy\n  * Statistical Concepts Explained in Simple English\n  * Machine Learning Concepts Explained in One Picture\n  * Comprehensive Repository of Data Science and ML Resources\n  * Advanced Machine Learning with Basic Excel\n  * Difference between ML, Data Science, AI, Deep Learning, and Statistics\n  * Selected Business Analytics, Data Science and ML articles\n  * How to Automatically Determine the Number of Clusters in your Data\n  * Fascinating New Results in the Theory of Randomness\n  * Hire a Data Scientist | Search DSC | Find a Job\n  * Post a Blog | Forum Questions\n\n",
          "lemma_content": "search sign sign home member Top content archive tech topic Analytics Data Science Artificial Intelligence Machine Learning code devops Data Security enterprise datum Graphs Modeling NLP Chatbots user experience virtual Reality gaming business topic AI marketing CxO Strategy process automation Digital Workplace drone Robots IoT Social Media AI future proof sector ↓ Agriculture Food education energy Finance Insurance Health Care Government legal logistic News Entertainment science space media ↓ DSC Blogs podcast webinar newsletter write education spotlight sponsor community data visualization Analytic Bridge Hadoop 360 Big Data News search contact subscribe DSC Newsletter blog post blog add question-answere model use BioSentVec Embedding post Ramesh April 19 2020 8:30am View Blog introduction see COVID19 affect 1.5 m people 100k death worldwide AI research community try help medical community way could many medical question lead research paper answer question suitable text mining develop text mining tool provide insight question blog want share can use BERT base embedding train model can use build text-based question answer tool fine answer relate Coronavirus COVID19 research paper repository IBM involve similar solution IBM Risk Insights search supply chain risk news article tweet weather datum base base idea Risk Insights project biology knowledge domain embedding develop model model user can search research paper find output related article paper section user could find answer input question display related paragraph output return top article highlight answer sentence article code upload Github Data response COVID-19 pandemic White House coalition lead research group prepare COVID-19 Open Research Dataset CORD-19 CORD-19 resource 52 000 scholarly article include 41 000 full text COVID-19 sars-cov-2 related coronaviruse dataset available Kaggle COVID-19 Open Research Dataset Challenge CORD-19 use article json format model dataset 7865 article JSON format contain 64 000 unique section 1.1 m sentence article metadata such datum publish author title abstract Sentence embedding solution primary medical domain use BioSentVec pre-trained model embedding BioSentVec create biomedical word sentence embedding use PubMed clinical note MIMIC-III Clinical Database PubMed MIMIC-III text split tokenize use NLTK lowercase word More detail pre-trained model can use access Architecture solution type Question Answering model retrieval-based QA model use embedding basic idea solution compare question stre sentence corpus result top score sentence answer create vector representation sentence use pre-trained _ BioSentVec _ embedding model _ KNN _ find answer sentence preprocess step take preprocess datum can access full code GitHub read json file dataset parse json file remove hyperlink reference ● extract section detail split article sentence use NLTK _ sent_tokenize _ method generate pandas data frame model embed sentence load BioSentVec pretraine model model_path biosentvec_pubmed_mimiciii-bigram_d700.bin model sent2vec sent2vecmodel try model.load_model model_path exception e print e print 'model load Vectorize sentence corpus BioSentVec model emb model.embed_sentence convid_sent_df['sentence KNN Ranking k-Nearest Neighbors algorithm KNN t simple technique load entire vectorized sentence model training need find answer need send vectorized question string input model knn model output similar record training sentence corpus score neighbor summarized answer make similarity record can measure many different way use default sklearn.neighbor import NearestNeighbors nbr NearestNeighbors n_neighbors=2 algorithm='ball_tree' emb Test model use train kneighbor model pass question physical science coronavirus emb model.embed_sentence 'physical science coronavirus distance index nbrs.kneighbor emb Output conclusion use BioSentVec embed KNN algorithm only solution few alternative approach can develop custom model base predefine keyword fuzzy keyword domain dictionary redefine rule use regular expression build rule-based semantic search tool kind model work narrow knowledge set can implement can develop quick question answering model use BERT base pre-trained Sentence Transformer model many more option plan try similar question answer model twitter streaming datum _ Final note heather professional comment output provide model article purpose illustrate possible solution _ reference solution base BioSentVec pre-trained morel big thank developer original BERT model develop ● dataset download Kaggle.com https://www.kaggle.com for-ai cord-19-research-challenge view 1205 tag BERT BioSentVec 0 member share Tweet Facebook Previous Post next post comment need member Data Science Central add comment Join Data Science Central comment Lance Norskog April 19 2020 4:56pm nice work impressive use advanced off-the-shelf tool Lance RSS welcome Data Science Central sign sign see Free machine learning course use ML algorithm practice p disadvantage microservice alation 2021.1 datum catalog improve data intelligence Nvidia acquisition Arm face industry regulatory hurdle Nvidia open pay instructor-le AI workshop public CTO need AI ethic diversity 8 benefit warehouse management system supplier segmentation lesson wake COVID-19 5 essential do don't IoT implementation Digital acceleration open opportunity widen tech gap mob programming © 2021 TechTarget Inc. power badge report issue Privacy Policy term service need enable JavaScript use Data Science Central check browser setting contact system administrator Most Popular Content DSC miss type content future subscribe newsletter book Applied stochastic process long-range correlation Time Series Modeling Testing Case study determine Number Clusters datum New Machine Learning Cheat Sheet old one confidence interval pain resampling Advanced Machine Learning Basic Excel New Perspectives Statistical Distributions Deep Learning fascinating new result theory randomness Fast Combinatorial feature selection other popular resource comprehensive Repository Data Science ML Resources Statistical Concepts explain Simple English Machine Learning Concepts explain one picture 100 datum Science Interview Questions answer cheat sheet Curated Articles Search Jobs course post Blog Forum Questions Books Salaries News Archives 2008-2014 2015-2016 2017-2019 Book 1 Book 2 More follow twitter Facebook popular article Free Book Resources DSC Members New Perspectives Statistical Distributions Deep Learning time series Growth Modeling Data Science Wizardy Statistical Concepts explain Simple English Machine Learning Concepts explain one picture comprehensive repository Data Science ML Resources Advanced Machine Learning Basic Excel difference ML Data Science AI Deep Learning statistic Selected Business Analytics Data Science ML article determine Number Clusters datum fascinating new result theory randomness hire Data Scientist Search DSC find Job post Blog Forum Questions",
          "kg_generic": [
            {
              "subject": "BioSentVec Embedding - Data Science Central",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "model",
              "property": "use",
              "value": "BioSentVec Embedding - Data Science Central",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Artificial Intelligence",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data Security",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Graphs & Modeling     ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NLP & Chatbots",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Digital Workplace",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Social Media AI",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Education",
              "property": "rel:instanceof",
              "value": "industry"
            },
            {
              "subject": "Energy",
              "property": "rel:instanceof",
              "value": "industry"
            },
            {
              "subject": "Entertainment",
              "property": "rel:instanceof",
              "value": "industry"
            },
            {
              "subject": "DSC Blogs",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Education",
              "property": "rel:instanceof",
              "value": "industry"
            },
            {
              "subject": "Communities",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Analytic Bridge",
              "property": "rel:instanceof",
              "value": "facility"
            },
            {
              "subject": "Data News",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DSC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "BioSentVec Embedding",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Ramesh",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "April 19, 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "8:30am",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "1.5M",
              "property": "rel:instanceof",
              "value": "quantity"
            },
            {
              "subject": "BERT",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Coronavirus",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IBM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "IBM",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "White House",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "52",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Kaggle",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "JSON",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "JSON",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "BioSentVec",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "PubMed",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "MIMIC-III Clinical Database",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "PubMed",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NLTK",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "QA",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "JSON",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "JSON",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NLTK",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Exception",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "k-Nearest Neighbors",
              "property": "rel:instanceof",
              "value": "algorithms"
            },
            {
              "subject": "algorithm",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "knn",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "NearestNeighbors",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Test",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Model",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "KNN",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "BERT",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "BERT",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "https://www.kaggle.com",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Facebook",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Next Post",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data Science Central",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Join Data Science Central  ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Lance Norskog",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "April 19, 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Nvidia",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Arm",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Nvidia",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "CTO",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dos",
              "property": "rel:instanceof",
              "value": "os"
            },
            {
              "subject": "Digital",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "gap",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "© 2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "TechTarget,",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "JavaScript",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Popular",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DSC",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Deep Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "ML Resources",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "2008-2014",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "Facebook",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "New Perspectives on Statistical Distributions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Deep Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Growth Modeling and Data Science Wizardy   ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Deep Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data Science",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "model",
              "property": "use",
              "value": "BioSentVec Embedding",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "see",
              "value": "COVID19",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "COVID19",
              "property": "affect",
              "value": "1.5 m people",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "worldwide AI research community",
              "property": "try help",
              "value": "medical community",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can use",
              "value": "embedding",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "BERT",
              "property": "base",
              "value": "embedding",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "embedding",
              "property": "pre- train",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "answer",
              "property": "relate to",
              "value": "Coronavirus",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "involve",
              "value": "similar solution",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "develop",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "user",
              "property": "can search for",
              "value": "research paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "user",
              "property": "could find",
              "value": "answer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "display",
              "value": "related paragraph",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "return",
              "value": "top article",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "White House",
              "property": "prepare",
              "value": "COVID-19 Open Research Dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "article",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "BioSentVec pre-trained model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "model for embedding",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "BioSentVec",
              "property": "create",
              "value": "biomedical word",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "sentence embedding",
              "property": "use",
              "value": "PubMed",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "also lowercase",
              "value": "the word",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "retrieval-based QA model",
              "property": "use",
              "value": "embedding",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "basic idea",
              "property": "compare",
              "value": "question",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "question",
              "property": "stre with",
              "value": "the sentence corpus",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "create",
              "value": "vector representation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "each sentence",
              "property": "use",
              "value": "pre-trained _ BioSentVec _ embedding model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can access",
              "value": "full code",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "article by sentence",
              "property": "use",
              "value": "NLTK ’s _ sent_tokenize _ method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "BioSentVec",
              "property": "pretraine",
              "value": "model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "load",
              "value": "entire vectorized sentence",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "knn model",
              "property": "output",
              "value": "most similar record",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "similarity between record",
              "property": "measure in",
              "value": "many different way",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "use",
              "value": "default",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "kneighbor model",
              "property": "pass",
              "value": "question",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can develop",
              "value": "custom model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "custom model",
              "property": "base on",
              "value": "keyword",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "rule",
              "property": "use",
              "value": "regular expression",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can develop",
              "value": "quick question answering model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "quick question answering model",
              "property": "use",
              "value": "BERT",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "BERT",
              "property": "base",
              "value": "pre-trained Sentence Transformer model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "question",
              "property": "answer",
              "value": "model with twitter streaming datum",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "the output",
              "property": "provide by",
              "value": "the model",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "dataset",
              "property": "download from",
              "value": "Kaggle.com",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "alation 2021.1 datum catalog",
              "property": "improve",
              "value": "data intelligence",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Nvidia acquisition",
              "property": "face",
              "value": "industry",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Nvidia",
              "property": "open pay",
              "value": "workshop",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Nvidia",
              "property": "open pay",
              "value": "the public",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Nvidia",
              "property": "open pay",
              "value": "8 benefit",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Digital acceleration",
              "property": "open",
              "value": "opportunity",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Statistical Concepts",
              "property": "explain in",
              "value": "Simple English",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Machine Learning Concepts",
              "property": "explain in",
              "value": "one picture",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Statistical Concepts",
              "property": "explain in",
              "value": "Simple English",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Machine Learning Concepts",
              "property": "explain in",
              "value": "one picture",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "neuromorphic computing",
                "internet of things",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.3120344951748848,
                0.247125294059515,
                0.11684209015220404,
                0.18154304008930922,
                0.027567464858293533,
                0.04481786396354437,
                0.03636562917381525,
                0.033704149071127176
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4937220346182585,
                0.19782134145498276,
                0.14141082018613815,
                0.07669052388519049,
                0.03169021336361766,
                0.011831982061266899,
                0.02483088383451104,
                0.022002124693244696
              ]
            },
            {
              "labels": [
                "internet of things",
                "natural language processing",
                "robotic",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5949008464813232,
                0.14166366693098098,
                0.13180164620280266,
                0.06361841899342835,
                0.024312707595527172,
                0.03475972870364785,
                0.003019070252776146,
                0.0059239204274490476
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "internet of things",
                "computer vision"
              ],
              "scores": [
                0.3704514242708683,
                0.19184429105371237,
                0.16852018982172012,
                0.10713897459208965,
                0.060751864686608315,
                0.02491828240454197,
                0.05133848078548908,
                0.025036518927663565
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.294444864615798,
                0.2305489992722869,
                0.22577280923724174,
                0.12867890764027834,
                0.050933992955833673,
                0.03600847069174051,
                0.012507063336670399,
                0.021104776300489902
              ]
            },
            {
              "labels": [
                "internet of things",
                "machine learning",
                "deep learning",
                "natural language processing",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.18841614667326212,
                0.23823102191090584,
                0.1619758545421064,
                0.23881696350872517,
                0.0581345958635211,
                0.06379278656095266,
                0.033003092743456364,
                0.01762961968779564
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.37064218893647194,
                0.3128998577594757,
                0.18337411247193813,
                0.07938771788030863,
                0.016053261933848262,
                0.010051420889794827,
                0.014809228479862213,
                0.012782302452251315
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.4847865905612707,
                0.2612916985526681,
                0.11261262139305472,
                0.04630570253357291,
                0.053918609861284494,
                0.011049361899495125,
                0.018158783903345466,
                0.011876681819558144
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.40086415130645037,
                0.3116201916709542,
                0.1545817218720913,
                0.03541876282542944,
                0.03078277630265802,
                0.04061395023018122,
                0.017646922497078776,
                0.0084714749827981
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "natural language processing",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.6588102271780372,
                0.15277742291800678,
                0.05861743679270148,
                0.05184786580502987,
                0.03436323185451329,
                0.017989029176533222,
                0.0104123679921031,
                0.01518250908702612
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "internet of things",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.5656295483931899,
                0.13014165684580803,
                0.12754978984594345,
                0.06846003420650959,
                0.018573053181171417,
                0.03990991786122322,
                0.02636696957051754,
                0.023369014728814363
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "internet of things",
                "reinforcement learning",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.45673259533941746,
                0.2542439731769264,
                0.22347432421520352,
                0.017080081393942237,
                0.025645955000072718,
                0.004966966807842255,
                0.009512376505881548,
                0.008343784138560295
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.42691431753337383,
                0.22732477076351643,
                0.1604928933084011,
                0.04575046617537737,
                0.06349287647753954,
                0.033592820167541504,
                0.030399916227906942,
                0.012031993828713894
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision",
                "internet of things"
              ],
              "scores": [
                0.6868454730138183,
                0.11668123537674546,
                0.07329389872029424,
                0.05271538905799389,
                0.02513172198086977,
                0.008243306539952755,
                0.020742818247526884,
                0.016346088144928217
              ]
            },
            {
              "labels": [
                "internet of things",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "machine learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.24490560591220856,
                0.17660944443196058,
                0.15498325694352388,
                0.15785916103050113,
                0.16024671122431755,
                0.06475088186562061,
                0.010796145536005497,
                0.029848730191588402
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.5609192699193954,
                0.14120037108659744,
                0.10910463565960526,
                0.07689567096531391,
                0.054705392103642225,
                0.024499202147126198,
                0.011548123322427273,
                0.021127257496118546
              ]
            },
            {
              "labels": [
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "computer vision",
                "natural language processing",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.6607362944632769,
                0.11081644613295794,
                0.08819872583262622,
                0.03432766580954194,
                0.05627884715795517,
                0.030501918401569128,
                0.005976209882646799,
                0.01316382666118443
              ]
            },
            {
              "labels": [
                "machine learning",
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "computer vision",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.4383859857916832,
                0.24945053830742836,
                0.10144411120563745,
                0.08426844514906406,
                0.05678607430309057,
                0.03666369477286935,
                0.01384304091334343,
                0.01915812771767378
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.6562176235020161,
                0.09526895824819803,
                0.12645859131589532,
                0.0506774433888495,
                0.02691353065893054,
                0.01784810610115528,
                0.01942026987671852,
                0.007195475045591593
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.8592579960823059,
              "spans": [
                {
                  "approx_length": 89,
                  "score": 0.8592579960823059,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.6014748334884643,
              "spans": [
                {
                  "approx_length": 203,
                  "score": 0.995370090007782,
                  "spanid": 0
                },
                {
                  "approx_length": 233,
                  "score": 0.9066416621208191,
                  "spanid": 1
                },
                {
                  "approx_length": 239,
                  "score": 0.9695287942886353,
                  "spanid": 4
                },
                {
                  "approx_length": 323,
                  "score": 0.8484130501747131,
                  "spanid": 5
                },
                {
                  "approx_length": 330,
                  "score": 0.9589595794677734,
                  "spanid": 6
                },
                {
                  "approx_length": 304,
                  "score": 0.9728241562843323,
                  "spanid": 7
                },
                {
                  "approx_length": 336,
                  "score": 0.9935471415519714,
                  "spanid": 8
                },
                {
                  "approx_length": 293,
                  "score": 0.9917644262313843,
                  "spanid": 10
                },
                {
                  "approx_length": 330,
                  "score": 0.9800091981887817,
                  "spanid": 11
                },
                {
                  "approx_length": 314,
                  "score": 0.9941951036453247,
                  "spanid": 12
                },
                {
                  "approx_length": 314,
                  "score": 0.9921191930770874,
                  "spanid": 13
                },
                {
                  "approx_length": 320,
                  "score": 0.9976010918617249,
                  "spanid": 14
                },
                {
                  "approx_length": 278,
                  "score": 0.9972940683364868,
                  "spanid": 15
                },
                {
                  "approx_length": 267,
                  "score": 0.9951603412628174,
                  "spanid": 16
                },
                {
                  "approx_length": 314,
                  "score": 0.9836921691894531,
                  "spanid": 17
                },
                {
                  "approx_length": 289,
                  "score": 0.9905914664268494,
                  "spanid": 18
                },
                {
                  "approx_length": 302,
                  "score": 0.9946177005767822,
                  "spanid": 19
                },
                {
                  "approx_length": 323,
                  "score": 0.9953781366348267,
                  "spanid": 21
                },
                {
                  "approx_length": 351,
                  "score": 0.9791054725646973,
                  "spanid": 22
                },
                {
                  "approx_length": 255,
                  "score": 0.9934775829315186,
                  "spanid": 23
                },
                {
                  "approx_length": 277,
                  "score": 0.99224853515625,
                  "spanid": 27
                },
                {
                  "approx_length": 187,
                  "score": 0.5290802121162415,
                  "spanid": 31
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.3452848962375096,
              "spans": [
                {
                  "approx_length": 197,
                  "score": 0.8739334344863892,
                  "spanid": 2
                },
                {
                  "approx_length": 229,
                  "score": 0.5269032120704651,
                  "spanid": 3
                },
                {
                  "approx_length": 279,
                  "score": 0.9974365234375,
                  "spanid": 9
                },
                {
                  "approx_length": 340,
                  "score": 0.9546440839767456,
                  "spanid": 20
                },
                {
                  "approx_length": 288,
                  "score": 0.9992202520370483,
                  "spanid": 24
                },
                {
                  "approx_length": 276,
                  "score": 0.9748844504356384,
                  "spanid": 25
                },
                {
                  "approx_length": 285,
                  "score": 0.9710169434547424,
                  "spanid": 26
                },
                {
                  "approx_length": 292,
                  "score": 0.8850646615028381,
                  "spanid": 28
                },
                {
                  "approx_length": 318,
                  "score": 0.9993742108345032,
                  "spanid": 29
                },
                {
                  "approx_length": 317,
                  "score": 0.9583998322486877,
                  "spanid": 30
                },
                {
                  "approx_length": 310,
                  "score": 0.9885206818580627,
                  "spanid": 32
                },
                {
                  "approx_length": 306,
                  "score": 0.9985231161117554,
                  "spanid": 33
                },
                {
                  "approx_length": 179,
                  "score": 0.9570499658584595,
                  "spanid": 34
                }
              ]
            }
          ],
          "summary": [
            " COVID19:  Question - Answering Model using BioSentVec Emb",
            " Search    Sign Up   *  Sign In   Use the Daily Discussion to help members understand today's featured topics . The Daily Discussion is a weekly, offbeat look at all the latest DSC",
            " COVID19 affected 1 . 5M people globally and 100k deaths . Many of medical questions are leads to research papers for answers . These questions are suitable for text mining and developing text mining tools to provide insights .",
            " In response to the COVID - 19 pandemic, the White House and a coalition of leading research groups have prepared the CORD - 19 Open Research Dataset . The dataset has 7865 articles in the .",
            " The solution is a type of Question Answering model . It is a retrieval - based QA model using embeddings . Both PubMed and MIMIC - III texts were split and tokenized using NLT",
            " The k - Nearest Neighbors algorithm (KNN) t is a simple technique . I loaded entire vectorized sentences into the model as training . When I need to find the answer we need to send a vector",
            " Using BioSentVec embedding and KNN algorithms is not the only solution . We can develop a custom model based on predefined keyword  ( fuzzy keywords )  domain dictionary and redefined rules using regular expression",
            " This is an impressive use of advanced off - the - shelf tools . You need to be a member of Data Science Central to add comments .",
            " Most Popular Content on DSC: Applied Stochastic Processes . New Machine Learning Cheat Sheet: Confidence Intervals Without Pain -  With Resampling . New Perspectives on Statistical Distributions and Deep",
            " Free Book and Resources for DSC Members . New Perspectives on Statistical Distributions and Deep Learning . Time series ,  Growth Modeling and Data Science Wizardy . Statistical Concepts Explained in Simple English ."
          ],
          "text_suggester": [
            {
              "input": "0 members",
              "weight": 1
            },
            {
              "input": "7865 articles",
              "weight": 1
            },
            {
              "input": "a coalition",
              "weight": 1
            },
            {
              "input": "a custom model",
              "weight": 1
            },
            {
              "input": "a job",
              "weight": 1
            },
            {
              "input": "a member",
              "weight": 1
            },
            {
              "input": "a narrow knowledge set",
              "weight": 1
            },
            {
              "input": "a quick question answering model",
              "weight": 1
            },
            {
              "input": "a resource",
              "weight": 1
            },
            {
              "input": "a similar question answering model",
              "weight": 1
            },
            {
              "input": "a similar solution",
              "weight": 1
            },
            {
              "input": "a similarity",
              "weight": 1
            },
            {
              "input": "a summarized answer",
              "weight": 1
            },
            {
              "input": "a type",
              "weight": 1
            },
            {
              "input": "a vector representation",
              "weight": 1
            },
            {
              "input": "a vectorized question string",
              "weight": 1
            },
            {
              "input": "a very simple technique",
              "weight": 1
            },
            {
              "input": "a warehouse management system",
              "weight": 1
            },
            {
              "input": "ai ethics",
              "weight": 1
            },
            {
              "input": "algorithm",
              "weight": 4
            },
            {
              "input": "all blog posts",
              "weight": 1
            },
            {
              "input": "all the words",
              "weight": 1
            },
            {
              "input": "an answer",
              "weight": 1
            },
            {
              "input": "an impressive use",
              "weight": 1
            },
            {
              "input": "an issue",
              "weight": 1
            },
            {
              "input": "analytic bridge",
              "weight": 5
            },
            {
              "input": "answer",
              "weight": 34
            },
            {
              "input": "answering tool",
              "weight": 1
            },
            {
              "input": "answers",
              "weight": 1
            },
            {
              "input": "applied",
              "weight": 1
            },
            {
              "input": "april",
              "weight": 1
            },
            {
              "input": "architecture",
              "weight": 1
            },
            {
              "input": "archives",
              "weight": 1
            },
            {
              "input": "arm",
              "weight": 1
            },
            {
              "input": "article",
              "weight": 5
            },
            {
              "input": "articles",
              "weight": 1
            },
            {
              "input": "authors",
              "weight": 1
            },
            {
              "input": "badges",
              "weight": 1
            },
            {
              "input": "base",
              "weight": 6
            },
            {
              "input": "basic excel",
              "weight": 1
            },
            {
              "input": "bert",
              "weight": 1
            },
            {
              "input": "bert based embeddings",
              "weight": 1
            },
            {
              "input": "big thanks",
              "weight": 1
            },
            {
              "input": "biology knowledge domain",
              "weight": 1
            },
            {
              "input": "biomedical word",
              "weight": 1
            },
            {
              "input": "biosentvec",
              "weight": 1
            },
            {
              "input": "biosentvec embedding",
              "weight": 1
            },
            {
              "input": "biosentvec embedding and knn algorithms",
              "weight": 1
            },
            {
              "input": "biosentvec model",
              "weight": 1
            },
            {
              "input": "blog",
              "weight": 11
            },
            {
              "input": "blog post",
              "weight": 5
            },
            {
              "input": "book",
              "weight": 14
            },
            {
              "input": "both pubmed",
              "weight": 1
            },
            {
              "input": "central",
              "weight": 7
            },
            {
              "input": "chatbots",
              "weight": 1
            },
            {
              "input": "clusters",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 4
            },
            {
              "input": "comment",
              "weight": 22
            },
            {
              "input": "comments",
              "weight": 1
            },
            {
              "input": "community",
              "weight": 11
            },
            {
              "input": "concepts",
              "weight": 1
            },
            {
              "input": "corpus",
              "weight": 5
            },
            {
              "input": "covid19",
              "weight": 1
            },
            {
              "input": "covid19 research papers repository",
              "weight": 1
            },
            {
              "input": "cxo strategy",
              "weight": 5
            },
            {
              "input": "data",
              "weight": 7
            },
            {
              "input": "data intelligence",
              "weight": 1
            },
            {
              "input": "data news",
              "weight": 5
            },
            {
              "input": "data science",
              "weight": 1
            },
            {
              "input": "data science central",
              "weight": 1
            },
            {
              "input": "data security",
              "weight": 5
            },
            {
              "input": "dataset",
              "weight": 22
            },
            {
              "input": "datum",
              "weight": 34
            },
            {
              "input": "deep learning",
              "weight": 1
            },
            {
              "input": "develop",
              "weight": 5
            },
            {
              "input": "digital acceleration",
              "weight": 1
            },
            {
              "input": "digital workplace",
              "weight": 5
            },
            {
              "input": "distances",
              "weight": 1
            },
            {
              "input": "domain",
              "weight": 4
            },
            {
              "input": "domain dictionary",
              "weight": 1
            },
            {
              "input": "dsc",
              "weight": 1
            },
            {
              "input": "dsc blogs",
              "weight": 5
            },
            {
              "input": "dsc members",
              "weight": 1
            },
            {
              "input": "dsc newsletter",
              "weight": 1
            },
            {
              "input": "each sentence",
              "weight": 1
            },
            {
              "input": "education spotlight",
              "weight": 5
            },
            {
              "input": "emb",
              "weight": 5
            },
            {
              "input": "embedding",
              "weight": 22
            },
            {
              "input": "embeddings",
              "weight": 1
            },
            {
              "input": "entertainment",
              "weight": 1
            },
            {
              "input": "entire vectorized sentences",
              "weight": 1
            },
            {
              "input": "explain",
              "weight": 1
            },
            {
              "input": "fascinating new result in the theory of randomness",
              "weight": 17
            },
            {
              "input": "few alternative approaches",
              "weight": 1
            },
            {
              "input": "final note",
              "weight": 1
            },
            {
              "input": "find",
              "weight": 6
            },
            {
              "input": "first",
              "weight": 5
            },
            {
              "input": "food",
              "weight": 1
            },
            {
              "input": "free book and resources for dsc members",
              "weight": 5
            },
            {
              "input": "full code",
              "weight": 1
            },
            {
              "input": "full text",
              "weight": 1
            },
            {
              "input": "future proof",
              "weight": 5
            },
            {
              "input": "fuzzy keywords",
              "weight": 1
            },
            {
              "input": "growth modeling",
              "weight": 1
            },
            {
              "input": "growth modeling and data science wizardy",
              "weight": 5
            },
            {
              "input": "hadoop 360",
              "weight": 5
            },
            {
              "input": "heather professional to comment",
              "weight": 45
            },
            {
              "input": "highlighted answer sentences",
              "weight": 1
            },
            {
              "input": "ibm",
              "weight": 1
            },
            {
              "input": "ibm risk insights",
              "weight": 1
            },
            {
              "input": "import nearestneighbors",
              "weight": 1
            },
            {
              "input": "indices",
              "weight": 1
            },
            {
              "input": "insights",
              "weight": 1
            },
            {
              "input": "insurance",
              "weight": 1
            },
            {
              "input": "iot",
              "weight": 1
            },
            {
              "input": "iot implementations",
              "weight": 1
            },
            {
              "input": "javascript",
              "weight": 1
            },
            {
              "input": "join",
              "weight": 1
            },
            {
              "input": "json",
              "weight": 34
            },
            {
              "input": "json files",
              "weight": 1
            },
            {
              "input": "json format",
              "weight": 1
            },
            {
              "input": "knn",
              "weight": 22
            },
            {
              "input": "lance",
              "weight": 1
            },
            {
              "input": "lance norskog",
              "weight": 1
            },
            {
              "input": "leading research groups",
              "weight": 1
            },
            {
              "input": "load",
              "weight": 7
            },
            {
              "input": "load entire vectorized sentence",
              "weight": 41
            },
            {
              "input": "load the biosentvec",
              "weight": 5
            },
            {
              "input": "machine learning",
              "weight": 3
            },
            {
              "input": "machine learning concepts",
              "weight": 1
            },
            {
              "input": "many",
              "weight": 4
            },
            {
              "input": "many different ways",
              "weight": 1
            },
            {
              "input": "medical",
              "weight": 7
            },
            {
              "input": "medical community",
              "weight": 1
            },
            {
              "input": "medical questions",
              "weight": 1
            },
            {
              "input": "member",
              "weight": 5
            },
            {
              "input": "microservices",
              "weight": 1
            },
            {
              "input": "ml algorithms",
              "weight": 1
            },
            {
              "input": "ml articles",
              "weight": 1
            },
            {
              "input": "ml resources",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 34
            },
            {
              "input": "model embedding sentences",
              "weight": 1
            },
            {
              "input": "modeling",
              "weight": 1
            },
            {
              "input": "more details",
              "weight": 1
            },
            {
              "input": "my blog",
              "weight": 1
            },
            {
              "input": "my code",
              "weight": 1
            },
            {
              "input": "my github",
              "weight": 1
            },
            {
              "input": "my github data",
              "weight": 1
            },
            {
              "input": "nbrs",
              "weight": 1
            },
            {
              "input": "need",
              "weight": 6
            },
            {
              "input": "new",
              "weight": 5
            },
            {
              "input": "new machine learning",
              "weight": 5
            },
            {
              "input": "new perspectives on statistical distributions",
              "weight": 5
            },
            {
              "input": "news",
              "weight": 6
            },
            {
              "input": "next post",
              "weight": 5
            },
            {
              "input": "nltk",
              "weight": 1
            },
            {
              "input": "nvidia",
              "weight": 1
            },
            {
              "input": "one",
              "weight": 5
            },
            {
              "input": "one picture",
              "weight": 12
            },
            {
              "input": "only articles",
              "weight": 1
            },
            {
              "input": "opportunities",
              "weight": 1
            },
            {
              "input": "original bert model develop",
              "weight": 100
            },
            {
              "input": "other popular resources",
              "weight": 1
            },
            {
              "input": "our newsletter",
              "weight": 1
            },
            {
              "input": "output",
              "weight": 11
            },
            {
              "input": "pandas data frame",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 8
            },
            {
              "input": "post",
              "weight": 3
            },
            {
              "input": "practices",
              "weight": 1
            },
            {
              "input": "predefined keyword",
              "weight": 1
            },
            {
              "input": "previous post",
              "weight": 1
            },
            {
              "input": "privacy policy",
              "weight": 1
            },
            {
              "input": "pubmed",
              "weight": 1
            },
            {
              "input": "question",
              "weight": 8
            },
            {
              "input": "question answering model",
              "weight": 1
            },
            {
              "input": "questions",
              "weight": 7
            },
            {
              "input": "ramesh",
              "weight": 1
            },
            {
              "input": "ranking",
              "weight": 1
            },
            {
              "input": "records",
              "weight": 1
            },
            {
              "input": "references",
              "weight": 1
            },
            {
              "input": "regular expression",
              "weight": 1
            },
            {
              "input": "regulatory hurdles",
              "weight": 1
            },
            {
              "input": "related",
              "weight": 4
            },
            {
              "input": "related articles",
              "weight": 1
            },
            {
              "input": "research",
              "weight": 11
            },
            {
              "input": "research papers",
              "weight": 1
            },
            {
              "input": "resource of over 52",
              "weight": 17
            },
            {
              "input": "resources",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 5
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "robots",
              "weight": 1
            },
            {
              "input": "rss",
              "weight": 1
            },
            {
              "input": "rules",
              "weight": 1
            },
            {
              "input": "science",
              "weight": 4
            },
            {
              "input": "search",
              "weight": 22
            },
            {
              "input": "section",
              "weight": 9
            },
            {
              "input": "sentence",
              "weight": 6
            },
            {
              "input": "sentence embedding use pubmed",
              "weight": 58
            },
            {
              "input": "sentence embeddings",
              "weight": 1
            },
            {
              "input": "sentences",
              "weight": 1
            },
            {
              "input": "share tweet facebook",
              "weight": 1
            },
            {
              "input": "sign",
              "weight": 7
            },
            {
              "input": "sign in see",
              "weight": 27
            },
            {
              "input": "similar",
              "weight": 7
            },
            {
              "input": "simple english",
              "weight": 1
            },
            {
              "input": "social media ai",
              "weight": 5
            },
            {
              "input": "solution",
              "weight": 6
            },
            {
              "input": "split article",
              "weight": 1
            },
            {
              "input": "statistical",
              "weight": 6
            },
            {
              "input": "statistical concepts",
              "weight": 1
            },
            {
              "input": "statistical distributions",
              "weight": 1
            },
            {
              "input": "statistical distributions and deep learning",
              "weight": 41
            },
            {
              "input": "statistics",
              "weight": 1
            },
            {
              "input": "stochastic processes",
              "weight": 1
            },
            {
              "input": "supply chain risks",
              "weight": 1
            },
            {
              "input": "tags",
              "weight": 1
            },
            {
              "input": "tech gap",
              "weight": 1
            },
            {
              "input": "tech topics",
              "weight": 1
            },
            {
              "input": "terms",
              "weight": 1
            },
            {
              "input": "test",
              "weight": 1
            },
            {
              "input": "text",
              "weight": 7
            },
            {
              "input": "text mining",
              "weight": 1
            },
            {
              "input": "text mining tools",
              "weight": 1
            },
            {
              "input": "the answer",
              "weight": 1
            },
            {
              "input": "the answer sentences",
              "weight": 1
            },
            {
              "input": "the articles",
              "weight": 1
            },
            {
              "input": "the base idea",
              "weight": 1
            },
            {
              "input": "the basic idea",
              "weight": 1
            },
            {
              "input": "the biosentvec pretrained model",
              "weight": 1
            },
            {
              "input": "the clinical notes",
              "weight": 1
            },
            {
              "input": "the coronavirus",
              "weight": 1
            },
            {
              "input": "the data",
              "weight": 1
            },
            {
              "input": "the dataset",
              "weight": 1
            },
            {
              "input": "the developers",
              "weight": 1
            },
            {
              "input": "the disadvantages",
              "weight": 1
            },
            {
              "input": "the future",
              "weight": 1
            },
            {
              "input": "the input question",
              "weight": 1
            },
            {
              "input": "the json format",
              "weight": 1
            },
            {
              "input": "the knn model",
              "weight": 1
            },
            {
              "input": "the medical domain",
              "weight": 1
            },
            {
              "input": "the model",
              "weight": 35
            },
            {
              "input": "the most similar records",
              "weight": 1
            },
            {
              "input": "the need",
              "weight": 1
            },
            {
              "input": "the news articles",
              "weight": 1
            },
            {
              "input": "the number",
              "weight": 1
            },
            {
              "input": "the only solution",
              "weight": 1
            },
            {
              "input": "the original bert model",
              "weight": 1
            },
            {
              "input": "the output",
              "weight": 1
            },
            {
              "input": "the physical science",
              "weight": 1
            },
            {
              "input": "the possible solution",
              "weight": 1
            },
            {
              "input": "the question",
              "weight": 12
            },
            {
              "input": "the related paragraphs",
              "weight": 1
            },
            {
              "input": "the risk insights project",
              "weight": 1
            },
            {
              "input": "the score",
              "weight": 1
            },
            {
              "input": "the sentence corpus",
              "weight": 1
            },
            {
              "input": "the steps",
              "weight": 1
            },
            {
              "input": "the theory",
              "weight": 12
            },
            {
              "input": "the top score sentences",
              "weight": 1
            },
            {
              "input": "the training sentence corpus",
              "weight": 1
            },
            {
              "input": "the user",
              "weight": 1
            },
            {
              "input": "the wake",
              "weight": 1
            },
            {
              "input": "the white house",
              "weight": 1
            },
            {
              "input": "the worldwide ai research community",
              "weight": 1
            },
            {
              "input": "these neighbors",
              "weight": 1
            },
            {
              "input": "these questions",
              "weight": 1
            },
            {
              "input": "this article purpose",
              "weight": 1
            },
            {
              "input": "this blog",
              "weight": 1
            },
            {
              "input": "this dataset",
              "weight": 1
            },
            {
              "input": "this kind",
              "weight": 1
            },
            {
              "input": "this model",
              "weight": 23
            },
            {
              "input": "this solution",
              "weight": 23
            },
            {
              "input": "this type",
              "weight": 1
            },
            {
              "input": "time series",
              "weight": 1
            },
            {
              "input": "tool",
              "weight": 8
            },
            {
              "input": "top article",
              "weight": 1
            },
            {
              "input": "trained kneighbors model",
              "weight": 1
            },
            {
              "input": "try",
              "weight": 4
            },
            {
              "input": "try help medical community",
              "weight": 34
            },
            {
              "input": "tweets",
              "weight": 1
            },
            {
              "input": "twitter streaming data",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 6
            },
            {
              "input": "use bert base embedding",
              "weight": 81
            },
            {
              "input": "user",
              "weight": 5
            },
            {
              "input": "user experience",
              "weight": 5
            },
            {
              "input": "users",
              "weight": 1
            },
            {
              "input": "vectorize",
              "weight": 1
            },
            {
              "input": "view blog",
              "weight": 5
            },
            {
              "input": "weather data",
              "weight": 1
            },
            {
              "input": "what",
              "weight": 12
            },
            {
              "input": "which paper",
              "weight": 1
            },
            {
              "input": "which section",
              "weight": 1
            },
            {
              "input": "wizardy",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your browser settings",
              "weight": 1
            },
            {
              "input": "your data",
              "weight": 1
            },
            {
              "input": "your system administrator",
              "weight": 1
            },
            {
              "input": "© 2021",
              "weight": 5
            },
            {
              "input": "© 2021 techtarget",
              "weight": 1
            },
            {
              "input": "● and many more options",
              "weight": 1
            },
            {
              "input": "● extract section details",
              "weight": 1
            },
            {
              "input": "● remove hyperlinks",
              "weight": 1
            },
            {
              "input": "● this solution",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://www.datasciencecentral.com/profiles/blog/show?id=6448529%3ABlogPost%3A946072&commentId=6448529%3AComment%3A946528&xg_source=activity",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.018830108285080138,
        "_index": "cache_index",
        "_id": "cacheid_99e8d3fccfd198af0b6d8233dba6d7a3",
        "_type": "_doc",
        "highlight": {
          "content": [
            "the White House and a coalition of\nleading research groups have prepared the COVID-19 Open Research <b>Dataset</b>",
            "This <b>dataset</b> is publicly available in Kaggle’s COVID-19 Open\nResearch <b>Dataset</b> Challenge (CORD-19).",
            "The <b>dataset</b> has 7865 articles in JSON format which contains\n64,000 unique sections and 1.1M sentences",
            "● Read JSON files from <b>dataset</b>\n\n● Parse JSON files\n\n● Remove hyperlinks, references\n\n● Extract section",
            "● <b>Dataset</b> downloaded from Kaggle.com. https://www.kaggle.com/allen-institute-\nfor-ai/CORD-19-research-challenge"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.003872223302578226,
        "see_also": [
          {
            "doc_id": "cacheid_5c37b38fe1a298e7edca86d40439a912",
            "source_doc_id": "entity:user/1974:en",
            "title": "ali tejpar"
          },
          {
            "doc_id": "cacheid_c77c507ffd08327a2666d76b7e20852a",
            "source_doc_id": "entity:user/1647:en",
            "title": "federico pecora"
          },
          {
            "doc_id": "cacheid_22a8a2aeb33c7fd4a5fab041e428528e",
            "source_doc_id": "entity:user/979:en",
            "title": "joris castermans"
          },
          {
            "doc_id": "cacheid_239a2af1db532d8ff956b2efacb94fd6",
            "source_doc_id": "https://flowingdata.com/2020/06/24/who-is-responsible-for-climate-change/",
            "title": "Who is responsible for climate change? | FlowingData\n\n"
          },
          {
            "doc_id": "cacheid_b18378b279be339c0e60b84590aa427c",
            "source_doc_id": "https://towardsdatascience.com/cnn-application-on-structured-data-automated-feature-extraction-8f2cd28d9a7e",
            "title": "CNN application on structured data-Automated Feature Extraction\n\n"
          }
        ],
        "semantic_content": " . Bridge  *  Hadoop 360  *  Big Data News  *  Search  *  Contact Subscribe to DSC Newsletter  .   *  All Blog Posts  *  My Blog  *  Add COVID19 :  Question - Answering Model using BioSentVec Embedding  *  Posted by Ramesh on April 19 ,  2020 . Number of Clusters in your Data  *  Fascinating New Results in the Theory of Randomness  *  Hire a Data Scientist  |  Search DSC  |  Find a Job  *  Post a Blog  |  Forum Questions",
        "short_answer": [
          {
            "score": 0.00868378859013319,
            "start": 47,
            "end": 93,
            "answer": "Search  *  Contact Subscribe to DSC Newsletter"
          }
        ]
      },
      {
        "_source": {
          "title": "Company News - Appen\n\n",
          "lemma_title": "Company News - Appen",
          "content": "[NEW]\n\nView our 2020 Annual Report\n\n  * Investors\n\n__\n\n  * Client Login\n\n__\n\n  * Language\n\n__\n\n    * Chinese\n\n__\n\n    * Japanese\n\n__\n\n  * Solutions\n    * What We Deliver\n      * Training Data\n      * Data Collection & Datasets\n    * How We Deliver\n      * Platform Overview\n      * Crowd Management\n      * Expertise\n    * View All Solutions\n  * Platform\n    *       * Platform Overview\n      * Annotation Capabilities\n      * Enterprise Capabilities\n      * Smart Labeling\n      * Workflows\n  * Industries\n    *       * Technology\n      * Automotive\n      * Financial Services\n      * Healthcare\n      * Government\n      * Retail\n      * View All Industries\n  * Company\n    *       * About Us\n      * Leadership\n      * Investors\n      * Environmental, Social, and Governance\n      * Jobs\n      * Press Room\n      * Crowd Wellness\n  * Resources\n    * AI Resource Center\n      * Blog\n      * Case Studies\n      * eBooks\n      * Webinars\n      * Whitepapers\n      * Research Papers\n      * Tools\n        * AI Readiness Assessment\n        * Insights Explorer\n    *       * Datasets\n        * Off-the-Shelf Datasets\n        * Open Source Datasets\n      * Community\n        * Partners\n        * Developers\n        * Customers\n    * All Resources\n\n* * *\n\nJobs\n\nContact Sales\n\n* * *\n\nContact\n\n    Appen Recognized in Deloitte’s Technology Fast 50 & 500\n\nAppen Celebrates its Sixth Year of Representation in the Deloitte Technology\nFast 50 Australia Awards After an exciting year of growth, Appen has been\nrecognized for the sixth time in the Deloitte Technology Fast 50 Australia\nAwards. This year marks the second year that we have received recognition in\nthe leadership category. The Leadership category recognizes technology\ncompanies who have …\n\nRead More\n\nAwardsCompany NewsDeloitte Technology Awards\n\n    Appen Recognized in the 2018 Deloitte Technology Fast 50 Australia Awards\nfor Leadership\n\nFollowing 102% growth in annual revenue from the previous year, Appen\ncelebrates our fifth year of recognition in the Deloitte Technology Fast 50\nAustralia Awards. In 2018, Appen was newly awarded in the Leadership category,\nwhich recognizes technology companies who have generated cumulative operating\nrevenues greater than $50M. “It’s an honor to receive this award from\nDeloitte.” said Mark Brayan, …\n\nRead More\n\nCompany News\n\n    Creating Structured Data for Machine Learning at Appen\n\nTammy Garves and Phil Hall are Appen’s Senior Vice Presidents, the\ncounterparts at the helm of the two main divisions of our company. Tammy leads\nour Content Relevance team. Phil heads up Language Resources. We caught up\nwith them recently to talk about the need for structured data for machine\nlearning. They also touch on industry trends, predictions, and why …\n\nRead More\n\nCompany NewsExecutive LeadershipProject Management ExpertiseSpeech Recognition\n\n    Meet Us on the Road in November\n\nThis November, we’re making stops on both coasts to share our high-quality\ndata expertise. Planning to attend one of these events and interested in\nspeaking with our team? Contact us to set up a meeting, or stop by our booth\nto learn how Appen can help you solve your data challenges. Open Data Science\nConference – November 3-4, Hyatt Regency …\n\nRead More\n\nCompany Newsevents\n\n    Appen’s Growth Fueled by Tech Trends and Executive Leadership\n\nAppen's growth trajectory has kept pace with a flourishing tech industry,\nfueled by the latest tech trends and executive leadership. Read more.\n\nCompany NewsLeadership\n\n    Worldwide Business with kathy ireland®: See Appen Discuss its Role in\nEnhancing the eCommerce Shopping Experience\n\nMark Brayan discusses how Appen can help online retailers improve their on-\nsite search and chatbot capabilities through high quality data, leading to\ndeeper customer relationships.\n\nCompany NewsExecutive Leadership\n\nSearch\n\n     Recent Posts\n\n  * AI Model Maintenance: A Guide to Managing a Model Post-Production\n  * What is AI-Powered Search Relevance?\n  * What Is Image Annotation and How Is It Used To Build AI Models?\n  * Leveraging AI and Machine Learning for Content Moderation\n  * Launching AI in the Real World\n\n     Recent Comments\n\n  * Alcino on Appen to Acquire Leapforce\n  * Here4Freedom on Appen to Acquire Leapforce\n  * Firmo I Saka on Appen to Acquire Leapforce\n  * Julie Bailey on Appen to Acquire Leapforce\n  * Dennis Thompson on Appen to Acquire Leapforce\n\n     Archives\n\n  * February 2021\n  * January 2021\n  * December 2020\n  * November 2020\n  * October 2020\n  * September 2020\n  * August 2020\n  * July 2020\n  * June 2020\n  * May 2020\n  * April 2020\n  * March 2020\n  * February 2020\n  * January 2020\n  * December 2019\n  * November 2019\n  * October 2019\n  * September 2019\n  * August 2019\n  * July 2019\n  * June 2019\n  * May 2019\n  * April 2019\n  * March 2019\n  * February 2019\n  * January 2019\n  * December 2018\n  * November 2018\n  * October 2018\n  * September 2018\n  * August 2018\n  * July 2018\n  * June 2018\n  * May 2018\n  * April 2018\n  * March 2018\n  * February 2018\n  * January 2018\n  * December 2017\n  * November 2017\n  * October 2017\n  * September 2017\n  * August 2017\n  * July 2017\n  * June 2017\n  * May 2017\n  * April 2017\n  * March 2017\n  * February 2017\n  * January 2017\n  * November 2016\n  * October 2016\n  * August 2016\n  * July 2016\n  * February 2016\n  * December 2015\n  * November 2015\n  * June 2015\n  * January 2015\n  * December 2014\n  * September 2014\n\n     Categories\n\n  * AI & Machine Learning\n  * Automotive\n  * Blog\n  * Business\n  * Case Studies\n  * CONTENT TYPES\n  * eBooks\n  * Financial Services\n  * Government\n  * Healthcare\n  * INDUSTRIES\n  * Industry Insights\n  * Life at Appen\n  * Machine Learning\n  * Open Source Datasets\n  * Press Releases\n  * Research Papers\n  * Retail\n  * ROLES\n  * Technology\n  * Technology\n  * Webinars\n  * Whitepapers\n\n     Meta\n\n  * Log in\n  * Entries feed\n  * Comments feed\n  * WordPress.org\n\nFind out how reliable training data can give you the confidence to deploy AI\n\nGet Started Today\n\n* * *\n\n* * *\n\n* * *\n\n  * Solutions\n\n    * Training Data\n\n    * Data Collection & Datasets\n\n  * Delivery\n\n    * Platform Overview\n\n    * Crowd Management\n\n    * Expertise\n\n  * Industries\n\n    * Technology\n\n    * Automotive\n\n    * Financial Services\n\n    * Government\n\n    * Healthcare\n\n    * Retail\n\n  * Company\n\n    * About Us\n\n    * Leadership\n\n    * Investors\n\n    * Environment, Social, and Governance\n\n    * Jobs\n\n    * Press Room\n\n    * Crowd Wellness\n\n  * Resources\n\n    * Blog\n\n    * Case Studies\n\n    * eBooks\n\n    * Webinars\n\n    * Whitepapers\n\n    * Open Source Datasets\n\n    * Partners\n\n    * Developers\n\n    * Customer Success Center\n\n  * Corporate Headquarters\n\n    * Level 6/9 Help St Chatswood NSW 2067 Australia\n\n    * +61-2-9468-6300\n\n  * US Headquarters\n\n    * 12131 113th Ave NE Suite  100 Kirkland, WA 98034\n\n    * Int’l Collect +1-646-224-1146\n\n* * *\n\n* * *\n\n  * Solutions\n    * Training Data\n    * Data Collection & Datasets\n  * Delivery\n    * Platform Overview\n    * Crowd Management\n    * Expertise\n  * Industries\n    * Technology\n    * Automotive\n    * Financial Services\n    * Government\n    * Healthcare\n    * Retail\n  * Company\n    * About Us\n    * Leadership\n    * Investors\n    * Environment, Social, and Governance\n    * Jobs\n    * Press Room\n    * Crowd Wellness\n  * Resources\n    * Blog\n    * Case Studies\n    * eBooks\n    * Webinars\n    * Whitepapers\n    * Open Source Datasets\n    * Partners\n    * Developers\n    * Customer Success Center\n  * Corporate Headquarters\n    * Level 6/9 Help St Chatswood NSW 2067 Australia\n    * +61-2-9468-6300\n  * US Headquarters\n    * 12131 113th Ave NE Suite  100 Kirkland, WA 98034\n    * Int’l Collect +1-646-224-1146\n\n* * *\n\n* * *\n\n@ 2021 Appen Limited\n\nLegal Policies\n\nData Subject Access Request\n\n@ 2021 Appen Limited\n\nLegal Policies\n\nData Subject Access Request\n\n* * *\n\n* * *\n\n×\n\n  * Solutions\n\n    * What We Deliver\n\n      * Training Data\n\n      * Data Collection & Datasets\n\n    * How We Deliver\n\n      * Platform Overview\n\n      * Crowd Management\n\n      * Expertise\n\n    * View All Solutions\n\n  * Platform\n\n    * Platform Overview\n\n    * Annotation Capabilities\n\n    * Enterprise Capabilities\n\n    * Smart Labeling\n\n    * Workflows\n\n  * Industries\n\n    * Technology\n\n    * Automotive\n\n    * Financial Services\n\n    * Healthcare\n\n    * Government\n\n    * Retail\n\n    * View All Industries\n\n  * Company\n\n    * About Us\n\n    * Leadership\n\n    * Investors\n\n    * Environmental, Social, and Governance\n\n    * Jobs\n\n    * Press Room\n\n    * Crowd Wellness\n\n  * Resources\n\n    * AI Resource Center\n\n      * Blog\n\n      * Case Studies\n\n      * eBooks\n\n      * Webinars\n\n      * Whitepapers\n\n      * Research Papers\n\n      * Tools\n\n        * AI Readiness Assessment\n\n        * Insights Explorer\n\n    * Resources column\n\n      * Datasets\n\n        * Off-the-Shelf Datasets\n\n        * Open Source Datasets\n\n      * Community\n\n        * Partners\n\n        * Developers\n\n        * Customers\n\n    * All Resources\n\n  * * * *\n\nJobs\n\nContact Sales\n\n* * *\n\nLanguage\n\nChinese\n\nJapanese\n\n",
          "lemma_content": "NEW view 2020 Annual Report investor _ _ Client Login _ _ language _ _ chinese _ _ japanese _ _ solution deliver Training Data Data Collection Datasets deliver Platform Overview Crowd Management expertise view solution platform Platform Overview Annotation capability enterprise Capabilities Smart Labeling workflow industry technology automotive Financial Services Healthcare government retail view industry company Us leadership investor Environmental Social Governance job Press Room Crowd wellness resource AI Resource Center blog Case Studies ebook Webinars whitepaper Research Papers tool AI Readiness Assessment Insights Explorer dataset Off-the-Shelf dataset Open Source dataset community partner developer customer Resources job contact sale contact Appen recognize Deloitte Technology Fast 50 500 Appen celebrate Sixth Year Representation Deloitte Technology 50 Australia Awards exciting year growth Appen recognize sixth time Deloitte Technology 50 Australia Awards year mark second year receive recognition leadership category Leadership category recognize technology company read More AwardsCompany NewsDeloitte Technology Awards Appen recognize 2018 Deloitte Technology 50 Australia Awards leadership follow 102 growth annual revenue previous year Appen celebrate fifth year recognition Deloitte Technology 50 Australia Awards 2018 Appen award Leadership category recognize technology company generate cumulative operating revenue great 50m. ’ honor receive award Deloitte say Mark Brayan read More Company News Creating Structured Data Machine Learning appen Tammy Garves Phil Hall Appen Senior Vice Presidents counterpart helm two main division company Tammy lead Content Relevance team Phil head Language Resources catch talk need structured datum machine learning touch industry trend prediction read More Company NewsExecutive LeadershipProject Management ExpertiseSpeech Recognition Meet Us Road November November be make stop coast share high-quality data expertise plan attend one event interested speak team contact set meeting stop booth learn Appen can help solve data challenge Open Data Science Conference November 3-4 Hyatt Regency read More Company Newsevents Appen growth fuel Tech Trends Executive Leadership Appen growth trajectory keep pace flourish tech industry fuel late tech trend executive leadership read more Company NewsLeadership Worldwide Business kathy ireland ® see Appen discuss Role enhance eCommerce Shopping experience Mark Brayan discuss Appen can help online retailer improve on- site search chatbot capability high quality datum lead deep customer relationship Company NewsExecutive Leadership Search recent post AI Model maintenance A Guide manage Model post-production ai-powere Search relevance image annotation used build ai model leverage ai Machine Learning Content moderation launch AI Real World recent comment Alcino Appen acquire Leapforce Here4Freedom Appen acquire Leapforce Firmo Saka Appen acquire Leapforce Julie Bailey Appen acquire Leapforce Dennis Thompson Appen acquire Leapforce archive February 2021 January 2021 December 2020 November 2020 October 2020 September 2020 August 2020 July 2020 June 2020 May 2020 April 2020 March 2020 February 2020 January 2020 December 2019 November 2019 October 2019 September 2019 August 2019 July 2019 June 2019 May 2019 April 2019 March 2019 February 2019 January 2019 December 2018 November 2018 October 2018 September 2018 August 2018 July 2018 June 2018 May 2018 April 2018 March 2018 February 2018 January 2018 December 2017 November 2017 October 2017 September 2017 August 2017 July 2017 June 2017 May 2017 April 2017 March 2017 February 2017 January 2017 November 2016 October 2016 August 2016 July 2016 February 2016 December 2015 November 2015 June 2015 January 2015 December 2014 September 2014 category AI Machine Learning automotive blog business case study content type ebook Financial Services government Healthcare industry industry insight life Appen Machine Learning open source dataset Press release Research Papers retail role technology technology webinar Whitepapers Meta log entry feed comment feed WordPress.org find reliable training datum can give confidence deploy AI start today solution Training Data Data Collection dataset delivery Platform Overview Crowd Management expertise industry technology automotive Financial Services government Healthcare retail company Us leadership investor Environment Social governance job Press Room Crowd Wellness resource blog case Studies ebook Webinars whitepaper Open source dataset partner developer Customer Success Center Corporate Headquarters level 6/9 Help St Chatswood NSW 2067 Australia +61-2-9468-6300 US Headquarters 12131 113th Ave NE Suite 100 Kirkland WA 98034 Int’l collect +1-646-224-1146 solution Training Data Data Collection dataset delivery Platform Overview Crowd Management expertise industry technology automotive Financial Services government Healthcare Retail company Us leadership investor Environment Social governance job Press Room Crowd wellness resource blog case study ebook webinar whitepaper open source dataset partner developer Customer Success Center Corporate Headquarters level 6/9 Help St Chatswood NSW 2067 Australia +61-2-9468-6300 US Headquarters 12131 113th Ave NE Suite 100 Kirkland WA 98034 Int’l collect +1-646-224-1146 2021 Appen Limited Legal Policies data Subject Access request 2021 Appen Limited Legal Policies data Subject Access request solution deliver Training data Data Collection Datasets deliver Platform Overview Crowd Management expertise view solution platform Platform Overview annotation capability enterprise capability Smart labeling workflow industry technology automotive Financial Services Healthcare government retail view industry company Us leadership investor Environmental Social governance job Press Room Crowd Wellness resource AI Resource Center blog case Studies ebook Webinars whitepaper Research Papers tool AI Readiness Assessment Insights Explorer resource column dataset Off-the-Shelf dataset open source dataset community partner developer customer resource job contact sale language chinese japanese",
          "kg_generic": [
            {
              "subject": "2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Login  ",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen Recognized",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen Celebrates",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Sixth Year of Representation",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "an exciting year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "This year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the second year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Leadership",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen Recognized",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deloitte Technology",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards for Leadership  ",
              "property": "rel:instanceof",
              "value": "event"
            },
            {
              "subject": "annual",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "the previous year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "our fifth year",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deloitte Technology",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Australia Awards",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Leadership",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "50M.",
              "property": "rel:instanceof",
              "value": "money"
            },
            {
              "subject": "Deloitte",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Mark Brayan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Company News",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen  Tammy Garves",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Phil Hall",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Tammy",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Phil",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Language Resources",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "machine learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "November  ",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "November 3-4",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Hyatt Regency",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Company Newsevents",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Tech Trends",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Worldwide Business",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Mark Brayan",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Recent Comments",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Julie Bailey",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Appen",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "February 2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2021",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2020",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2018",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "May 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "April 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "March 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2017",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "October 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "August 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "July 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "February 2016",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "November 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "June 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "January 2015",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "December 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "September 2014",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Machine Learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "WordPress.org",
              "property": "rel:instanceof",
              "value": "url"
            },
            {
              "subject": "Today",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Crowd Management",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Financial Services",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "* Government",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Crowd Wellness",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Success Center",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "St Chatswood",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "12131 113th",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Ave NE Suite",
              "property": "rel:instanceof",
              "value": "facility"
            },
            {
              "subject": "Training Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Crowd Management",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "St Chatswood",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "12131 113th Ave NE Suite",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "View All Industries",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "* Environmental, Social, and Governance      ",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Crowd Wellness",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Explorer",
              "property": "rel:instanceof",
              "value": "product"
            },
            {
              "subject": "* Resources",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Appen",
              "property": "recognize for",
              "value": "sixth time",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "year",
              "property": "mark",
              "value": "second year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Leadership category",
              "property": "recognize",
              "value": "technology company",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Australia Awards for leadership  ",
              "property": "follow",
              "value": "102 % growth",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "celebrate",
              "value": "fifth year",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "celebrate",
              "value": "year of recognition",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "’",
              "value": "honor",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Tammy",
              "property": "lead",
              "value": "Content Relevance team",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Phil",
              "property": "head up",
              "value": "Language Resources",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "also touch",
              "value": "industry trend",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "be make",
              "value": "stop",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "solve",
              "value": "data challenge",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "growth",
              "property": "fuel by",
              "value": "Tech Trends and Executive Leadership   Appen 's growth trajectory",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "discuss",
              "value": "Role",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Appen",
              "property": "can help online",
              "value": "retailer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "retailer",
              "property": "improve",
              "value": "on- site search and chatbot capability",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "reliable training datum",
              "property": "can give",
              "value": "confidence",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Int’l",
              "property": "collect",
              "value": "+1-646-224-1146",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "Int’l",
              "property": "collect",
              "value": "+1-646-224-1146",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "machine learning",
                "robotic",
                "internet of things",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.6322707394137979,
                0.1541122505441308,
                0.10775491571985185,
                0.0449309223331511,
                0.01712938374839723,
                0.023445097263902426,
                0.005778759252279997,
                0.014577971305698156
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "computer vision",
                "robotic"
              ],
              "scores": [
                0.2706935256719589,
                0.20272020902484655,
                0.230814628303051,
                0.16376738622784615,
                0.04312770999968052,
                0.015605843625962734,
                0.042394462041556835,
                0.03087616991251707
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.7402010769583285,
                0.0941211930476129,
                0.07417782547418028,
                0.038441197481006384,
                0.03017705911770463,
                0.0035741091705858707,
                0.010471094399690628,
                0.008836471475660801
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.2631418015807867,
                0.20538689568638802,
                0.2229874012991786,
                0.1304739210754633,
                0.056066254153847694,
                0.01925649866461754,
                0.04954489879310131,
                0.053142134100198746
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.25026170816272497,
                0.2720969710499048,
                0.16746900230646133,
                0.17575443908572197,
                0.0447545675560832,
                0.038930333219468594,
                0.03974983748048544,
                0.010983212850987911
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2732642302289605,
                0.23264246620237827,
                0.23634653724730015,
                0.11935297306627035,
                0.045887512154877186,
                0.05567917414009571,
                0.010202523320913315,
                0.026624645106494427
              ]
            },
            {
              "labels": [
                "reinforcement learning",
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.21181098744273186,
                0.23972897976636887,
                0.24838763568550348,
                0.1414004135876894,
                0.0470357071608305,
                0.05301461461931467,
                0.015340623445808887,
                0.04328102432191372
              ]
            },
            {
              "labels": [
                "machine learning",
                "internet of things",
                "natural language processing",
                "deep learning",
                "robotic",
                "reinforcement learning",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.23711328953504562,
                0.08248927351087332,
                0.225813964381814,
                0.18184236669912934,
                0.08494088239967823,
                0.11261127609759569,
                0.05949979927390814,
                0.015689173713326454
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.5739688696339726,
                0.164857582654804,
                0.08168929815292358,
                0.0678290268406272,
                0.04309662710875273,
                0.031721172388643026,
                0.027828523889183998,
                0.009008885361254215
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.31290547735989094,
                0.24776801653206348,
                0.14156148210167885,
                0.1336915036663413,
                0.0871708020567894,
                0.040620291605591774,
                0.026605165097862482,
                0.009677300229668617
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.525171797722578,
                0.18293715361505747,
                0.12400993751361966,
                0.05540332663804293,
                0.048117524944245815,
                0.03646701015532017,
                0.00962102971971035,
                0.018272214103490114
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8085572700947523,
                0.06665048818103969,
                0.05315626063384116,
                0.030007555382326245,
                0.013978268019855022,
                0.015504693379625678,
                0.003665546653792262,
                0.00848005129955709
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "neuromorphic computing",
                "robotic",
                "computer vision"
              ],
              "scores": [
                0.7058768295682967,
                0.09829526487737894,
                0.0712162721902132,
                0.07401790539734066,
                0.028089999221265316,
                0.003906071651726961,
                0.009888084139674902,
                0.008709655608981848
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.7180420076474547,
                0.08272243896499276,
                0.07065891474485397,
                0.086379359010607,
                0.01325448788702488,
                0.014742819126695395,
                0.003969533834606409,
                0.010230274638161063
              ]
            },
            {
              "labels": [
                "natural language processing",
                "reinforcement learning",
                "machine learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.8145395752508193,
                0.061513681430369616,
                0.03723252099007368,
                0.05766753037460148,
                0.013382559060119092,
                0.009612313471734524,
                0.0018141010077670217,
                0.004237770335748792
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "robotic",
                "internet of things",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.30026327073574066,
                0.25419137347489595,
                0.19497993122786283,
                0.1364456471055746,
                0.03523268084973097,
                0.03341724583879113,
                0.03502078354358673,
                0.010449033230543137
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.41625662008300424,
                0.2777903010137379,
                0.09596305945888162,
                0.14957356825470924,
                0.02342611877247691,
                0.01615737844258547,
                0.015616060234606266,
                0.005216856021434069
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "computer vision",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.33384886756539345,
                0.2382708042860031,
                0.11405178625136614,
                0.1873864522203803,
                0.04914246592670679,
                0.034327288158237934,
                0.031890371814370155,
                0.011081917211413383
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9550667405128479,
              "spans": [
                {
                  "approx_length": 22,
                  "score": 0.9550667405128479,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.12114743800724254,
              "spans": [
                {
                  "approx_length": 163,
                  "score": 0.8158276677131653,
                  "spanid": 0
                },
                {
                  "approx_length": 315,
                  "score": 0.95179682970047,
                  "spanid": 10
                },
                {
                  "approx_length": 304,
                  "score": 0.552465558052063,
                  "spanid": 13
                },
                {
                  "approx_length": 207,
                  "score": 0.9379409551620483,
                  "spanid": 28
                },
                {
                  "approx_length": 234,
                  "score": 0.8609818816184998,
                  "spanid": 32
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.801628358223859,
              "spans": [
                {
                  "approx_length": 255,
                  "score": 0.9978811144828796,
                  "spanid": 1
                },
                {
                  "approx_length": 215,
                  "score": 0.9969781041145325,
                  "spanid": 2
                },
                {
                  "approx_length": 224,
                  "score": 0.7060067653656006,
                  "spanid": 3
                },
                {
                  "approx_length": 213,
                  "score": 0.7015550136566162,
                  "spanid": 4
                },
                {
                  "approx_length": 333,
                  "score": 0.9991692900657654,
                  "spanid": 5
                },
                {
                  "approx_length": 406,
                  "score": 0.998431921005249,
                  "spanid": 6
                },
                {
                  "approx_length": 344,
                  "score": 0.9990876913070679,
                  "spanid": 7
                },
                {
                  "approx_length": 345,
                  "score": 0.9978368878364563,
                  "spanid": 8
                },
                {
                  "approx_length": 361,
                  "score": 0.9979931116104126,
                  "spanid": 9
                },
                {
                  "approx_length": 375,
                  "score": 0.99901282787323,
                  "spanid": 11
                },
                {
                  "approx_length": 317,
                  "score": 0.957538902759552,
                  "spanid": 12
                },
                {
                  "approx_length": 224,
                  "score": 0.9440591335296631,
                  "spanid": 14
                },
                {
                  "approx_length": 207,
                  "score": 0.9395784735679626,
                  "spanid": 15
                },
                {
                  "approx_length": 207,
                  "score": 0.9325098395347595,
                  "spanid": 16
                },
                {
                  "approx_length": 210,
                  "score": 0.933350682258606,
                  "spanid": 17
                },
                {
                  "approx_length": 220,
                  "score": 0.9528807401657104,
                  "spanid": 18
                },
                {
                  "approx_length": 231,
                  "score": 0.9648948311805725,
                  "spanid": 19
                },
                {
                  "approx_length": 241,
                  "score": 0.8616325855255127,
                  "spanid": 20
                },
                {
                  "approx_length": 180,
                  "score": 0.9933398962020874,
                  "spanid": 21
                },
                {
                  "approx_length": 243,
                  "score": 0.9906353950500488,
                  "spanid": 22
                },
                {
                  "approx_length": 221,
                  "score": 0.9677020311355591,
                  "spanid": 23
                },
                {
                  "approx_length": 226,
                  "score": 0.7012463212013245,
                  "spanid": 24
                },
                {
                  "approx_length": 208,
                  "score": 0.9865660071372986,
                  "spanid": 25
                },
                {
                  "approx_length": 216,
                  "score": 0.981844961643219,
                  "spanid": 26
                },
                {
                  "approx_length": 241,
                  "score": 0.9409693479537964,
                  "spanid": 27
                },
                {
                  "approx_length": 216,
                  "score": 0.9232661128044128,
                  "spanid": 29
                },
                {
                  "approx_length": 263,
                  "score": 0.9850675463676453,
                  "spanid": 30
                },
                {
                  "approx_length": 228,
                  "score": 0.9875341653823853,
                  "spanid": 31
                },
                {
                  "approx_length": 142,
                  "score": 0.91679447889328,
                  "spanid": 33
                }
              ]
            }
          ],
          "summary": [
            " Company News  - Appen Appen -  Appen. Company News . Company",
            "   View our 2020 Annual Report .  View the 2020 Global AI Resource Center . [ NEW ]  View  our 2020 annual Report . [  View All Solutions  *  View all Solutions    See our",
            " Appen has been recognized for the sixth time in the Deloitte Technology Fast 50 Australia Awards . Appen was newly awarded in the Leadership category . The Leadership category recognizes technology companies who have generated cumulative operating revenues greater than",
            " Appen’s Senior Vice Presidents talk about the need for structured data for machine learning . Tammy Garves and Phil Hall discuss industry trends and predictions . They also discuss how Appen can help online retailers improve their on",
            " Site search and chatbot capabilities through high quality data will lead to deeper customer relationships . Archives: February 2021    February 2020  *  January 2020   -  December 2020  –  January 2021  *",
            " April 2019    March 2019  *  February 2019  -   January 2019  –   December 2018   - January 2019 .   AI  & Machine Learning  &  Machine Learning . ",
            " Find out how reliable training data can give you the confidence to deploy AI . Use the weekly Newsquiz to test your knowledge of machine learning and other AI-related skills . Use this week's Daily Discussion to help you",
            " US Headquarters  *  12131 113th Ave NE Suite 100 Kirkland, WA 98034 .   US Headquarters is located in Kirkland , WA . Int’l Collect  + 61 - 2 - 94",
            " US Headquarters   12131 113th Ave NE Suite 100 Kirkland, WA 98034 . 2067 Australia   + 61 - 2 - 9468 - 6300  *  US Headquarters is located in Kirkland",
            " Press Room   Crowd Wellness    Resources  *  Resources for AI Resource Center . *  AI Readiness Assessment   Use the AI Resource Resource Center to help with reading comprehension and vocabulary . Use the"
          ],
          "text_suggester": [
            {
              "input": "company news",
              "weight": 0
            },
            {
              "input": "12131 113th",
              "weight": 1
            },
            {
              "input": "2018 deloitte technology fast 50",
              "weight": 38
            },
            {
              "input": "50 australia awards",
              "weight": 0
            },
            {
              "input": "a flourishing tech industry",
              "weight": 0
            },
            {
              "input": "a guide",
              "weight": 0
            },
            {
              "input": "a meeting",
              "weight": 0
            },
            {
              "input": "acquire",
              "weight": 2
            },
            {
              "input": "ai models",
              "weight": 0
            },
            {
              "input": "all industries",
              "weight": 0
            },
            {
              "input": "all resources",
              "weight": 0
            },
            {
              "input": "all solutions",
              "weight": 0
            },
            {
              "input": "an exciting year",
              "weight": 5
            },
            {
              "input": "an honor",
              "weight": 0
            },
            {
              "input": "annual revenue",
              "weight": 0
            },
            {
              "input": "appen",
              "weight": 89
            },
            {
              "input": "appen celebrate",
              "weight": 1
            },
            {
              "input": "appen limited",
              "weight": 0
            },
            {
              "input": "appen recognize",
              "weight": 5
            },
            {
              "input": "appen to acquire leapforce",
              "weight": 100
            },
            {
              "input": "appen’s senior vice presidents",
              "weight": 0
            },
            {
              "input": "april",
              "weight": 0
            },
            {
              "input": "april 2017",
              "weight": 1
            },
            {
              "input": "april 2018",
              "weight": 1
            },
            {
              "input": "april 2019",
              "weight": 1
            },
            {
              "input": "april 2020",
              "weight": 1
            },
            {
              "input": "august",
              "weight": 0
            },
            {
              "input": "august 2016",
              "weight": 1
            },
            {
              "input": "august 2017",
              "weight": 1
            },
            {
              "input": "august 2018",
              "weight": 1
            },
            {
              "input": "august 2019",
              "weight": 1
            },
            {
              "input": "august 2020",
              "weight": 1
            },
            {
              "input": "australia",
              "weight": 0
            },
            {
              "input": "australia awards",
              "weight": 9
            },
            {
              "input": "australia awards for leadership",
              "weight": 1
            },
            {
              "input": "automotive",
              "weight": 0
            },
            {
              "input": "ave ne suite",
              "weight": 0
            },
            {
              "input": "awards",
              "weight": 2
            },
            {
              "input": "awards appen",
              "weight": 0
            },
            {
              "input": "awardscompany newsdeloitte technology",
              "weight": 0
            },
            {
              "input": "blog",
              "weight": 1
            },
            {
              "input": "both coasts",
              "weight": 0
            },
            {
              "input": "capability",
              "weight": 1
            },
            {
              "input": "case",
              "weight": 1
            },
            {
              "input": "categories",
              "weight": 0
            },
            {
              "input": "category",
              "weight": 1
            },
            {
              "input": "center",
              "weight": 1
            },
            {
              "input": "client login",
              "weight": 0
            },
            {
              "input": "collection",
              "weight": 0
            },
            {
              "input": "company",
              "weight": 3
            },
            {
              "input": "company newsevents",
              "weight": 0
            },
            {
              "input": "company newsexecutive leadership",
              "weight": 0
            },
            {
              "input": "company newsexecutive leadershipproject management",
              "weight": 0
            },
            {
              "input": "confidence to deploy ai",
              "weight": 16
            },
            {
              "input": "contact",
              "weight": 2
            },
            {
              "input": "contact sales",
              "weight": 0
            },
            {
              "input": "content moderation",
              "weight": 0
            },
            {
              "input": "corporate headquarters",
              "weight": 0
            },
            {
              "input": "crowd",
              "weight": 0
            },
            {
              "input": "crowd management",
              "weight": 5
            },
            {
              "input": "crowd wellness",
              "weight": 5
            },
            {
              "input": "cumulative operating revenues",
              "weight": 0
            },
            {
              "input": "customer",
              "weight": 0
            },
            {
              "input": "data",
              "weight": 2
            },
            {
              "input": "data science conference",
              "weight": 1
            },
            {
              "input": "data subject access",
              "weight": 0
            },
            {
              "input": "data subject access request",
              "weight": 0
            },
            {
              "input": "dataset",
              "weight": 11
            },
            {
              "input": "datasets",
              "weight": 0
            },
            {
              "input": "datum",
              "weight": 2
            },
            {
              "input": "december",
              "weight": 0
            },
            {
              "input": "december 2014",
              "weight": 1
            },
            {
              "input": "december 2015",
              "weight": 1
            },
            {
              "input": "december 2017",
              "weight": 1
            },
            {
              "input": "december 2018",
              "weight": 1
            },
            {
              "input": "december 2019",
              "weight": 1
            },
            {
              "input": "december 2020",
              "weight": 1
            },
            {
              "input": "deeper customer relationships",
              "weight": 0
            },
            {
              "input": "deliver",
              "weight": 0
            },
            {
              "input": "deloitte",
              "weight": 0
            },
            {
              "input": "deloitte technology",
              "weight": 5
            },
            {
              "input": "deloitte technology fast 50",
              "weight": 32
            },
            {
              "input": "deloitte’s technology",
              "weight": 0
            },
            {
              "input": "developer",
              "weight": 0
            },
            {
              "input": "ebook",
              "weight": 0
            },
            {
              "input": "ebooks",
              "weight": 0
            },
            {
              "input": "executive leadership",
              "weight": 0
            },
            {
              "input": "expertise",
              "weight": 1
            },
            {
              "input": "expertisespeech recognition",
              "weight": 0
            },
            {
              "input": "fast 50 australia awards",
              "weight": 0
            },
            {
              "input": "february",
              "weight": 0
            },
            {
              "input": "february 2016",
              "weight": 1
            },
            {
              "input": "february 2017",
              "weight": 1
            },
            {
              "input": "february 2018",
              "weight": 1
            },
            {
              "input": "february 2019",
              "weight": 1
            },
            {
              "input": "february 2020",
              "weight": 1
            },
            {
              "input": "february 2021",
              "weight": 1
            },
            {
              "input": "financial",
              "weight": 0
            },
            {
              "input": "financial services",
              "weight": 0
            },
            {
              "input": "firmo",
              "weight": 0
            },
            {
              "input": "governance",
              "weight": 11
            },
            {
              "input": "government",
              "weight": 1
            },
            {
              "input": "growth",
              "weight": 3
            },
            {
              "input": "headquarters",
              "weight": 0
            },
            {
              "input": "healthcare",
              "weight": 1
            },
            {
              "input": "high quality data",
              "weight": 0
            },
            {
              "input": "how reliable training data",
              "weight": 0
            },
            {
              "input": "hyatt regency",
              "weight": 0
            },
            {
              "input": "image annotation",
              "weight": 0
            },
            {
              "input": "industries",
              "weight": 0
            },
            {
              "input": "industry",
              "weight": 3
            },
            {
              "input": "industry insights",
              "weight": 0
            },
            {
              "input": "industry trends",
              "weight": 0
            },
            {
              "input": "insights explorer",
              "weight": 0
            },
            {
              "input": "investor",
              "weight": 0
            },
            {
              "input": "investors",
              "weight": 0
            },
            {
              "input": "its role",
              "weight": 0
            },
            {
              "input": "its sixth year",
              "weight": 0
            },
            {
              "input": "january",
              "weight": 0
            },
            {
              "input": "january 2015",
              "weight": 1
            },
            {
              "input": "january 2017",
              "weight": 1
            },
            {
              "input": "january 2018",
              "weight": 1
            },
            {
              "input": "january 2019",
              "weight": 1
            },
            {
              "input": "january 2020",
              "weight": 1
            },
            {
              "input": "january 2021",
              "weight": 1
            },
            {
              "input": "job",
              "weight": 3
            },
            {
              "input": "job contact sale",
              "weight": 9
            },
            {
              "input": "julie bailey",
              "weight": 1
            },
            {
              "input": "july",
              "weight": 0
            },
            {
              "input": "july 2016",
              "weight": 1
            },
            {
              "input": "july 2017",
              "weight": 1
            },
            {
              "input": "july 2018",
              "weight": 1
            },
            {
              "input": "july 2019",
              "weight": 1
            },
            {
              "input": "july 2020",
              "weight": 1
            },
            {
              "input": "june",
              "weight": 0
            },
            {
              "input": "june 2015",
              "weight": 1
            },
            {
              "input": "june 2017",
              "weight": 1
            },
            {
              "input": "june 2018",
              "weight": 1
            },
            {
              "input": "june 2019",
              "weight": 1
            },
            {
              "input": "june 2020",
              "weight": 1
            },
            {
              "input": "kathy ireland",
              "weight": 5
            },
            {
              "input": "kirkland",
              "weight": 0
            },
            {
              "input": "language resources",
              "weight": 0
            },
            {
              "input": "leadership",
              "weight": 7
            },
            {
              "input": "leapforce",
              "weight": 0
            },
            {
              "input": "leapforce archives",
              "weight": 0
            },
            {
              "input": "legal policies",
              "weight": 0
            },
            {
              "input": "machine learning",
              "weight": 11
            },
            {
              "input": "management",
              "weight": 1
            },
            {
              "input": "march",
              "weight": 0
            },
            {
              "input": "march 2017",
              "weight": 1
            },
            {
              "input": "march 2018",
              "weight": 1
            },
            {
              "input": "march 2019",
              "weight": 1
            },
            {
              "input": "march 2020",
              "weight": 1
            },
            {
              "input": "mark brayan",
              "weight": 0
            },
            {
              "input": "may",
              "weight": 0
            },
            {
              "input": "may 2017",
              "weight": 1
            },
            {
              "input": "may 2018",
              "weight": 1
            },
            {
              "input": "may 2019",
              "weight": 1
            },
            {
              "input": "may 2020",
              "weight": 1
            },
            {
              "input": "meet",
              "weight": 0
            },
            {
              "input": "meta",
              "weight": 0
            },
            {
              "input": "more",
              "weight": 1
            },
            {
              "input": "newsleadership",
              "weight": 0
            },
            {
              "input": "november",
              "weight": 0
            },
            {
              "input": "november 2015",
              "weight": 1
            },
            {
              "input": "november 2016",
              "weight": 1
            },
            {
              "input": "november 2017",
              "weight": 1
            },
            {
              "input": "november 2018",
              "weight": 1
            },
            {
              "input": "november 2019",
              "weight": 1
            },
            {
              "input": "november 2020",
              "weight": 1
            },
            {
              "input": "nsw",
              "weight": 0
            },
            {
              "input": "october",
              "weight": 0
            },
            {
              "input": "october 2016",
              "weight": 1
            },
            {
              "input": "october 2017",
              "weight": 1
            },
            {
              "input": "october 2018",
              "weight": 1
            },
            {
              "input": "october 2019",
              "weight": 1
            },
            {
              "input": "october 2020",
              "weight": 1
            },
            {
              "input": "one",
              "weight": 1
            },
            {
              "input": "online retailers",
              "weight": 0
            },
            {
              "input": "open",
              "weight": 0
            },
            {
              "input": "open data science conference",
              "weight": 0
            },
            {
              "input": "our 2020 annual report",
              "weight": 0
            },
            {
              "input": "our booth",
              "weight": 0
            },
            {
              "input": "our company",
              "weight": 0
            },
            {
              "input": "our content relevance team",
              "weight": 0
            },
            {
              "input": "our fifth year",
              "weight": 0
            },
            {
              "input": "our team",
              "weight": 0
            },
            {
              "input": "overview",
              "weight": 1
            },
            {
              "input": "papers",
              "weight": 0
            },
            {
              "input": "partner",
              "weight": 0
            },
            {
              "input": "phil",
              "weight": 0
            },
            {
              "input": "phil hall",
              "weight": 0
            },
            {
              "input": "platform",
              "weight": 1
            },
            {
              "input": "predictions",
              "weight": 0
            },
            {
              "input": "press",
              "weight": 0
            },
            {
              "input": "read",
              "weight": 0
            },
            {
              "input": "real world",
              "weight": 1
            },
            {
              "input": "recent comment",
              "weight": 1
            },
            {
              "input": "recent comments",
              "weight": 0
            },
            {
              "input": "recognize",
              "weight": 2
            },
            {
              "input": "representation",
              "weight": 0
            },
            {
              "input": "research",
              "weight": 0
            },
            {
              "input": "resource",
              "weight": 1
            },
            {
              "input": "retail",
              "weight": 3
            },
            {
              "input": "room",
              "weight": 0
            },
            {
              "input": "saka",
              "weight": 0
            },
            {
              "input": "search recent posts",
              "weight": 0
            },
            {
              "input": "september",
              "weight": 0
            },
            {
              "input": "september 2014",
              "weight": 1
            },
            {
              "input": "september 2017",
              "weight": 1
            },
            {
              "input": "september 2018",
              "weight": 1
            },
            {
              "input": "september 2019",
              "weight": 1
            },
            {
              "input": "september 2020",
              "weight": 1
            },
            {
              "input": "services",
              "weight": 0
            },
            {
              "input": "social",
              "weight": 0
            },
            {
              "input": "solution",
              "weight": 1
            },
            {
              "input": "solutions",
              "weight": 0
            },
            {
              "input": "source",
              "weight": 0
            },
            {
              "input": "st chatswood",
              "weight": 0
            },
            {
              "input": "stops",
              "weight": 0
            },
            {
              "input": "structured data",
              "weight": 0
            },
            {
              "input": "studies",
              "weight": 0
            },
            {
              "input": "success center",
              "weight": 1
            },
            {
              "input": "tammy",
              "weight": 0
            },
            {
              "input": "tammy garves",
              "weight": 0
            },
            {
              "input": "tech trends",
              "weight": 1
            },
            {
              "input": "technology",
              "weight": 4
            },
            {
              "input": "technology companies",
              "weight": 0
            },
            {
              "input": "the 2018 deloitte technology",
              "weight": 0
            },
            {
              "input": "the confidence",
              "weight": 0
            },
            {
              "input": "the counterparts",
              "weight": 0
            },
            {
              "input": "the deloitte technology",
              "weight": 0
            },
            {
              "input": "the ecommerce shopping experience",
              "weight": 0
            },
            {
              "input": "the helm",
              "weight": 0
            },
            {
              "input": "the latest tech trends",
              "weight": 0
            },
            {
              "input": "the leadership category",
              "weight": 0
            },
            {
              "input": "the need",
              "weight": 0
            },
            {
              "input": "the previous year",
              "weight": 5
            },
            {
              "input": "the real world",
              "weight": 0
            },
            {
              "input": "the road",
              "weight": 0
            },
            {
              "input": "the second year",
              "weight": 5
            },
            {
              "input": "the sixth time",
              "weight": 0
            },
            {
              "input": "the two main divisions",
              "weight": 0
            },
            {
              "input": "them",
              "weight": 0
            },
            {
              "input": "these events",
              "weight": 0
            },
            {
              "input": "they",
              "weight": 0
            },
            {
              "input": "this award",
              "weight": 0
            },
            {
              "input": "this year",
              "weight": 1
            },
            {
              "input": "training",
              "weight": 0
            },
            {
              "input": "training data",
              "weight": 1
            },
            {
              "input": "two",
              "weight": 1
            },
            {
              "input": "view",
              "weight": 0
            },
            {
              "input": "view all industry",
              "weight": 1
            },
            {
              "input": "webinars",
              "weight": 0
            },
            {
              "input": "what",
              "weight": 11
            },
            {
              "input": "whitepaper",
              "weight": 0
            },
            {
              "input": "who",
              "weight": 4
            },
            {
              "input": "worldwide business",
              "weight": 0
            },
            {
              "input": "year",
              "weight": 2
            },
            {
              "input": "you",
              "weight": 0
            },
            {
              "input": "your data challenges",
              "weight": 0
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://appen.com/tag/company-news/",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.03843196762109985,
        "_index": "cache_index",
        "_id": "cacheid_a30184d5176a54c4fff2a9a4447de3be",
        "_type": "_doc",
        "highlight": {
          "content": [
            "* Japanese\n\n__\n\n  * Solutions\n    * What We Deliver\n      * Training Data\n      * Data Collection & <b>Datasets</b>",
            "Research Papers\n      * Tools\n        * AI Readiness Assessment\n        * Insights Explorer\n    *       * <b>Datasets</b>",
            "* Off-the-Shelf <b>Datasets</b>\n        * Open Source <b>Datasets</b>\n      * Community\n        * Partners",
            "Get Started Today\n\n* * *\n\n* * *\n\n* * *\n\n  * Solutions\n\n    * Training Data\n\n    * Data Collection & <b>Datasets</b>",
            "* Off-the-Shelf <b>Datasets</b>\n\n        * Open Source <b>Datasets</b>\n\n      * Community\n\n        * Partners"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.0037175915098033533,
        "see_also": [
          {
            "doc_id": "cacheid_cf3ed824316277ce43eb3abb3a7436a5",
            "source_doc_id": "entity:user/1096:en",
            "title": "anne rosier"
          },
          {
            "doc_id": "cacheid_99d6ffa0604d44e687726158dfbab7b5",
            "source_doc_id": "https://stats.stackexchange.com/questions/422902/what-are-kernels-in-support-vector-machine",
            "title": "svm - What are kernels in support vector machine? - Cross Validated\n\n"
          },
          {
            "doc_id": "cacheid_eba00dd570765f1865a831c28e06f81a",
            "source_doc_id": "entity:user/1275:en",
            "title": "corinne joffre"
          },
          {
            "doc_id": "cacheid_925424652a847c4e5a38962d2b5d9d30",
            "source_doc_id": "entity:user/2047:en",
            "title": "vincent gauthier"
          },
          {
            "doc_id": "cacheid_8ef001bf6261677dcdd0aef4bdd633fe",
            "source_doc_id": "entity:user/1723:en",
            "title": "mériem jaïdane"
          }
        ],
        "semantic_content": " . data can give you the confidence to deploy AI Get Started Today  *   *   *   *   *   *   *   *   *   *  Solutions  *  Training Data  *  Data Collection  &  Datasets  *  Delivery  *",
        "short_answer": [
          {
            "score": 0.09446432441473007,
            "start": 172,
            "end": 180,
            "answer": "Delivery"
          }
        ]
      },
      {
        "_source": {
          "title": "Does Non-COVID19 Lung Lesion Help? Investigating Transferability in COVID-19\nCT Image Segmentation | Papers With Code\n\n",
          "lemma_title": "Non-COVID19 Lung Lesion Help investigate transferability COVID-19 CT Image Segmentation Papers code",
          "content": "  *   * Browse State-of-the-Art \n  * Datasets \n  * More \n\nAbout Methods RC2020 Trends\n\n  * Portals \n\n  *   *   * Sign In\n\n    Subscribe to the PwC Newsletter\n\n×\n\nStay informed on the latest trending ML papers with code, research\ndevelopments, libraries, methods, and datasets.  \n  \nRead previous issues\n\nSubscribe\n\n      Join the community\n\n×\n\nYou need to log in to edit.  \nYou can create a new account if you don't have one.  \n  \nOr, discuss a change on __Slack.\n\n      Add a new code entry for this paper\n\n×\n\nGitHub, GitLab or BitBucket URL:*\n\nOfficial code from paper authors\n\nSubmit\n\n      Remove a code repository from this paper\n\n×\n\n       Mark the official implementation from paper authors\n\n×\n\n* * *\n\nThere is no official implementation\n\n* * *\n\nMultiple official implementations\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTask:*\n\n\\--------- Computed Tomography (CT) Transfer Learning Semantic Segmentation\n\nNot in the list? Add a task.\n\nDataset:*\n\n\\---------\n\nModel name:*\n\nMetric name:*\n\n\\---------\n\nHigher is better (for the metric)\n\nMetric value:*\n\nUses extra training data\n\nData evaluated on\n\nSubmit\n\n      Add a new evaluation result row\n\n×\n\nTASK DATASET MODEL METRIC NAME METRIC VALUE GLOBAL RANK REMOVE  \n  \n      Add a task\n\n×\n\nAttached tasks:\n\n  * COMPUTED TOMOGRAPHY (CT)\n\n  * SEMANTIC SEGMENTATION\n\n  * TRANSFER LEARNING\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new task.\n\nNew task name:\n\nTop-level area:\n\n\\--------- Adversarial Audio Computer Code Computer Vision Graphs Knowledge\nBase Medical Methodology Miscellaneous Music Natural Language Processing\nPlaying Games Reasoning Robots Speech Time Series\n\nParent task (if any):\n\n\\---------\n\nDescription:\n\nSubmit\n\n      Remove a task\n\n×\n\n  * COMPUTED TOMOGRAPHY (CT) \\- \n\n  * SEMANTIC SEGMENTATION \\- \n\n  * TRANSFER LEARNING \\- \n\n      Add a method\n\n×\n\nAttached methods:\n\n  * CONCATENATED SKIP CONNECTION\n\n  * RELU\n\n  * MAX POOLING\n\n  * CONVOLUTION\n\n  * U-NET\n\nAdd:\n\n\\---------\n\nNot in the list?  \nCreate a new method.\n\n New method name  (e.g. ReLU):\n\n New method full name  (e.g. Rectified Linear Unit):\n\n Paper where method was first introduced  :\n\n\\---------\n\n Method category  (e.g. Activation Functions): _If no match, add something\nfor now then you can add a new category afterwards._\n\n\\---------\n\n Markdown description  (optional; $\\LaTeX$ enabled): _You can edit this\nlater, so feel free to start with something succinct._\n\nSubmit\n\n      Remove a method\n\n×\n\n  * CONCATENATED SKIP CONNECTION \\- \n\n  * RELU \\- \n\n  * MAX POOLING \\- \n\n  * CONVOLUTION \\- \n\n  * U-NET \\- \n\n      Edit Datasets\n\n×\n\nAdd or remove datasets  introduced  in this paper:\n\nAdd or remove other datasets  used  in this paper:\n\nPaper introduces a new dataset?\n\n__Add a new dataset here\n\nSave\n\n  Does Non-COVID19 Lung Lesion Help? Investigating Transferability in COVID-19\nCT Image Segmentation\n\n23 Jun 2020 •  Yixin Wang •  Yao Zhang •  Yang Liu •  Jiang Tian •  Cheng\nZhong •  Zhongchao Shi  •  Yang Zhang •  Zhiqiang He\n\nCoronavirus disease 2019 (COVID-19) is a highly contagious virus spreading all\naround the world. Deep learning has been adopted as an effective technique to\naid COVID-19 detection and segmentation from computed tomography (CT)\nimages... The major challenge lies in the inadequate public COVID-19 datasets.\nRecently, transfer learning has become a widely used technique that leverages\nthe knowledge gained while solving one problem and applying it to a different\nbut related problem. However, it remains unclear whether various non-COVID19\nlung lesions could contribute to segmenting COVID-19 infection areas and how\nto better conduct this transfer procedure. This paper provides a way to\nunderstand the transferability of non-COVID19 lung lesions. Based on a\npublicly available COVID-19 CT dataset and three public non-COVID19 datasets,\nwe evaluate four transfer learning methods using 3D U-Net as a standard\nencoder-decoder method. The results reveal the benefits of transferring\nknowledge from non-COVID19 lung lesions, and learning from multiple lung\nlesion datasets can extract more general features, leading to accurate and\nrobust pre-trained models. We further show the capability of the encoder to\nlearn feature representations of lung lesions, which improves segmentation\naccuracy and facilitates training convergence. In addition, our proposed\nHybrid-encoder learning method incorporates transferred lung lesion features\nfrom non-COVID19 datasets effectively and achieves significant improvement.\nThese findings promote new insights into transfer learning for COVID-19 CT\nimage segmentation, which can also be further generalized to other medical\ntasks. (read more)\n\n__PDF Abstract\n\n  Code\n\n__Edit\n\nAdd Remove Mark official\n\n* * *\n\nNo code implementations yet. Submit  your code now\n\n  Tasks\n\n__Edit\n\nAdd Remove\n\n* * *\n\n  * COMPUTED TOMOGRAPHY (CT)\n\n  * SEMANTIC SEGMENTATION\n\n  * TRANSFER LEARNING\n\n  Datasets\n\n__Edit\n\n* * *\n\n__  Add Datasets  introduced or used in this paper\n\n  Results from the Paper\n\n__Edit\n\n* * *\n\n__  Submit  results from this paper  to get state-of-the-art GitHub badges and\nhelp the community compare results to other papers.\n\n   Methods used in the Paper\n\n__Edit\n\nAdd Remove\n\n* * *\n\nMETHOD TYPE  \n  \nConcatenated Skip Connection\n\nSkip Connections  \n  \nReLU\n\nActivation Functions  \n  \nMax Pooling\n\nPooling Operations  \n  \nConvolution\n\nConvolutions  \n  \nU-Net\n\nSemantic Segmentation Models  \n  \nContact us on:  hello@paperswithcode.com. Papers With Code is a free resource\nwith all data licensed under CC-BY-SA.\n\nTerms Privacy Cookies policy\n\n",
          "lemma_content": "browse State-of-the-Art dataset More method rc2020 trend portal sign subscribe PwC Newsletter stay informed late trending ML paper code research development library method dataset read previous issue subscribe join community need log edit can create new account one discuss change _ _ Slack add new code entry paper GitHub GitLab BitBucket URL official code paper author submit remove code repository paper Mark official implementation paper author official implementation multiple official implementation submit add new evaluation result task Computed Tomography CT Transfer Learning Semantic segmentation list add task dataset model name metric name high well metric metric value use extra training datum datum evaluate submit add new evaluation result task DATASET model metric name metric value global RANK remove add task × attach task compute TOMOGRAPHY CT semantic segmentation transfer learning add list create new task new task name top-level area Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base Medical Methodology Miscellaneous Music Natural Language Processing Playing Games Reasoning robot Speech Time Series parent task description submit remove task compute TOMOGRAPHY CT semantic segmentation transfer learn add method × attach method CONCATENATED SKIP connection RELU max POOLING CONVOLUTION U-NET add list create new method new method name ReLU new method full name Rectified Linear Unit paper method introduce method category Activation Functions _ match add can add new category _ markdown description optional LaTeX$ enable can edit feel free start succinct _ submit remove method CONCATENATED connection RELU MAX POOLING CONVOLUTION U-NET edit Datasets add remove dataset introduce paper add remove other dataset use paper paper introduce new dataset _ _ add new dataset save Non-COVID19 Lung Lesion Help investigate transferability COVID-19 CT Image Segmentation 23 Jun 2020 • Yixin Wang • Yao Zhang • Yang Liu • Jiang Tian • Cheng Zhong • Zhongchao Shi • Yang Zhang • Zhiqiang He Coronavirus disease 2019 COVID-19 contagious virus spread world Deep learning adopt effective technique aid covid-19 detection segmentation compute tomography CT image major challenge lie inadequate public covid-19 dataset transfer learning become use technique leverage knowledge gain solve one problem apply different related problem remain unclear various non-covid19 lung lesion could contribute segment COVID-19 infection area conduct transfer procedure paper provide way understand transferability non-covid19 lung lesion base available CT dataset three public non-covid19 dataset evaluate four transfer learning method use 3D U-Net standard encoder-decoder method result reveal benefit transfer knowledge non-covid19 lung lesion learn multiple lung lesion dataset can extract more general feature lead accurate robust pre-trained model show capability encoder learn feature representation lung lesion improve segmentation accuracy facilitate training convergence addition proposed hybrid-encoder learning method incorporate transfer lung lesion feature non-covid19 dataset achieve significant improvement finding promote new insight transfer learn COVID-19 CT image segmentation can generalize other medical task read _ _ PDF Abstract code _ _ edit add remove Mark official code implementation submit code task _ _ edit add remove compute TOMOGRAPHY CT semantic segmentation transfer learning dataset _ _ edit _ _ Add Datasets introduce use paper result Paper _ _ edit _ _ submit result paper state-of-the-art GitHub badge help community compare result other paper method use Paper _ _ edit add remove method type Concatenated Skip connection Skip Connections ReLU Activation Functions Max Pooling Pooling Operations Convolution convolution U-Net Semantic Segmentation model contact hello@paperswithcode.com paper Code free resource datum license CC-BY-SA term Privacy Cookies policy",
          "kg_generic": [
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "the PwC Newsletter",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computed Tomography (CT)",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Data",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "DATASET",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Computer Vision",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Natural Language Processing",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Yixin Wang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yao Zhang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yang Liu",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "Yang Zhang",
              "property": "rel:instanceof",
              "value": "person"
            },
            {
              "subject": "2019",
              "property": "rel:instanceof",
              "value": "date"
            },
            {
              "subject": "Deep learning",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "COVID-19 CT",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "dataset",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "non-COVID19",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "non-COVID19",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Datasets",
              "property": "rel:instanceof",
              "value": "computer-science-term"
            },
            {
              "subject": "Concatenated Skip Connection",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "ReLU  Activation Functions",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "Max Pooling  Pooling Operations",
              "property": "rel:instanceof",
              "value": "organization"
            },
            {
              "subject": "hello@paperswithcode.com",
              "property": "rel:instanceof",
              "value": "email"
            },
            {
              "subject": "-PRON-",
              "property": "can create",
              "value": "new account",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "can add",
              "value": "new category",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "introduce",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "_ _",
              "property": "add",
              "value": "new dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "major challenge",
              "property": "lie in",
              "value": "inadequate public covid-19 dataset",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "transfer learning",
              "property": "become",
              "value": "technique",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "paper",
              "property": "provide",
              "value": "way",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "evaluate",
              "value": "four transfer learning method",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "four transfer learning method",
              "property": "use",
              "value": "3D U-Net",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "result",
              "property": "reveal",
              "value": "benefit",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "multiple lung lesion dataset",
              "property": "can extract",
              "value": "more general feature",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "-PRON-",
              "property": "further show",
              "value": "capability",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "proposed hybrid-encoder learning method",
              "property": "incorporate transfer",
              "value": "lung lesion feature",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "finding",
              "property": "promote",
              "value": "new insight",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "finding",
              "property": "promote",
              "value": "insight into transfer",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "insight into transfer",
              "property": "learn for",
              "value": "COVID-19 CT image segmentation",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "community",
              "property": "compare",
              "value": "result",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "method",
              "property": "use in",
              "value": "Paper",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "all datum",
              "property": "license under",
              "value": "CC-BY-SA",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "Computed Tomography",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute tomography",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            },
            {
              "subject": "CT",
              "property": "",
              "value": "compute TOMOGRAPHY",
              "automatically_fill": true,
              "confidence": 0.25,
              "weight": 0.5
            }
          ],
          "kg_date": [],
          "kg_number": [],
          "kg_geopoint": [],
          "category": [
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "computer vision",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "neuromorphic computing",
                "robotic"
              ],
              "scores": [
                0.26438368344679475,
                0.29321503918617964,
                0.12231990694999695,
                0.15484154410660267,
                0.11743797920644283,
                0.021713352296501398,
                0.008766695857048035,
                0.01732184085994959
              ]
            },
            {
              "labels": [
                "machine learning",
                "natural language processing",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.39574725553393364,
                0.17099515534937382,
                0.09613017551600933,
                0.15369271859526634,
                0.07305089849978685,
                0.06005129311233759,
                0.017354030162096024,
                0.03297863621264696
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "computer vision",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.31806728709489107,
                0.22105415957048535,
                0.08205175027251244,
                0.22461498156189919,
                0.05322249513119459,
                0.05979491537436843,
                0.03162109153345227,
                0.009573288261890411
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.4909241273999214,
                0.13214559201151133,
                0.19954854622483253,
                0.08628922235220671,
                0.03814082033932209,
                0.02081833127886057,
                0.00982022937387228,
                0.022313068620860577
              ]
            },
            {
              "labels": [
                "natural language processing",
                "machine learning",
                "deep learning",
                "reinforcement learning",
                "computer vision",
                "robotic",
                "internet of things",
                "neuromorphic computing"
              ],
              "scores": [
                0.4585575945675373,
                0.2117945570498705,
                0.11914862040430307,
                0.10109944362193346,
                0.045194832142442465,
                0.03075081529095769,
                0.024590734392404556,
                0.008863353170454502
              ]
            },
            {
              "labels": [
                "deep learning",
                "natural language processing",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.35796792805194855,
                0.17779557686299086,
                0.18395226635038853,
                0.09181044530123472,
                0.10868630930781364,
                0.036832092329859734,
                0.013607431203126907,
                0.029347898438572884
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "internet of things",
                "reinforcement learning",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.2768703866750002,
                0.3099802937358618,
                0.13965896517038345,
                0.0948754083365202,
                0.07664071209728718,
                0.0451883664354682,
                0.01747892238199711,
                0.03930693306028843
              ]
            },
            {
              "labels": [
                "deep learning",
                "machine learning",
                "computer vision",
                "natural language processing",
                "reinforcement learning",
                "neuromorphic computing",
                "internet of things",
                "robotic"
              ],
              "scores": [
                0.3168510999530554,
                0.2962465863674879,
                0.12437382712960243,
                0.09212074428796768,
                0.09186259005218744,
                0.01853969506919384,
                0.0395191665738821,
                0.02048627007752657
              ]
            },
            {
              "labels": [
                "deep learning",
                "reinforcement learning",
                "machine learning",
                "natural language processing",
                "computer vision",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.24270982574671507,
                0.1511044967919588,
                0.23542239889502525,
                0.18262582551687956,
                0.07781009189784527,
                0.05846101092174649,
                0.039993236772716045,
                0.011873195879161358
              ]
            },
            {
              "labels": [
                "machine learning",
                "reinforcement learning",
                "deep learning",
                "internet of things",
                "natural language processing",
                "robotic",
                "computer vision",
                "neuromorphic computing"
              ],
              "scores": [
                0.3544415161013603,
                0.1337179709225893,
                0.20740500325337052,
                0.09462795685976744,
                0.11346991686150432,
                0.044153730385005474,
                0.03619583137333393,
                0.015988169237971306
              ]
            },
            {
              "labels": [
                "natural language processing",
                "computer vision",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing"
              ],
              "scores": [
                0.44448293349705637,
                0.32771284505724907,
                0.09633023082278669,
                0.06046190904453397,
                0.03502765134908259,
                0.019437593640759587,
                0.011415323475375772,
                0.005131527781486511
              ]
            },
            {
              "labels": [
                "natural language processing",
                "deep learning",
                "machine learning",
                "reinforcement learning",
                "internet of things",
                "robotic",
                "neuromorphic computing",
                "computer vision"
              ],
              "scores": [
                0.269291577860713,
                0.28980145137757063,
                0.23364081420004368,
                0.08541306294500828,
                0.04984228778630495,
                0.028777304105460644,
                0.015079528093338013,
                0.028153878170996904
              ]
            }
          ],
          "sentiment": [
            {
              "label": "NEGATIVE",
              "score": 0.9955170154571533,
              "spans": [
                {
                  "approx_length": 125,
                  "score": 0.9955170154571533,
                  "spanid": 0
                }
              ]
            },
            {
              "label": "NEGATIVE",
              "score": 0.8035062714056536,
              "spans": [
                {
                  "approx_length": 249,
                  "score": 0.751926600933075,
                  "spanid": 0
                },
                {
                  "approx_length": 252,
                  "score": 0.9972976446151733,
                  "spanid": 1
                },
                {
                  "approx_length": 301,
                  "score": 0.9994184374809265,
                  "spanid": 2
                },
                {
                  "approx_length": 183,
                  "score": 0.9957739114761353,
                  "spanid": 3
                },
                {
                  "approx_length": 217,
                  "score": 0.997108519077301,
                  "spanid": 4
                },
                {
                  "approx_length": 215,
                  "score": 0.9990337491035461,
                  "spanid": 5
                },
                {
                  "approx_length": 292,
                  "score": 0.9796426296234131,
                  "spanid": 6
                },
                {
                  "approx_length": 185,
                  "score": 0.9967429637908936,
                  "spanid": 7
                },
                {
                  "approx_length": 184,
                  "score": 0.9989454746246338,
                  "spanid": 8
                },
                {
                  "approx_length": 199,
                  "score": 0.9954511523246765,
                  "spanid": 9
                },
                {
                  "approx_length": 206,
                  "score": 0.996894359588623,
                  "spanid": 10
                },
                {
                  "approx_length": 215,
                  "score": 0.9991269111633301,
                  "spanid": 11
                },
                {
                  "approx_length": 310,
                  "score": 0.9957551956176758,
                  "spanid": 12
                },
                {
                  "approx_length": 315,
                  "score": 0.9940146207809448,
                  "spanid": 14
                },
                {
                  "approx_length": 234,
                  "score": 0.9988424777984619,
                  "spanid": 18
                },
                {
                  "approx_length": 209,
                  "score": 0.9954366683959961,
                  "spanid": 19
                },
                {
                  "approx_length": 247,
                  "score": 0.9967073202133179,
                  "spanid": 20
                },
                {
                  "approx_length": 294,
                  "score": 0.9890193343162537,
                  "spanid": 21
                }
              ]
            },
            {
              "label": "POSITIVE",
              "score": 0.15769270062446594,
              "spans": [
                {
                  "approx_length": 329,
                  "score": 0.954837441444397,
                  "spanid": 13
                },
                {
                  "approx_length": 350,
                  "score": 0.5157932639122009,
                  "spanid": 15
                },
                {
                  "approx_length": 351,
                  "score": 0.9992300868034363,
                  "spanid": 16
                },
                {
                  "approx_length": 425,
                  "score": 0.9993786215782166,
                  "spanid": 17
                }
              ]
            }
          ],
          "summary": [
            " Does Non - COVID19 Lung Lesion help ?  Investigating Transferability in",
            " Use the weekly PwC Newsquiz to check out the latest trending ML papers with code, research developments, libraries, methods and datasets . The RC2020 Trends Report will be published on Thursday, August 31,",
            " Metric value :  Uses extra training data Data evaluated on Submit Add a new evaluation result row . New task name :  Top - level area :  Adversarial Audio Computer Code Computer Vision Graphs Knowledge Base",
            " Add a new method to Markdown . Use Markdown to create a Markdown list of methods . Add methods to the list . Add a method that is not in the list? Add methods:  Create a new",
            " This paper provides a way to understand the transferability of non - COVID19 lung lesions . Based on a publicly available COVID - 19 CT dataset and three public datasets . The major challenge lies in the inadequate public",
            " We evaluate four transfer learning methods using 3D U - Net as a standard encoder - decoder method . The results reveal the benefits of transferring knowledge from non - COVID19 lung lesions . Learning from multiple lung",
            " Submit results from this paper to get GitHub badges and help the community compare results to other papers . Submit results to get state - of - the - art GitHub badges ."
          ],
          "text_suggester": [
            {
              "input": "a change",
              "weight": 1
            },
            {
              "input": "a code repository",
              "weight": 1
            },
            {
              "input": "a different but related problem",
              "weight": 1
            },
            {
              "input": "a free resource",
              "weight": 1
            },
            {
              "input": "a highly contagious virus",
              "weight": 1
            },
            {
              "input": "a method",
              "weight": 17
            },
            {
              "input": "a new account",
              "weight": 1
            },
            {
              "input": "a new category",
              "weight": 1
            },
            {
              "input": "a new code entry",
              "weight": 1
            },
            {
              "input": "a new dataset",
              "weight": 17
            },
            {
              "input": "a new method",
              "weight": 1
            },
            {
              "input": "a new task",
              "weight": 1
            },
            {
              "input": "a task",
              "weight": 33
            },
            {
              "input": "a way",
              "weight": 1
            },
            {
              "input": "a widely used technique",
              "weight": 1
            },
            {
              "input": "abstract code",
              "weight": 1
            },
            {
              "input": "add a new category",
              "weight": 32
            },
            {
              "input": "add remove mark official",
              "weight": 50
            },
            {
              "input": "all data",
              "weight": 1
            },
            {
              "input": "an effective technique",
              "weight": 1
            },
            {
              "input": "attached methods",
              "weight": 1
            },
            {
              "input": "attached tasks",
              "weight": 1
            },
            {
              "input": "bitbucket url",
              "weight": 1
            },
            {
              "input": "cheng zhong",
              "weight": 1
            },
            {
              "input": "code",
              "weight": 16
            },
            {
              "input": "compute",
              "weight": 6
            },
            {
              "input": "concatenated skip connection",
              "weight": 1
            },
            {
              "input": "connection",
              "weight": 5
            },
            {
              "input": "convolutions",
              "weight": 1
            },
            {
              "input": "coronavirus",
              "weight": 1
            },
            {
              "input": "create",
              "weight": 9
            },
            {
              "input": "create a new account",
              "weight": 41
            },
            {
              "input": "data",
              "weight": 1
            },
            {
              "input": "dataset",
              "weight": 48
            },
            {
              "input": "datasets",
              "weight": 1
            },
            {
              "input": "datum",
              "weight": 16
            },
            {
              "input": "deep learning",
              "weight": 1
            },
            {
              "input": "edit",
              "weight": 80
            },
            {
              "input": "edit datasets",
              "weight": 1
            },
            {
              "input": "extra training data",
              "weight": 1
            },
            {
              "input": "feature",
              "weight": 14
            },
            {
              "input": "feature representations",
              "weight": 1
            },
            {
              "input": "first",
              "weight": 8
            },
            {
              "input": "four",
              "weight": 8
            },
            {
              "input": "four transfer learning methods",
              "weight": 1
            },
            {
              "input": "full name",
              "weight": 1
            },
            {
              "input": "github",
              "weight": 1
            },
            {
              "input": "gitlab",
              "weight": 1
            },
            {
              "input": "implementation",
              "weight": 13
            },
            {
              "input": "introduce",
              "weight": 10
            },
            {
              "input": "jiang tian",
              "weight": 1
            },
            {
              "input": "late trending ml paper",
              "weight": 100
            },
            {
              "input": "learn",
              "weight": 3
            },
            {
              "input": "learning",
              "weight": 8
            },
            {
              "input": "learning semantic segmentation",
              "weight": 1
            },
            {
              "input": "lesion",
              "weight": 11
            },
            {
              "input": "libraries",
              "weight": 1
            },
            {
              "input": "list",
              "weight": 2
            },
            {
              "input": "lung",
              "weight": 11
            },
            {
              "input": "lung lesions",
              "weight": 1
            },
            {
              "input": "mark",
              "weight": 1
            },
            {
              "input": "markdown description",
              "weight": 1
            },
            {
              "input": "max pooling",
              "weight": 1
            },
            {
              "input": "method",
              "weight": 32
            },
            {
              "input": "methods",
              "weight": 1
            },
            {
              "input": "methods rc2020 trends",
              "weight": 1
            },
            {
              "input": "metric",
              "weight": 13
            },
            {
              "input": "metric name",
              "weight": 1
            },
            {
              "input": "metric value",
              "weight": 1
            },
            {
              "input": "model",
              "weight": 17
            },
            {
              "input": "more general features",
              "weight": 1
            },
            {
              "input": "multiple lung lesion datasets",
              "weight": 1
            },
            {
              "input": "name",
              "weight": 11
            },
            {
              "input": "new",
              "weight": 11
            },
            {
              "input": "new insights",
              "weight": 1
            },
            {
              "input": "new method",
              "weight": 1
            },
            {
              "input": "new method full name",
              "weight": 72
            },
            {
              "input": "new method name",
              "weight": 1
            },
            {
              "input": "new task name",
              "weight": 1
            },
            {
              "input": "no match",
              "weight": 1
            },
            {
              "input": "no official implementation",
              "weight": 1
            },
            {
              "input": "official",
              "weight": 14
            },
            {
              "input": "official code",
              "weight": 1
            },
            {
              "input": "one",
              "weight": 8
            },
            {
              "input": "one problem",
              "weight": 1
            },
            {
              "input": "one problem and apply",
              "weight": 59
            },
            {
              "input": "other",
              "weight": 10
            },
            {
              "input": "other datasets",
              "weight": 1
            },
            {
              "input": "other medical tasks",
              "weight": 1
            },
            {
              "input": "other papers",
              "weight": 1
            },
            {
              "input": "paper",
              "weight": 32
            },
            {
              "input": "paper authors",
              "weight": 1
            },
            {
              "input": "paper with code",
              "weight": 8
            },
            {
              "input": "papers",
              "weight": 1
            },
            {
              "input": "parent task",
              "weight": 1
            },
            {
              "input": "pdf",
              "weight": 1
            },
            {
              "input": "playing games reasoning robots",
              "weight": 1
            },
            {
              "input": "pooling operations",
              "weight": 1
            },
            {
              "input": "portals",
              "weight": 1
            },
            {
              "input": "previous issues",
              "weight": 1
            },
            {
              "input": "relu",
              "weight": 1
            },
            {
              "input": "relu activation functions",
              "weight": 1
            },
            {
              "input": "remove",
              "weight": 11
            },
            {
              "input": "remove mark official",
              "weight": 1
            },
            {
              "input": "research developments",
              "weight": 1
            },
            {
              "input": "result",
              "weight": 16
            },
            {
              "input": "results",
              "weight": 1
            },
            {
              "input": "segmentation",
              "weight": 16
            },
            {
              "input": "segmentation accuracy",
              "weight": 1
            },
            {
              "input": "semantic",
              "weight": 2
            },
            {
              "input": "semantic segmentation",
              "weight": 17
            },
            {
              "input": "semantic segmentation models",
              "weight": 1
            },
            {
              "input": "significant improvement",
              "weight": 1
            },
            {
              "input": "skip connections",
              "weight": 1
            },
            {
              "input": "something",
              "weight": 17
            },
            {
              "input": "speech time series",
              "weight": 1
            },
            {
              "input": "submit",
              "weight": 6
            },
            {
              "input": "task",
              "weight": 16
            },
            {
              "input": "task dataset model metric name metric value global rank",
              "weight": 1
            },
            {
              "input": "tasks",
              "weight": 1
            },
            {
              "input": "terms privacy cookies policy",
              "weight": 1
            },
            {
              "input": "the benefits",
              "weight": 1
            },
            {
              "input": "the capability",
              "weight": 1
            },
            {
              "input": "the community",
              "weight": 17
            },
            {
              "input": "the encoder",
              "weight": 1
            },
            {
              "input": "the knowledge",
              "weight": 1
            },
            {
              "input": "the latest trending ml papers",
              "weight": 1
            },
            {
              "input": "the list",
              "weight": 33
            },
            {
              "input": "the major challenge",
              "weight": 1
            },
            {
              "input": "the metric",
              "weight": 1
            },
            {
              "input": "the official implementation",
              "weight": 1
            },
            {
              "input": "the paper",
              "weight": 1
            },
            {
              "input": "the pwc newsletter",
              "weight": 1
            },
            {
              "input": "the results",
              "weight": 1
            },
            {
              "input": "the transferability",
              "weight": 1
            },
            {
              "input": "the world",
              "weight": 1
            },
            {
              "input": "these findings",
              "weight": 1
            },
            {
              "input": "this paper",
              "weight": 98
            },
            {
              "input": "this transfer procedure",
              "weight": 1
            },
            {
              "input": "three",
              "weight": 8
            },
            {
              "input": "tomography",
              "weight": 5
            },
            {
              "input": "training convergence",
              "weight": 1
            },
            {
              "input": "transfer",
              "weight": 7
            },
            {
              "input": "transfer learning",
              "weight": 33
            },
            {
              "input": "transferred lung lesion features",
              "weight": 1
            },
            {
              "input": "use",
              "weight": 12
            },
            {
              "input": "yang liu",
              "weight": 1
            },
            {
              "input": "yang zhang",
              "weight": 1
            },
            {
              "input": "yao zhang",
              "weight": 1
            },
            {
              "input": "yixin wang",
              "weight": 1
            },
            {
              "input": "you",
              "weight": 1
            },
            {
              "input": "your code",
              "weight": 1
            },
            {
              "input": "zhiqiang",
              "weight": 1
            },
            {
              "input": "zhongchao shi",
              "weight": 1
            }
          ],
          "data_source": "ai4eu_qwant_ai",
          "source_doc_id": "https://paperswithcode.com/paper/does-non-covid19-lung-lesion-help",
          "plugin_name": "TheresisSearchPlugin"
        },
        "_score": 0.04530352029267157,
        "_index": "cache_index",
        "_id": "cacheid_d339b260b88d148eceb3986be92e5b50",
        "_type": "_doc",
        "highlight": {
          "content": [
            "×\n\nAdd or remove <b>datasets</b>  introduced  in this paper:\n\nAdd or remove other <b>datasets</b>  used  in this",
            "paper:\n\nPaper introduces a new <b>dataset</b>?",
            "__Add a new <b>dataset</b> here\n\nSave\n\n  Does Non-COVID19 Lung Lesion Help?",
            "The major challenge lies in the inadequate public COVID-19 <b>datasets</b>.",
            "Based on a\npublicly available COVID-19 CT <b>dataset</b> and three public non-COVID19 <b>datasets</b>,\nwe evaluate"
          ]
        },
        "_source_score": 1.75,
        "_aggregator_score": 0.002842749511868881,
        "see_also": [
          {
            "doc_id": "cacheid_9e3395791abe706391f412bcaffab36d",
            "source_doc_id": "http://videolectures.net/geoffrey_e_hinton/",
            "title": "Geoffrey E. Hinton - Department of Computer Science, University of Toronto -\nVideoLectures.NET\n\n"
          },
          {
            "doc_id": "cacheid_51d5a9f20f6d7ed10f6b124f6e30d9a7",
            "source_doc_id": "https://www.forbes.com/sites/bernardmarr/2018/10/05/how-does-amazons-alexa-really-work/",
            "title": "Machine Learning In Practice: How Does Amazon's Alexa Really Work?\n\n"
          },
          {
            "doc_id": "cacheid_ea5e2281df7439b8f0da4291668c220c",
            "source_doc_id": "entity:user/428:en",
            "title": "hao wang"
          },
          {
            "doc_id": "cacheid_fd9f0416276d13bcdb3a40ed84b0dc37",
            "source_doc_id": "entity:user/1830:en",
            "title": "stephane gerart"
          },
          {
            "doc_id": "cacheid_06779253062a7ece801cac21bf889bc5",
            "source_doc_id": "entity:user/1891:en",
            "title": "olivier dehoux"
          }
        ],
        "semantic_content": " . *   *   *  COMPUTED TOMOGRAPHY  ( CT )   *  SEMANTIC SEGMENTATION  *  TRANSFER LEARNING Datasets  _  _ Edit  *   *   *   _  _  Add Datasets introduced or used in this paper Results from the Paper  _  _ Edit  *",
        "short_answer": [
          {
            "score": 0.06067285314202309,
            "start": 182,
            "end": 217,
            "answer": "Results from the Paper  _   _  Edit"
          }
        ]
      }
    ],
    "total_docs": 6235,
    "by_source_information": [
      {
        "cache_index": {
          "search_status": 200,
          "total_docs": 214,
          "error": "",
          "warning": "",
          "log": "",
          "max_score_unnormalized": 42.795277
        }
      },
      {
        "ai4eu_qwant_ai": {
          "search_status": 200,
          "total_docs": 6021,
          "error": " | ",
          "warning": " | ",
          "log": " | ",
          "max_score_unnormalized": 0
        }
      }
    ],
    "query": "{\"from\": 0, \"size\": 75, \"query\": {\"bool\": {\"should\": [{\"match\": {\"title\": {\"query\": \"dataset\", \"boost\": 2}}}, {\"match\": {\"content\": \"dataset\"}}]}}, \"highlight\": {\"pre_tags\": [\"<b>\"], \"post_tags\": [\"</b>\"], \"fields\": {\"title\": {\"number_of_fragments\": 1}, \"content\": {\"number_of_fragments\": 5}}}}",
    "req_time": 7.6991894245147705
  },
  "config": "demos/ai4eu/configs/search-engine-config.json",
  "service": "search",
  "version": "1.0.0",
  "date": "2021/01"
}
